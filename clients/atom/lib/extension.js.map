{"version":3,"sources":["../webpack/bootstrap",".././node_modules/atom-languageclient/build/lib/adapters/apply-edit-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/autocomplete-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/code-action-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/code-format-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/code-highlight-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/datatip-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/definition-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/document-sync-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/find-references-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/linter-push-v2-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/logging-console-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/notifications-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/outline-view-adapter.js",".././node_modules/atom-languageclient/build/lib/adapters/signature-help-adapter.js",".././node_modules/atom-languageclient/build/lib/auto-languageclient.js",".././node_modules/atom-languageclient/build/lib/convert.js",".././node_modules/atom-languageclient/build/lib/download-file.js",".././node_modules/atom-languageclient/build/lib/languageclient.js",".././node_modules/atom-languageclient/build/lib/logger.js",".././node_modules/atom-languageclient/build/lib/main.js",".././node_modules/atom-languageclient/build/lib/server-manager.js",".././node_modules/atom-languageclient/build/lib/utils.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/lib/main.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/lib/protocol.foldingRange.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/lib/protocol.implementation.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/lib/protocol.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/lib/utils/is.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/cancellation.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/events.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/is.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/linkedMap.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/main.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/messageReader.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/messageWriter.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/messages.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/pipeSupport.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/socketSupport.js",".././node_modules/atom-languageclient/node_modules/vscode-languageserver-types/lib/esm/main.js",".././node_modules/fuzzaldrin-plus/lib/filter.js",".././node_modules/fuzzaldrin-plus/lib/fuzzaldrin.js",".././node_modules/fuzzaldrin-plus/lib/matcher.js",".././node_modules/fuzzaldrin-plus/lib/pathScorer.js",".././node_modules/fuzzaldrin-plus/lib/query.js",".././node_modules/fuzzaldrin-plus/lib/scorer.js",".././node_modules/vscode-jsonrpc/lib/cancellation.js",".././node_modules/vscode-jsonrpc/lib/events.js",".././node_modules/vscode-jsonrpc/lib/is.js",".././node_modules/vscode-jsonrpc/lib/linkedMap.js",".././node_modules/vscode-jsonrpc/lib/main.js",".././node_modules/vscode-jsonrpc/lib/messageReader.js",".././node_modules/vscode-jsonrpc/lib/messageWriter.js",".././node_modules/vscode-jsonrpc/lib/messages.js",".././node_modules/vscode-jsonrpc/lib/pipeSupport.js",".././node_modules/vscode-jsonrpc/lib/socketSupport.js",".././src/main.ts","../external \"assert\"","../external \"child_process\"","../external \"crypto\"","../external \"events\"","../external \"fs\"","../external \"net\"","../external \"os\"","../external \"path\"","../external \"url\""],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFa;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,2EAAY;AACtC;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,kCAAkC,qBAAqB;AACvD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,sCAAsC,qBAAqB;AAC3D;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4DAA4D,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK,GAAG,aAAa,GAAG,aAAa;AACrF;AACA;AACA;AACA;AACA,2CAA2C,+lT;;;;;;;;;;;;AClG9B;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,2EAAY;AACtC,cAAc,mBAAO,CAAC,uEAAU;AAChC,0BAA0B,mBAAO,CAAC,yEAAiB;AACnD,yBAAyB,mBAAO,CAAC,yFAAmB;AACpD,eAAe,mBAAO,CAAC,8HAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,wBAAwB,yBAAyB;AACjD,yEAAyE,eAAe,MAAM;AAC9F,gBAAgB,yBAAyB;AACzC;AACA,kBAAkB,QAAQ,QAAQ,MAAM,KAAK,4BAA4B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,cAAc;AACnG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sEAAsE;AACrH;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,0BAA0B,4BAA4B;AACtD,uBAAuB,OAAO;AAC9B,yEAAyE,eAAe,MAAM;AAC9F,gBAAgB,yBAAyB;AACzC;AACA,kBAAkB,QAAQ,QAAQ,4BAA4B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uBAAuB,MAAM,KAAK,4BAA4B;AAC9D,6BAA6B,MAAM,KAAK,OAAO;AAC/C;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD,6BAA6B,WAAW;AACxC;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA,wBAAwB,yBAAyB;AACjD,iCAAiC,OAAO;AACxC,0BAA0B,QAAQ;AAClC;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA,iCAAiC,OAAO;AACxC,0BAA0B,QAAQ;AAClC;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB;AACnB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,+BAA+B,MAAM,KAAK,eAAe,eAAe,eAAe;AACvF;AACA,wBAAwB,yBAAyB;AACjD,+DAA+D,eAAe,MAAM;AACpF,gBAAgB,yBAAyB;AACzC;AACA,kBAAkB,IAAI;AACtB;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC,yBAAyB,4BAA4B;AACrD,wBAAwB,yBAAyB;AACjD,+DAA+D,eAAe,MAAM;AACpF,gBAAgB,yBAAyB;AACzC;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC,2BAA2B,4BAA4B;AACvD;AACA,mBAAmB,4BAA4B,mBAAmB,eAAe;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC,2BAA2B,WAAW;AACtC,0BAA0B,4BAA4B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,22uC;;;;;;;;;;;;ACjV9B;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,kBAAkB,mBAAO,CAAC,2EAAY;AACtC,6BAA6B,mBAAO,CAAC,yGAAsB;AAC3D,yBAAyB,mBAAO,CAAC,yFAAmB;AACpD;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD,mCAAmC,mBAAmB;AACtD,4BAA4B,WAAW;AACvC,2BAA2B,MAAM;AACjC,2BAA2B,0BAA0B;AACrD;AACA;AACA,kBAAkB,QAAQ,QAAQ,MAAM,KAAK,mBAAmB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,2CAA2C,2xS;;;;;;;;;;;;ACpG9B;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,2EAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD,mCAAmC,mBAAmB;AACtD,4BAA4B,WAAW;AACvC,oCAAoC,MAAM;AAC1C;AACA,kBAAkB,QAAQ,QAAQ,MAAM,KAAK,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,yBAAyB,yBAAyB;AAClD,4BAA4B,WAAW;AACvC;AACA,kBAAkB,QAAQ,QAAQ,MAAM,KAAK,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA,4BAA4B,WAAW;AACvC;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,WAAW;AACzD;AACA,yBAAyB,yBAAyB;AAClD,2BAA2B,MAAM;AACjC,4BAA4B,WAAW;AACvC;AACA,kBAAkB,QAAQ,QAAQ,MAAM,KAAK,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA,SAA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ACA,4BAA4B,WAAW;AACvC,2BAA2B,MAAM;AACjC;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oDAAoD,SAAS,aAAa,MAAM;AAChF;AACA;AACA,2CAA2C,SAAS,eAAe,MAAM,KAAK;AAC9E;AACA,mBAAmB,MAAM,KAAK,SAAS,MAAM,KAAK;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM,KAAK,SAAS,2BAA2B,WAAW;AACrF;AACA,yBAAyB,MAAM,KAAK,SAAS;AAC7C;AACA;AACA,mBAAmB,MAAM,KAAK,WAAW,kCAAkC,SAAS;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2CAA2C,myR;;;;;;;;;;;;ACvF9B;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,2EAAY;AACtC,yBAAyB,mBAAO,CAAC,yFAAmB;AACpD,6BAA6B,mBAAO,CAAC,yGAAsB;AAC3D,eAAe,mBAAO,CAAC,8HAAM;AAC7B,cAAc,mBAAO,CAAC,uEAAU;AAChC;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD;AACA,yBAAyB,yBAAyB;AAClD;AACA,6DAA6D,WAAW,gBAAgB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA,yBAAyB,sBAAsB;AAC/C;AACA,qBAAqB,WAAW;AAChC,yBAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,+BAA+B;AAC7D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gCAAgC,cAAc,uBAAuB;AACrE;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA,kBAAkB,+BAA+B,gCAAgC,cAAc;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB;AACnB;AACA,+CAA+C,gBAAgB,2BAA2B,EAAE;AAC5F;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA,SAAS;AACT;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACrC;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,6DAA6D,MAAM;AACnE;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,uFAAuF,MAAM;AAC7F;AACA,SAAS;AACT;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wCAAwC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qDAAqD;AAChF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,mDAAmD,gBAAgB,cAAc,EAAE;AACnF;AACA;AACA;AACA,2BAA2B,6DAA6D,GAAG,uEAAuE;AAClK,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA;AACA,2CAA2C,uxnC;;;;;;;;;;;;ACzW9B;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,2EAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW,MAAM,MAAM;AACnC;AACA,yBAAyB,yBAAyB;AAClD;AACA,4BAA4B,WAAW;AACvC,2BAA2B,MAAM;AACjC;AACA,kBAAkB,QAAQ,eAAe,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB,gBAAgB,eAAe,WAAW,iBAAiB,MAAM;AAC1F;AACA,qBAAqB,WAAW;AAChC,oBAAoB,MAAM;AAC1B;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA,0BAA0B,SAAS,SAAS,UAAU;AACtD;AACA,uBAAuB,SAAS;AAChC;AACA,kBAAkB,UAAU,0BAA0B,SAAS;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW,iBAAiB,MAAM;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,unP;;;;;;;;;;;;ACpF9B;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,2EAAY;AACtC,yBAAyB,mBAAO,CAAC,yFAAmB;AACpD;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD,yBAAyB,yBAAyB;AAClD;AACA,yBAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB,aAAa,gBAAgB;AAC7E;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA,6DAA6D,gBAAgB;AAC7E;AACA,uBAAuB,yBAAyB;AAChD,gEAAgE,gBAAgB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C,QAAQ,UAAU;AAClB;AACA;AACA,0BAA0B,WAAW;AACrC;AACA,kBAAkB,UAAU,oBAAoB,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,UAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mhW;;;;;;;;;;;;AC5G9B;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,yFAAmB;AACpD;AACA;AACA,qBAAqB,sBAAsB;AAC3C,yBAAyB,yBAAyB;AAClD;AACA,yBAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB,aAAa,WAAW;AAC1E;AACA,sBAAsB,WAAW;AACjC;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2pJ;;;;;;;;;;;;ACrD9B;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,yFAAmB;AACpD;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,KAAK,GAAG,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK,GAAG,YAAY;AAC3C,SAAS;AACT;AACA,0BAA0B,kBAAkB;AAC5C,mBAAmB,mBAAmB;AACtC;AACA,2BAA2B,kBAAkB;AAC7C;AACA,kBAAkB,mBAAmB,oBAAoB,kBAAkB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mnU;;;;;;;;;;;;ACrG9B;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,2EAAY;AACtC,cAAc,mBAAO,CAAC,uEAAU;AAChC,yBAAyB,mBAAO,CAAC,yFAAmB;AACpD,eAAe,mBAAO,CAAC,8HAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA,wDAAwD,yBAAyB;AACjF,eAAe,WAAW;AAC1B;AACA,yBAAyB,yBAAyB;AAClD;AACA,4BAA4B,WAAW;AACvC;AACA,kBAAkB,QAAQ,iBAAiB,QAAQ;AACnD;AACA;AACA,wJAAwJ,yEAAyE;AACjO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0BAA0B,MAAM,KAAK,YAAY,qBAAqB,eAAe;AACrF;AACA;AACA;AACA,uBAAuB,MAAM,KAAK,eAAe;AACjD,8CAA8C,MAAM,KAAK,YAAY;AACrE;AACA,mBAAmB,MAAM,KAAK,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0BAA0B,MAAM,KAAK,YAAY,qBAAqB,kBAAkB;AACxF;AACA;AACA;AACA,uBAAuB,MAAM,KAAK,kBAAkB;AACpD,8CAA8C,YAAY;AAC1D;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,eAAe;AACrD,cAAc,YAAY;AAC1B;AACA;AACA,uBAAuB,eAAe,mBAAmB,YAAY;AACrE;AACA,oBAAoB,YAAY,6BAA6B,eAAe;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kBAAkB;AACxD,cAAc,YAAY;AAC1B;AACA,uBAAuB,kBAAkB,mBAAmB,YAAY;AACxE;AACA,oBAAoB,YAAY,0BAA0B,kBAAkB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mg2B;;;;;;;;;;;;ACxS9B;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,kBAAkB,mBAAO,CAAC,2EAAY;AACtC,eAAe,mBAAO,CAAC,8HAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,m9I;;;;;;;;;;;;ACxC9B;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,oCAAe;AAClC,YAAY,mBAAO,CAAC,iEAAgB;AACpC,aAAa,mBAAO,CAAC,kBAAM;AAC3B,qBAAqB,mBAAO,CAAC,6EAAc;AAC3C,6BAA6B,mBAAO,CAAC,kHAA+B;AACpE,+BAA+B,mBAAO,CAAC,sHAAiC;AACxE,8BAA8B,mBAAO,CAAC,oHAAgC;AACtE,8BAA8B,mBAAO,CAAC,oHAAgC;AACtE,iCAAiC,mBAAO,CAAC,0HAAmC;AAC5E,0BAA0B,mBAAO,CAAC,4GAA4B;AAC9D,6BAA6B,mBAAO,CAAC,kHAA+B;AACpE,gCAAgC,mBAAO,CAAC,wHAAkC;AAC1E,kCAAkC,mBAAO,CAAC,4HAAoC;AAC9E,iCAAiC,mBAAO,CAAC,0HAAmC;AAC5E,kCAAkC,mBAAO,CAAC,4HAAoC;AAC9E,gCAAgC,mBAAO,CAAC,wHAAkC;AAC1E,+BAA+B,mBAAO,CAAC,sHAAiC;AACxE,iCAAiC,mBAAO,CAAC,0HAAmC;AAC5E,cAAc,mBAAO,CAAC,sEAAS;AAC/B,yBAAyB,mBAAO,CAAC,wFAAkB;AACnD;AACA,iBAAiB,mBAAO,CAAC,wEAAU;AACnC,4BAA4B,mBAAO,CAAC,2FAAqB;AACzD,eAAe,mBAAO,CAAC,8HAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0CAA0C,MAAM;AAChD;AACA;AACA;AACA;AACA;AACA,+CAA+C,MAAM;AACrD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC;AAChC,aAAa;AACb;AACA;AACA;AACA,mCAAmC;AACnC;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB,IAAI,qBAAqB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qCAAqC;AACrC,kDAAkD,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,qBAAqB,OAAO,2BAA2B,uDAAuD,6CAA6C,EAAE;AAChO;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB,oBAAoB,2BAA2B;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,sBAAsB;AAC3G;AACA;AACA;AACA,yGAAyG,sBAAsB;AAC/H;AACA;AACA,+BAA+B,UAAU,0EAA0E,sBAAsB;AACzI;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kFAAkF,KAAK,UAAU,OAAO;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uCAAuC,qBAAqB,uBAAuB,uBAAuB;AAC1G;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC,EAAE;AAClC,gCAAgC,EAAE;AAClC;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,6BAA6B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8CAA8C,kBAAkB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,6BAA6B;AAC1F;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,KAAK;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+5mE;;;;;;;;;;;;ACnqB9B;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,wFAAkB;AACrC,YAAY,mBAAO,CAAC,gBAAK;AACzB,eAAe,mBAAO,CAAC,8HAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,MAAM,uBAAuB,SAAS;AACtE;AACA,0BAA0B,MAAM;AAChC;AACA,oBAAoB,SAAS,6BAA6B,YAAY;AACtE;AACA,gBAAgB;AAChB;AACA,0CAA0C,SAAS,eAAe,YAAY;AAC9E;AACA,uCAAuC,SAAS;AAChD;AACA,yBAAyB,YAAY,8BAA8B,SAAS;AAC5E;AACA;AACA;AACA,0CAA0C,MAAM,eAAe,MAAM;AACrE;AACA,oCAAoC,MAAM;AAC1C;AACA,yBAAyB,MAAM,8CAA8C,MAAM;AACnF;AACA;AACA;AACA,gCAAgC,MAAM,0BAA0B,MAAM;AACtE;AACA,0BAA0B,MAAM;AAChC;AACA,oCAAoC,MAAM,mCAAmC,MAAM;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB,eAAe,WAAW;AAC1E;AACA,qBAAqB,WAAW;AAChC;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,2BAA2B,SAAS,WAAW,eAAe,MAAM;AAC7F;AACA,qBAAqB,WAAW;AAChC,+BAA+B,MAAM;AACrC;AACA;AACA,kBAAkB,2BAA2B,kDAAkD;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,MAAM;AACd;AACA,6BAA6B,MAAM;AACnC;AACA;AACA;AACA;AACA;AACA,0DAA0D,mDAAmD;AAC7G;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,sBAAsB;AACtB,sBAAsB;AACtB,wBAAwB;AACxB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,qDAAqD,UAAU;AAC/D;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA,yBAAyB,0EAA0E;AACnG;AACA,yBAAyB,0EAA0E;AACnG;AACA,yBAAyB,0EAA0E;AACnG;AACA;AACA;AACA,kCAAkC,6EAA6E;AAC/G;AACA;AACA,kCAAkC,0EAA0E;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,KAAK;AAC/D;AACA;AACA,6DAA6D,SAAS;AACtE,iCAAiC,SAAS;AAC1C;AACA,mDAAmD,SAAS;AAC5D;AACA,mBAAmB,MAAM,UAAU,SAAS;AAC5C;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D,wBAAwB,SAAS;AACjC;AACA,mDAAmD,SAAS;AAC5D;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,26lB;;;;;;;;;;;;AC1M9B;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,cAAI;AACvB;AACA;AACA;AACA;AACA,gEAAgE,qBAAqB;AACrF;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,kCAAkC,6CAA6C;AAC/E,SAAS;AACT;AACA;AACA,+DAA+D,gBAAgB,GAAG,oBAAoB;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD,kBAAkB,qBAAqB,OAAO,YAAY;AAC1D;AACA;AACA,yBAAyB,qBAAqB;AAC9C,yBAAyB,YAAY;AACrC,gEAAgE,qBAAqB;AACrF;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,2CAA2C,m4N;;;;;;;;;;;;AC7E9B;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,iEAAgB;AACxC,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,iBAAiB,mBAAO,CAAC,wEAAU;AACnC,SAAS,mBAAO,CAAC,kIAAgC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8DAA8D,oBAAoB;AAClF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8DAA8D,iBAAiB;AAC/E;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA,kBAAkB,QAAQ,iBAAiB,iBAAiB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D,kBAAkB,QAAQ,iBAAiB,kBAAkB;AAC7D;AACA,yBAAyB,sCAAsC;AAC/D;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA,8BAA8B,8BAA8B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4BAA4B;AAC1D;AACA;AACA;AACA;AACA,mCAAmC,yBAAyB;AAC5D,kBAAkB,QAAQ,iBAAiB,2BAA2B;AACtE;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA,kBAAkB,QAAQ,gBAAgB,MAAM,KAAK,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B,0BAA0B,UAAU;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB,iBAAiB,WAAW;AACrF;AACA,8BAA8B,4CAA4C;AAC1E;AACA;AACA;AACA,kCAAkC,2BAA2B,KAAK,iBAAiB;AACnF,8BAA8B,eAAe;AAC7C,kCAAkC,kBAAkB;AACpD;AACA,kBAAkB,QAAQ,sBAAsB,eAAe,QAAQ,MAAM,KAAK,eAAe;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe,6BAA6B,eAAe;AAClF,kBAAkB,QAAQ,8BAA8B,eAAe;AACvE;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B,cAAc,MAAM;AACtE,kBAAkB,QAAQ,eAAe,MAAM;AAC/C;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B,cAAc,cAAc;AAC9E,kBAAkB,QAAQ,eAAe,cAAc;AACvD;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B,oCAAoC,SAAS;AAC/F;AACA,kBAAkB,QAAQ,6BAA6B,SAAS,QAAQ,MAAM,UAAU,SAAS;AACjG;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B,sCAAsC,SAAS;AACjG;AACA,kBAAkB,QAAQ,gBAAgB,MAAM,KAAK,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD,kBAAkB,QAAQ,gBAAgB,MAAM,KAAK,kBAAkB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qBAAqB;AACvD;AACA,kCAAkC,kBAAkB;AACpD;AACA,kBAAkB,QAAQ,gBAAgB,MAAM,KAAK,kBAAkB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,kBAAkB,QAAQ,gBAAgB,MAAM,KAAK,kBAAkB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,kBAAkB,QAAQ,gBAAgB,MAAM,KAAK,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC,kBAAkB,QAAQ,gBAAgB,MAAM,KAAK,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC,kBAAkB,QAAQ,iBAAiB,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C,kBAAkB,QAAQ,gBAAgB,MAAM,KAAK,aAAa;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC,kBAAkB,QAAQ,iBAAiB,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA,kBAAkB,QAAQ,gBAAgB,MAAM,KAAK,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD;AACA,kBAAkB,QAAQ,gBAAgB,MAAM,KAAK,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA,kBAAkB,QAAQ,gBAAgB,MAAM,KAAK,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA,kBAAkB,QAAQ,gBAAgB,cAAc,0BAA0B,SAAS;AAC3F;AACA,WAAW,MAAM,KAAK,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,4EAA4E,SAAS,KAAK;AAC1F;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA,6CAA6C,YAAY;AACzD;AACA,SAAS;AACT;AACA;AACA;AACA,kDAAkD,YAAY;AAC9D;AACA,SAAS;AACT;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,OAAO,aAAa,iBAAiB;AACxF;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2CAA2C,2gzC;;;;;;;;;;;;AC9Y9B;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY,GAAG,QAAQ;AAClD;AACA;AACA,2BAA2B,YAAY,GAAG,QAAQ;AAClD;AACA;AACA,2BAA2B,YAAY,GAAG,QAAQ;AAClD;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA,mBAAmB;AACnB,oBAAoB;AACpB,mBAAmB;AACnB,kBAAkB;AAClB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mvO;;;;;;;;;;;;ACjF9B;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,8BAA8B,mBAAO,CAAC,kGAAuB;AAC7D;AACA,kBAAkB,mBAAO,CAAC,0EAAW;AACrC;AACA,iBAAiB,mBAAO,CAAC,wEAAU;AACnC;AACA;AACA,wBAAwB,mBAAO,CAAC,sFAAiB;AACjD;AACA,iCAAiC,mBAAO,CAAC,0HAAmC;AAC5E;AACA,SAAS,mBAAO,CAAC,kGAAuB;AACxC,2CAA2C,25C;;;;;;;;;;;;ACrB9B;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,0EAAW;AACrC,aAAa,mBAAO,CAAC,kBAAM;AAC3B,eAAe,mBAAO,CAAC,8HAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,oBAAoB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc,IAAI,qBAAqB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mDAAmD,YAAY;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,YAAY,SAAS,gCAAgC;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qBAAqB;AACpE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,yBAAyB,OAAO,kCAAkC;AACtH,uDAAuD,mBAAmB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mBAAmB,SAAS,IAAI;AAC9E;AACA;AACA;AACA,sDAAsD,mBAAmB;AACzE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,UAAU;AACzE;AACA;AACA;AACA;AACA;AACA,2CAA2C,+o1B;;;;;;;;;;;;AC7P9B;AACb;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,8HAAM;AAC7B,yBAAyB,mBAAO,CAAC,iEAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,kBAAkB;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,GAAG;AACjD,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,2CAA2C,2oQ;;;;;;;;;;;;AC/F3C;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8IAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAO,CAAC,gIAA6B;AAC9C,SAAS,mBAAO,CAAC,kHAAY;AAC7B;AACA;AACA;AACA;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8IAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;;;;;;;;;;;;;AC1BxG;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8IAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;;;;;;;;;;;;;ACd/E;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8IAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;;;;;;;;;;;;;AClCzF;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8IAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;;;;;;;;;;;;;AChB/F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kHAAY;AAC/B,yBAAyB,mBAAO,CAAC,8IAAgB;AACjD,kCAAkC,mBAAO,CAAC,gJAA2B;AACrE;AACA,kCAAkC,mBAAO,CAAC,gJAA2B;AACrE;AACA,oCAAoC,mBAAO,CAAC,oJAA6B;AACzE;AACA;AACA,iCAAiC,mBAAO,CAAC,8IAA0B;AACnE;AACA,iCAAiC,mBAAO,CAAC,8IAA0B;AACnE;AACA;AACA,gCAAgC,mBAAO,CAAC,4IAAyB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qIAAqI;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+HAA+H;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+HAA+H;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2IAA2I;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yHAAyH;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yHAAyH;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;;;;;;;;;;;;;AClf3G;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8IAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;;;;;;;;;;;;;AChB/F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8IAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8IAA8I;;;;;;;;;;;;;ACrB/I;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,0IAAU;AACjC,SAAS,mBAAO,CAAC,kIAAM;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA,YAAY,uBAAuB,sBAAsB,EAAE;AAC3D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AChGA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA,uBAAuB,uBAAuB,EAAE;AAChD,8BAA8B,oBAAoB;AAClD,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB,wCAAwC,EAAE,EAAE;AAC5F;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,CAAC;AACD;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,qBAAqB,EAAE;AAC/E;AACA;;;;;;;;;;;;;AClCa;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA,iBAAiB;AACjB,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA,iBAAiB;AACja;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kIAAM;AACvB,iBAAiB,mBAAO,CAAC,8IAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,wJAAiB;AAC/C;AACA;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,wJAAiB;AAC/C;AACA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,0IAAU;AACjC;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,sJAAgB;AAC7C;AACA;AACA,kBAAkB,mBAAO,CAAC,gJAAa;AACvC,SAAS,mBAAO,CAAC,oJAAe;AAChC,SAAS,mBAAO,CAAC,wJAAiB;AAClC;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA,wBAAwB,EAAE;AAC1B,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,sBAAsB;AACtB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACryCAAyC;AACxE;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,yDAAyD;AACzD;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,+BAA+B,EAAE;AAC7H;AACA;AACA;AACA,yEAAyE,+BAA+B,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0EAA0E,SAAS;AACnF,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,oDAAoD;AACpD;AACA;AACA,SAAS;AACT;AACA,8CAA8C,0BAA0B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,gCAAgC;AACxG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACv2BA;AACA;AACA;AACA;AACa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,0IAAU;AACjC,SAAS,mBAAO,CAAC,kIAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oDAAoD,+BAA+B,EAAE;AACrF,+CAA+C,0BAA0B,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,+BAA+B,EAAE;AACpF,8CAA8C,0BAA0B,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,0IAAU;AACjC,SAAS,mBAAO,CAAC,kIAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA,qDAAqD,+BAA+B,EAAE;AACtF,gDAAgD,0BAA0B,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,+BAA+B,EAAE;AACpF,8CAA8C,wBAAwB,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,+BAA+B,EAAE;AACpF,8CAA8C,0BAA0B,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7NA;AACA;AACA;AACA;AACa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kIAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5UA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,kBAAM;AAC3B,WAAW,mBAAO,CAAC,cAAI;AACvB,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,YAAY,mBAAO,CAAC,gBAAK;AACzB,sBAAsB,mBAAO,CAAC,wJAAiB;AAC/C,sBAAsB,mBAAO,CAAC,wJAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,gBAAK;AACzB,sBAAsB,mBAAO,CAAC,wJAAiB;AAC/C,sBAAsB,mBAAO,CAAC,wJAAiB;AAC/C;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE;AACrE;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS,iCAAiC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;AAC3B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD;AACzD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0EAA0E;AAC3E;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,wCAAwC;AAClC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AAC9B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAA6C,IAAI;AACjF;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACyB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACP;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AAC9B;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gBAAgB;;;;;;;;;;;;ACp1CjB;AACA;;AAEA,WAAW,mBAAO,CAAC,8DAAU;;AAE7B,eAAe,mBAAO,CAAC,sEAAc;;AAErC,UAAU,mBAAO,CAAC,4DAAS;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACjDD;AACA;;AAEA,WAAW,mBAAO,CAAC,8DAAU;;AAE7B,YAAY,mBAAO,CAAC,gEAAW;;AAE/B,WAAW,mBAAO,CAAC,8DAAU;;AAE7B,eAAe,mBAAO,CAAC,sEAAc;;AAErC,UAAU,mBAAO,CAAC,4DAAS;;AAE3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,mCAAmC,0BAA0B,mBAAmB;AAChI;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;AC9GD;AACA;;AAEA,SAAS,mBAAO,CAAC,8DAAU;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACtND;AACA;;AAEA,SAAS,mBAAO,CAAC,8DAAU;;AAE3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;AC7GD;AACA;;AAEA,SAAS,mBAAO,CAAC,sEAAc;;AAE/B;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACxtUD;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,6DAAU;AACnC,WAAW,mBAAO,CAAC,qDAAM;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA,YAAY,YAAY,sBAAsB,EAAE;AAChD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA,yBAAyB,YAAY,EAAE;AACvC,8BAA8B,oBAAoB;AAClD,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gDAAgD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCa;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA,iBAAiB;AACjB,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA,iBAAiB;AACjtRA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,qDAAM;AACzB,mBAAmB,mBAAO,CAAC,iEAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,2EAAiB;AACjD;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,2EAAiB;AACjD;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,6DAAU;AACnC;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,yEAAgB;AAC/C;AACA;AACA,oBAAoB,mBAAO,CAAC,mEAAa;AACzC,SAAS,mBAAO,CAAC,uEAAe;AAChC,SAAS,mBAAO,CAAC,2EAAiB;AAClC;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA,kBAAkB,EAAE;AACpB,iBAAiB,EAAE;AACnB,iBAAiB,EAAE;AACnB,gBAAgB;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oHAAoH,sBAAsB,wBAAwB,cAAc;AAChL;AACA;AACA,oHAAoH,sBAAsB;AAC1I;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,sBAAsB,wBAAwB,cAAc;AACxK;AACA;AACA,4GAA4G,sBAAsB;AAClI;AACA;AACA;AACA;AACA,8GAA8G,sBAAsB;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,oDAAoD;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,uBAAuB,yBAAyB,cAAc;AACxH;AACA;AACA,0DAA0D,uBAAuB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe,yBAAyB,cAAc;AAChH;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,iCAAiC;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA,2CAA2C,eAAe,MAAM,WAAW;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC;AAC9E;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO,MAAM,WAAW,8BAA8B,uBAAuB;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA,4CAA4C,eAAe,MAAM,WAAW;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC;AAC9E;AACA;AACA;AACA;AACA;AACA,iDAAiD,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,sBAAsB,IAAI,mBAAmB;AAC7G,iDAAiD,uBAAuB,MAAM,WAAW,QAAQ,wCAAwC,KAAK,MAAM;AACpJ;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yCAAyC;AACxE;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,yDAAyD;AACzD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0EAA0E,KAAK;AAC/E,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,oDAAoD;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,gCAAgC;AACxG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC15BA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,6DAAU;AACnC,WAAW,mBAAO,CAAC,qDAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qDAAqD;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAA4C;AACrF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChOA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,6DAAU;AACnC,WAAW,mBAAO,CAAC,qDAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qDAAqD;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7LA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,qDAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpPA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,kBAAM;AAC7B,aAAa,mBAAO,CAAC,cAAI;AACzB,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,cAAc,mBAAO,CAAC,gBAAK;AAC3B,wBAAwB,mBAAO,CAAC,2EAAiB;AACjD,wBAAwB,mBAAO,CAAC,2EAAiB;AACjD;AACA;AACA;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,gBAAK;AAC3B,wBAAwB,mBAAO,CAAC,2EAAiB;AACjD,wBAAwB,mBAAO,CAAC,2EAAiB;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtCA,qIAAgG;AAChG,uDAAwC;AACxC,iDAAgC;AAEhC,MAAa,iBAAkB,SAAQ,wCAAkB;IACvD,gBAAgB,KAAe,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACvD,eAAe,KAAa,OAAO,yBAAyB,CAAC,CAAC,CAAC;IAC/D,aAAa,KAAa,OAAO,qBAAqB,CAAC,CAAC,CAAC;IACzD,iBAAiB,KAAqB,OAAO,KAAK,CAAC,CAAC,CAAC;IAErD,kBAAkB;QAChB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QAEpC,OAAO,KAAK,CAAC,cAAc,CACzB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,6BAA6B,CAAC,EAAE,YAAY,CAAC,EAC9D,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,CACZ,CAAC;IAC7B,CAAC;IAED,oBAAoB,CAAC,MAAkB;QACrC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAEnC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;YAAE,OAAO,KAAK,CAAC;QAChD,OAAO,KAAK,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,qBAAqB;QACnB,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QAExC,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QACxE,MAAM,qBAAqB,GAAG,iBAAU,CAAC,gBAAgB,CAAC,CAAC;QAC3D,MAAM,eAAe,GAAG,qBAAqB;YAC3C,CAAC,CAAC,gBAAgB;YAClB,CAAC,CAAC,WAAI,CAAC,SAAS,EAAE,IAAI,EAAE,gBAAgB,CAAC,CAAC;QAE5C,IAAI,eAAU,CAAC,eAAe,CAAC;YAAE,OAAO,IAAI,CAAC;QAE7C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,uDAAuD,EAAE;YACnF,WAAW,EAAE,IAAI;YACjB,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,qBAAqB,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;aAC9E;YACD,WAAW,EACT,sCAAsC,eAAe,MAAM;SAC9D,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC;IACf,CAAC;IAED,mBAAmB;QACjB,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QAErC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;IAC7D,CAAC;CACF;AAlDD,8CAkDC;;;;;;;;;;;;;ACvDD,mC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,gC","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst convert_1 = require(\"../convert\");\r\n// Public: Adapts workspace/applyEdit commands to editors.\r\nclass ApplyEditAdapter {\r\n    // Public: Attach to a {LanguageClientConnection} to receive edit events.\r\n    static attach(connection) {\r\n        connection.onApplyEdit((m) => ApplyEditAdapter.onApplyEdit(m));\r\n    }\r\n    /**\r\n     * Tries to apply edits and reverts if anything goes wrong.\r\n     * Returns the checkpoint, so the caller can revert changes if needed.\r\n     */\r\n    static applyEdits(buffer, edits) {\r\n        const checkpoint = buffer.createCheckpoint();\r\n        try {\r\n            // Sort edits in reverse order to prevent edit conflicts.\r\n            edits.sort((edit1, edit2) => -edit1.oldRange.compare(edit2.oldRange));\r\n            edits.reduce((previous, current) => {\r\n                ApplyEditAdapter.validateEdit(buffer, current, previous);\r\n                buffer.setTextInRange(current.oldRange, current.newText);\r\n                return current;\r\n            }, null);\r\n            buffer.groupChangesSinceCheckpoint(checkpoint);\r\n            return checkpoint;\r\n        }\r\n        catch (err) {\r\n            buffer.revertToCheckpoint(checkpoint);\r\n            throw err;\r\n        }\r\n    }\r\n    static onApplyEdit(params) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let changes = params.edit.changes || {};\r\n            if (params.edit.documentChanges) {\r\n                changes = {};\r\n                params.edit.documentChanges.forEach((change) => {\r\n                    if (change && change.textDocument) {\r\n                        changes[change.textDocument.uri] = change.edits;\r\n                    }\r\n                });\r\n            }\r\n            const uris = Object.keys(changes);\r\n            // Keep checkpoints from all successful buffer edits\r\n            const checkpoints = [];\r\n            const promises = uris.map((uri) => __awaiter(this, void 0, void 0, function* () {\r\n                const path = convert_1.default.uriToPath(uri);\r\n                const editor = yield atom.workspace.open(path, {\r\n                    searchAllPanes: true,\r\n                    // Open new editors in the background.\r\n                    activatePane: false,\r\n                    activateItem: false,\r\n                });\r\n                const buffer = editor.getBuffer();\r\n                // Get an existing editor for the file, or open a new one if it doesn't exist.\r\n                const edits = convert_1.default.convertLsTextEdits(changes[uri]);\r\n                const checkpoint = ApplyEditAdapter.applyEdits(buffer, edits);\r\n                checkpoints.push({ buffer, checkpoint });\r\n            }));\r\n            // Apply all edits or fail and revert everything\r\n            const applied = yield Promise.all(promises)\r\n                .then(() => true)\r\n                .catch((err) => {\r\n                atom.notifications.addError('workspace/applyEdits failed', {\r\n                    description: 'Failed to apply edits.',\r\n                    detail: err.message,\r\n                });\r\n                checkpoints.forEach(({ buffer, checkpoint }) => {\r\n                    buffer.revertToCheckpoint(checkpoint);\r\n                });\r\n                return false;\r\n            });\r\n            return { applied };\r\n        });\r\n    }\r\n    // Private: Do some basic sanity checking on the edit ranges.\r\n    static validateEdit(buffer, edit, prevEdit) {\r\n        const path = buffer.getPath() || '';\r\n        if (prevEdit && edit.oldRange.end.compare(prevEdit.oldRange.start) > 0) {\r\n            throw Error(`Found overlapping edit ranges in ${path}`);\r\n        }\r\n        const startRow = edit.oldRange.start.row;\r\n        const startCol = edit.oldRange.start.column;\r\n        const lineLength = buffer.lineLengthForRow(startRow);\r\n        if (lineLength == null || startCol > lineLength) {\r\n            throw Error(`Out of range edit on ${path}:${startRow + 1}:${startCol + 1}`);\r\n        }\r\n    }\r\n}\r\nexports.default = ApplyEditAdapter;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst convert_1 = require(\"../convert\");\r\nconst Utils = require(\"../utils\");\r\nconst fuzzaldrin_plus_1 = require(\"fuzzaldrin-plus\");\r\nconst languageclient_1 = require(\"../languageclient\");\r\nconst atom_1 = require(\"atom\");\r\nclass PossiblyResolvedCompletionItem {\r\n    constructor(completionItem, isResolved) {\r\n        this.completionItem = completionItem;\r\n        this.isResolved = isResolved;\r\n    }\r\n}\r\n// Public: Adapts the language server protocol \"textDocument/completion\" to the Atom\r\n// AutoComplete+ package.\r\nclass AutocompleteAdapter {\r\n    constructor() {\r\n        this._suggestionCache = new WeakMap();\r\n        this._cancellationTokens = new WeakMap();\r\n    }\r\n    static canAdapt(serverCapabilities) {\r\n        return serverCapabilities.completionProvider != null;\r\n    }\r\n    static canResolve(serverCapabilities) {\r\n        return serverCapabilities.completionProvider != null &&\r\n            serverCapabilities.completionProvider.resolveProvider === true;\r\n    }\r\n    // Public: Obtain suggestion list for AutoComplete+ by querying the language server using\r\n    // the `textDocument/completion` request.\r\n    //\r\n    // * `server` An {ActiveServer} pointing to the language server to query.\r\n    // * `request` The {atom$AutocompleteRequest} to satisfy.\r\n    // * `onDidConvertCompletionItem` An optional function that takes a {CompletionItem}, an {atom$AutocompleteSuggestion}\r\n    //   and a {atom$AutocompleteRequest} allowing you to adjust converted items.\r\n    //\r\n    // Returns a {Promise} of an {Array} of {atom$AutocompleteSuggestion}s containing the\r\n    // AutoComplete+ suggestions to display.\r\n    getSuggestions(server, request, onDidConvertCompletionItem, minimumWordLength) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const triggerChars = server.capabilities.completionProvider != null\r\n                ? server.capabilities.completionProvider.triggerCharacters || []\r\n                : [];\r\n            // triggerOnly is true if we have just typed in the trigger character, and is false if we\r\n            // have typed additional characters following the trigger character.\r\n            const [triggerChar, triggerOnly] = AutocompleteAdapter.getTriggerCharacter(request, triggerChars);\r\n            if (!this.shouldTrigger(request, triggerChar, minimumWordLength || 0)) {\r\n                return [];\r\n            }\r\n            // Get the suggestions either from the cache or by calling the language server\r\n            const suggestions = yield this.getOrBuildSuggestions(server, request, triggerChar, triggerOnly, onDidConvertCompletionItem);\r\n            // As the user types more characters to refine filter we must replace those characters on acceptance\r\n            const replacementPrefix = (triggerChar !== '' && triggerOnly) ? '' : request.prefix;\r\n            for (const suggestion of suggestions) {\r\n                suggestion.replacementPrefix = replacementPrefix;\r\n            }\r\n            const filtered = !(request.prefix === \"\" || (triggerChar !== '' && triggerOnly));\r\n            return filtered ? fuzzaldrin_plus_1.filter(suggestions, request.prefix, { key: 'text' }) : suggestions;\r\n        });\r\n    }\r\n    shouldTrigger(request, triggerChar, minWordLength) {\r\n        return request.activatedManually\r\n            || triggerChar !== ''\r\n            || minWordLength <= 0\r\n            || request.prefix.length >= minWordLength;\r\n    }\r\n    getOrBuildSuggestions(server, request, triggerChar, triggerOnly, onDidConvertCompletionItem) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const cache = this._suggestionCache.get(server);\r\n            const triggerColumn = (triggerChar !== '' && triggerOnly)\r\n                ? request.bufferPosition.column - triggerChar.length\r\n                : request.bufferPosition.column - request.prefix.length - triggerChar.length;\r\n            const triggerPoint = new atom_1.Point(request.bufferPosition.row, triggerColumn);\r\n            // Do we have complete cached suggestions that are still valid for this request?\r\n            if (cache && !cache.isIncomplete && cache.triggerChar === triggerChar\r\n                && cache.triggerPoint.isEqual(triggerPoint)) {\r\n                return Array.from(cache.suggestionMap.keys());\r\n            }\r\n            // Our cached suggestions can't be used so obtain new ones from the language server\r\n            const completions = yield Utils.doWithCancellationToken(server.connection, this._cancellationTokens, (cancellationToken) => server.connection.completion(AutocompleteAdapter.createCompletionParams(request, triggerChar, triggerOnly), cancellationToken));\r\n            // Setup the cache for subsequent filtered results\r\n            const isComplete = Array.isArray(completions) || completions.isIncomplete === false;\r\n            const suggestionMap = this.completionItemsToSuggestions(completions, request, onDidConvertCompletionItem);\r\n            this._suggestionCache.set(server, { isIncomplete: !isComplete, triggerChar, triggerPoint, suggestionMap });\r\n            return Array.from(suggestionMap.keys());\r\n        });\r\n    }\r\n    // Public: Obtain a complete version of a suggestion with additional information\r\n    // the language server can provide by way of the `completionItem/resolve` request.\r\n    //\r\n    // * `server` An {ActiveServer} pointing to the language server to query.\r\n    // * `suggestion` An {atom$AutocompleteSuggestion} suggestion that should be resolved.\r\n    // * `request` An {Object} with the AutoComplete+ request to satisfy.\r\n    // * `onDidConvertCompletionItem` An optional function that takes a {CompletionItem}, an {atom$AutocompleteSuggestion}\r\n    //   and a {atom$AutocompleteRequest} allowing you to adjust converted items.\r\n    //\r\n    // Returns a {Promise} of an {atom$AutocompleteSuggestion} with the resolved AutoComplete+ suggestion.\r\n    completeSuggestion(server, suggestion, request, onDidConvertCompletionItem) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const cache = this._suggestionCache.get(server);\r\n            if (cache) {\r\n                const possiblyResolvedCompletionItem = cache.suggestionMap.get(suggestion);\r\n                if (possiblyResolvedCompletionItem != null && possiblyResolvedCompletionItem.isResolved === false) {\r\n                    const resolvedCompletionItem = yield server.connection.completionItemResolve(possiblyResolvedCompletionItem.completionItem);\r\n                    if (resolvedCompletionItem != null) {\r\n                        AutocompleteAdapter.completionItemToSuggestion(resolvedCompletionItem, suggestion, request, onDidConvertCompletionItem);\r\n                        possiblyResolvedCompletionItem.isResolved = true;\r\n                    }\r\n                }\r\n            }\r\n            return suggestion;\r\n        });\r\n    }\r\n    // Public: Get the trigger character that caused the autocomplete (if any).  This is required because\r\n    // AutoComplete-plus does not have trigger characters.  Although the terminology is 'character' we treat\r\n    // them as variable length strings as this will almost certainly change in the future to support '->' etc.\r\n    //\r\n    // * `request` An {Array} of {atom$AutocompleteSuggestion}s to locate the prefix, editor, bufferPosition etc.\r\n    // * `triggerChars` The {Array} of {string}s that can be trigger characters.\r\n    //\r\n    // Returns a [{string}, boolean] where the string is the matching trigger character or an empty string\r\n    // if one was not matched, and the boolean is true if the trigger character is in request.prefix, and false\r\n    // if it is in the word before request.prefix. The boolean return value has no meaning if the string return\r\n    // value is an empty string.\r\n    static getTriggerCharacter(request, triggerChars) {\r\n        // AutoComplete-Plus considers text after a symbol to be a new trigger. So we should look backward\r\n        // from the current cursor position to see if one is there and thus simulate it.\r\n        const buffer = request.editor.getBuffer();\r\n        const cursor = request.bufferPosition;\r\n        const prefixStartColumn = cursor.column - request.prefix.length;\r\n        for (const triggerChar of triggerChars) {\r\n            if (request.prefix.endsWith(triggerChar)) {\r\n                return [triggerChar, true];\r\n            }\r\n            if (prefixStartColumn >= triggerChar.length) { // Far enough along a line to fit the trigger char\r\n                const start = new atom_1.Point(cursor.row, prefixStartColumn - triggerChar.length);\r\n                const possibleTrigger = buffer.getTextInRange([start, [cursor.row, prefixStartColumn]]);\r\n                if (possibleTrigger === triggerChar) { // The text before our trigger is a trigger char!\r\n                    return [triggerChar, false];\r\n                }\r\n            }\r\n        }\r\n        // There was no explicit trigger char\r\n        return ['', false];\r\n    }\r\n    // Public: Create TextDocumentPositionParams to be sent to the language server\r\n    // based on the editor and position from the AutoCompleteRequest.\r\n    //\r\n    // * `request` The {atom$AutocompleteRequest} to obtain the editor from.\r\n    // * `triggerPoint` The {atom$Point} where the trigger started.\r\n    //\r\n    // Returns a {string} containing the prefix including the trigger character.\r\n    static getPrefixWithTrigger(request, triggerPoint) {\r\n        return request.editor\r\n            .getBuffer()\r\n            .getTextInRange([[triggerPoint.row, triggerPoint.column], request.bufferPosition]);\r\n    }\r\n    // Public: Create {CompletionParams} to be sent to the language server\r\n    // based on the editor and position from the Autocomplete request etc.\r\n    //\r\n    // * `request` The {atom$AutocompleteRequest} containing the request details.\r\n    // * `triggerCharacter` The {string} containing the trigger character (empty if none).\r\n    // * `triggerOnly` A {boolean} representing whether this completion is triggered right after a trigger character.\r\n    //\r\n    // Returns an {CompletionParams} with the keys:\r\n    //  * `textDocument` the language server protocol textDocument identification.\r\n    //  * `position` the position within the text document to display completion request for.\r\n    //  * `context` containing the trigger character and kind.\r\n    static createCompletionParams(request, triggerCharacter, triggerOnly) {\r\n        return {\r\n            textDocument: convert_1.default.editorToTextDocumentIdentifier(request.editor),\r\n            position: convert_1.default.pointToPosition(request.bufferPosition),\r\n            context: AutocompleteAdapter.createCompletionContext(triggerCharacter, triggerOnly),\r\n        };\r\n    }\r\n    // Public: Create {CompletionContext} to be sent to the language server\r\n    // based on the trigger character.\r\n    //\r\n    // * `triggerCharacter` The {string} containing the trigger character or '' if none.\r\n    // * `triggerOnly` A {boolean} representing whether this completion is triggered right after a trigger character.\r\n    //\r\n    // Returns an {CompletionContext} that specifies the triggerKind and the triggerCharacter\r\n    // if there is one.\r\n    static createCompletionContext(triggerCharacter, triggerOnly) {\r\n        if (triggerCharacter === '') {\r\n            return { triggerKind: languageclient_1.CompletionTriggerKind.Invoked };\r\n        }\r\n        else {\r\n            return triggerOnly\r\n                ? { triggerKind: languageclient_1.CompletionTriggerKind.TriggerCharacter, triggerCharacter }\r\n                : { triggerKind: languageclient_1.CompletionTriggerKind.TriggerForIncompleteCompletions, triggerCharacter };\r\n        }\r\n    }\r\n    // Public: Convert a language server protocol CompletionItem array or CompletionList to\r\n    // an array of ordered AutoComplete+ suggestions.\r\n    //\r\n    // * `completionItems` An {Array} of {CompletionItem} objects or a {CompletionList} containing completion\r\n    //           items to be converted.\r\n    // * `request` The {atom$AutocompleteRequest} to satisfy.\r\n    // * `onDidConvertCompletionItem` A function that takes a {CompletionItem}, an {atom$AutocompleteSuggestion}\r\n    //   and a {atom$AutocompleteRequest} allowing you to adjust converted items.\r\n    //\r\n    // Returns a {Map} of AutoComplete+ suggestions ordered by the CompletionItems sortText.\r\n    completionItemsToSuggestions(completionItems, request, onDidConvertCompletionItem) {\r\n        return new Map((Array.isArray(completionItems) ? completionItems : completionItems.items || [])\r\n            .sort((a, b) => (a.sortText || a.label).localeCompare(b.sortText || b.label))\r\n            .map((s) => [\r\n            AutocompleteAdapter.completionItemToSuggestion(s, {}, request, onDidConvertCompletionItem),\r\n            new PossiblyResolvedCompletionItem(s, false)\r\n        ]));\r\n    }\r\n    // Public: Convert a language server protocol CompletionItem to an AutoComplete+ suggestion.\r\n    //\r\n    // * `item` An {CompletionItem} containing a completion item to be converted.\r\n    // * `suggestion` A {atom$AutocompleteSuggestion} to have the conversion applied to.\r\n    // * `request` The {atom$AutocompleteRequest} to satisfy.\r\n    // * `onDidConvertCompletionItem` A function that takes a {CompletionItem}, an {atom$AutocompleteSuggestion}\r\n    //   and a {atom$AutocompleteRequest} allowing you to adjust converted items.\r\n    //\r\n    // Returns the {atom$AutocompleteSuggestion} passed in as suggestion with the conversion applied.\r\n    static completionItemToSuggestion(item, suggestion, request, onDidConvertCompletionItem) {\r\n        AutocompleteAdapter.applyCompletionItemToSuggestion(item, suggestion);\r\n        AutocompleteAdapter.applyTextEditToSuggestion(item.textEdit, request.editor, suggestion);\r\n        AutocompleteAdapter.applySnippetToSuggestion(item, suggestion);\r\n        if (onDidConvertCompletionItem != null) {\r\n            onDidConvertCompletionItem(item, suggestion, request);\r\n        }\r\n        return suggestion;\r\n    }\r\n    // Public: Convert the primary parts of a language server protocol CompletionItem to an AutoComplete+ suggestion.\r\n    //\r\n    // * `item` An {CompletionItem} containing the completion items to be merged into.\r\n    // * `suggestion` The {atom$AutocompleteSuggestion} to merge the conversion into.\r\n    //\r\n    // Returns an {atom$AutocompleteSuggestion} created from the {CompletionItem}.\r\n    static applyCompletionItemToSuggestion(item, suggestion) {\r\n        suggestion.text = item.insertText || item.label;\r\n        suggestion.displayText = item.label;\r\n        suggestion.type = AutocompleteAdapter.completionKindToSuggestionType(item.kind);\r\n        suggestion.rightLabel = item.detail;\r\n        // Older format, can't know what it is so assign to both and hope for best\r\n        if (typeof (item.documentation) === 'string') {\r\n            suggestion.descriptionMarkdown = item.documentation;\r\n            suggestion.description = item.documentation;\r\n        }\r\n        if (item.documentation != null && typeof (item.documentation) === 'object') {\r\n            // Newer format specifies the kind of documentation, assign appropriately\r\n            if (item.documentation.kind === 'markdown') {\r\n                suggestion.descriptionMarkdown = item.documentation.value;\r\n            }\r\n            else {\r\n                suggestion.description = item.documentation.value;\r\n            }\r\n        }\r\n    }\r\n    // Public: Applies the textEdit part of a language server protocol CompletionItem to an\r\n    // AutoComplete+ Suggestion via the replacementPrefix and text properties.\r\n    //\r\n    // * `textEdit` A {TextEdit} from a CompletionItem to apply.\r\n    // * `editor` An Atom {TextEditor} used to obtain the necessary text replacement.\r\n    // * `suggestion` An {atom$AutocompleteSuggestion} to set the replacementPrefix and text properties of.\r\n    static applyTextEditToSuggestion(textEdit, editor, suggestion) {\r\n        if (textEdit) {\r\n            suggestion.replacementPrefix = editor.getTextInBufferRange(convert_1.default.lsRangeToAtomRange(textEdit.range));\r\n            suggestion.text = textEdit.newText;\r\n        }\r\n    }\r\n    // Public: Adds a snippet to the suggestion if the CompletionItem contains\r\n    // snippet-formatted text\r\n    //\r\n    // * `item` An {CompletionItem} containing the completion items to be merged into.\r\n    // * `suggestion` The {atom$AutocompleteSuggestion} to merge the conversion into.\r\n    //\r\n    static applySnippetToSuggestion(item, suggestion) {\r\n        if (item.insertTextFormat === languageclient_1.InsertTextFormat.Snippet) {\r\n            suggestion.snippet = item.textEdit != null ? item.textEdit.newText : (item.insertText || '');\r\n        }\r\n    }\r\n    // Public: Obtain the textual suggestion type required by AutoComplete+ that\r\n    // most closely maps to the numeric completion kind supplies by the language server.\r\n    //\r\n    // * `kind` A {Number} that represents the suggestion kind to be converted.\r\n    //\r\n    // Returns a {String} containing the AutoComplete+ suggestion type equivalent\r\n    // to the given completion kind.\r\n    static completionKindToSuggestionType(kind) {\r\n        switch (kind) {\r\n            case languageclient_1.CompletionItemKind.Constant:\r\n                return 'constant';\r\n            case languageclient_1.CompletionItemKind.Method:\r\n                return 'method';\r\n            case languageclient_1.CompletionItemKind.Function:\r\n            case languageclient_1.CompletionItemKind.Constructor:\r\n                return 'function';\r\n            case languageclient_1.CompletionItemKind.Field:\r\n            case languageclient_1.CompletionItemKind.Property:\r\n                return 'property';\r\n            case languageclient_1.CompletionItemKind.Variable:\r\n                return 'variable';\r\n            case languageclient_1.CompletionItemKind.Class:\r\n                return 'class';\r\n            case languageclient_1.CompletionItemKind.Struct:\r\n            case languageclient_1.CompletionItemKind.TypeParameter:\r\n                return 'type';\r\n            case languageclient_1.CompletionItemKind.Operator:\r\n                return 'selector';\r\n            case languageclient_1.CompletionItemKind.Interface:\r\n                return 'mixin';\r\n            case languageclient_1.CompletionItemKind.Module:\r\n                return 'module';\r\n            case languageclient_1.CompletionItemKind.Unit:\r\n                return 'builtin';\r\n            case languageclient_1.CompletionItemKind.Enum:\r\n            case languageclient_1.CompletionItemKind.EnumMember:\r\n                return 'enum';\r\n            case languageclient_1.CompletionItemKind.Keyword:\r\n                return 'keyword';\r\n            case languageclient_1.CompletionItemKind.Snippet:\r\n                return 'snippet';\r\n            case languageclient_1.CompletionItemKind.File:\r\n            case languageclient_1.CompletionItemKind.Folder:\r\n                return 'import';\r\n            case languageclient_1.CompletionItemKind.Reference:\r\n                return 'require';\r\n            default:\r\n                return 'value';\r\n        }\r\n    }\r\n}\r\nexports.default = AutocompleteAdapter;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst assert = require(\"assert\");\r\nconst convert_1 = require(\"../convert\");\r\nconst apply_edit_adapter_1 = require(\"./apply-edit-adapter\");\r\nconst languageclient_1 = require(\"../languageclient\");\r\nclass CodeActionAdapter {\r\n    // Returns a {Boolean} indicating this adapter can adapt the server based on the\r\n    // given serverCapabilities.\r\n    static canAdapt(serverCapabilities) {\r\n        return serverCapabilities.codeActionProvider === true;\r\n    }\r\n    // Public: Retrieves code actions for a given editor, range, and context (diagnostics).\r\n    // Throws an error if codeActionProvider is not a registered capability.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server that provides highlights.\r\n    // * `serverCapabilities` The {ServerCapabilities} of the language server that will be used.\r\n    // * `editor` The Atom {TextEditor} containing the diagnostics.\r\n    // * `range` The Atom {Range} to fetch code actions for.\r\n    // * `diagnostics` An {Array<atomIde$Diagnostic>} to fetch code actions for.\r\n    //                 This is typically a list of diagnostics intersecting `range`.\r\n    //\r\n    // Returns a {Promise} of an {Array} of {atomIde$CodeAction}s to display.\r\n    static getCodeActions(connection, serverCapabilities, linterAdapter, editor, range, diagnostics) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (linterAdapter == null) {\r\n                return [];\r\n            }\r\n            assert(serverCapabilities.codeActionProvider, 'Must have the textDocument/codeAction capability');\r\n            const params = CodeActionAdapter.createCodeActionParams(linterAdapter, editor, range, diagnostics);\r\n            const actions = yield connection.codeAction(params);\r\n            return actions.map((action) => CodeActionAdapter.createCodeAction(action, connection));\r\n        });\r\n    }\r\n    static createCodeAction(action, connection) {\r\n        return {\r\n            apply() {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (languageclient_1.CodeAction.is(action)) {\r\n                        CodeActionAdapter.applyWorkspaceEdit(action.edit);\r\n                        yield CodeActionAdapter.executeCommand(action.command, connection);\r\n                    }\r\n                    else {\r\n                        yield CodeActionAdapter.executeCommand(action, connection);\r\n                    }\r\n                });\r\n            },\r\n            getTitle() {\r\n                return Promise.resolve(action.title);\r\n            },\r\n            // tslint:disable-next-line:no-empty\r\n            dispose() { },\r\n        };\r\n    }\r\n    static applyWorkspaceEdit(edit) {\r\n        if (languageclient_1.WorkspaceEdit.is(edit)) {\r\n            apply_edit_adapter_1.default.onApplyEdit({ edit });\r\n        }\r\n    }\r\n    static executeCommand(command, connection) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (languageclient_1.Command.is(command)) {\r\n                yield connection.executeCommand({\r\n                    command: command.command,\r\n                    arguments: command.arguments,\r\n                });\r\n            }\r\n        });\r\n    }\r\n    static createCodeActionParams(linterAdapter, editor, range, diagnostics) {\r\n        return {\r\n            textDocument: convert_1.default.editorToTextDocumentIdentifier(editor),\r\n            range: convert_1.default.atomRangeToLSRange(range),\r\n            context: {\r\n                diagnostics: diagnostics.map((diagnostic) => {\r\n                    // Retrieve the stored diagnostic code if it exists.\r\n                    // Until the Linter API provides a place to store the code,\r\n                    // there's no real way for the code actions API to give it back to us.\r\n                    const converted = convert_1.default.atomIdeDiagnosticToLSDiagnostic(diagnostic);\r\n                    if (diagnostic.range != null && diagnostic.text != null) {\r\n                        const code = linterAdapter.getDiagnosticCode(editor, diagnostic.range, diagnostic.text);\r\n                        if (code != null) {\r\n                            converted.code = code;\r\n                        }\r\n                    }\r\n                    return converted;\r\n                }),\r\n            },\r\n        };\r\n    }\r\n}\r\nexports.default = CodeActionAdapter;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst convert_1 = require(\"../convert\");\r\n// Public: Adapts the language server protocol \"textDocument/completion\" to the\r\n// Atom IDE UI Code-format package.\r\nclass CodeFormatAdapter {\r\n    // Public: Determine whether this adapter can be used to adapt a language server\r\n    // based on the serverCapabilities matrix containing either a documentFormattingProvider\r\n    // or a documentRangeFormattingProvider.\r\n    //\r\n    // * `serverCapabilities` The {ServerCapabilities} of the language server to consider.\r\n    //\r\n    // Returns a {Boolean} indicating this adapter can adapt the server based on the\r\n    // given serverCapabilities.\r\n    static canAdapt(serverCapabilities) {\r\n        return (serverCapabilities.documentRangeFormattingProvider === true ||\r\n            serverCapabilities.documentFormattingProvider === true);\r\n    }\r\n    // Public: Format text in the editor using the given language server connection and an optional range.\r\n    // If the server does not support range formatting then range will be ignored and the entire document formatted.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server that will format the text.\r\n    // * `serverCapabilities` The {ServerCapabilities} of the language server that will be used.\r\n    // * `editor` The Atom {TextEditor} containing the text that will be formatted.\r\n    // * `range` The optional Atom {Range} containing the subset of the text to be formatted.\r\n    //\r\n    // Returns a {Promise} of an {Array} of {Object}s containing the AutoComplete+\r\n    // suggestions to display.\r\n    static format(connection, serverCapabilities, editor, range) {\r\n        if (serverCapabilities.documentRangeFormattingProvider) {\r\n            return CodeFormatAdapter.formatRange(connection, editor, range);\r\n        }\r\n        if (serverCapabilities.documentFormattingProvider) {\r\n            return CodeFormatAdapter.formatDocument(connection, editor);\r\n        }\r\n        throw new Error('Can not format document, language server does not support it');\r\n    }\r\n    // Public: Format the entire document of an Atom {TextEditor} by using a given language server.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server that will format the text.\r\n    // * `editor` The Atom {TextEditor} containing the document to be formatted.\r\n    //\r\n    // Returns a {Promise} of an {Array} of {TextEdit} objects that can be applied to the Atom TextEditor\r\n    // to format the document.\r\n    static formatDocument(connection, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const edits = yield connection.documentFormatting(CodeFormatAdapter.createDocumentFormattingParams(editor));\r\n            return convert_1.default.convertLsTextEdits(edits);\r\n        });\r\n    }\r\n    // Public: Create {DocumentFormattingParams} to be sent to the language server when requesting an\r\n    // entire document is formatted.\r\n    //\r\n    // * `editor` The Atom {TextEditor} containing the document to be formatted.\r\n    //\r\n    // Returns {DocumentFormattingParams} containing the identity of the text document as well as\r\n    // options to be used in formatting the document such as tab size and tabs vs spaces.\r\n    static createDocumentFormattingParams(editor) {\r\n        return {\r\n            textDocument: convert_1.default.editorToTextDocumentIdentifier(editor),\r\n            options: CodeFormatAdapter.getFormatOptions(editor),\r\n        };\r\n    }\r\n    // Public: Format a range within an Atom {TextEditor} by using a given language server.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server that will format the text.\r\n    // * `range` The Atom {Range} containing the range of text that should be formatted.\r\n    // * `editor` The Atom {TextEditor} containing the document to be formatted.\r\n    //\r\n    // Returns a {Promise} of an {Array} of {TextEdit} objects that can be applied to the Atom TextEditor\r\n    // to format the document.\r\n    static formatRange(connection, editor, range) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const edits = yield connection.documentRangeFormatting(CodeFormatAdapter.createDocumentRangeFormattingParams(editor, range));\r\n            return convert_1.default.convertLsTextEdits(edits);\r\n        });\r\n    }\r\n    // Public: Create {DocumentRangeFormattingParams} to be sent to the language server when requesting an\r\n    // entire document is formatted.\r\n    //\r\n    // * `editor` The Atom {TextEditor} containing the document to be formatted.\r\n    // * `range` The Atom {Range} containing the range of text that should be formatted.\r\n    //\r\n    // Returns {DocumentRangeFormattingParams} containing the identity of the text document, the\r\n    // range of the text to be formatted as well as the options to be used in formatting the\r\n    // document such as tab size and tabs vs spaces.\r\n    static createDocumentRangeFormattingParams(editor, range) {\r\n        return {\r\n            textDocument: convert_1.default.editorToTextDocumentIdentifier(editor),\r\n            range: convert_1.default.atomRangeToLSRange(range),\r\n            options: CodeFormatAdapter.getFormatOptions(editor),\r\n        };\r\n    }\r\n    // Public: Format on type within an Atom {TextEditor} by using a given language server.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server that will format the text.\r\n    // * `editor` The Atom {TextEditor} containing the document to be formatted.\r\n    // * `point` The {Point} at which the document to be formatted.\r\n    // * `character` A character that triggered formatting request.\r\n    //\r\n    // Returns a {Promise} of an {Array} of {TextEdit} objects that can be applied to the Atom TextEditor\r\n    // to format the document.\r\n    static formatOnType(connection, editor, point, character) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const edits = yield connection.documentOnTypeFormatting(CodeFormatAdapter.createDocumentOnTypeFormattingParams(editor, point, character));\r\n            return convert_1.default.convertLsTextEdits(edits);\r\n        });\r\n    }\r\n    // Public: Create {DocumentOnTypeFormattingParams} to be sent to the language server when requesting an\r\n    // entire document is formatted.\r\n    //\r\n    // * `editor` The Atom {TextEditor} containing the document to be formatted.\r\n    // * `point` The {Point} at which the document to be formatted.\r\n    // * `character` A character that triggered formatting request.\r\n    //\r\n    // Returns {DocumentOnTypeFormattingParams} containing the identity of the text document, the\r\n    // position of the text to be formatted, the character that triggered formatting request\r\n    // as well as the options to be used in formatting the document such as tab size and tabs vs spaces.\r\n    static createDocumentOnTypeFormattingParams(editor, point, character) {\r\n        return {\r\n            textDocument: convert_1.default.editorToTextDocumentIdentifier(editor),\r\n            position: convert_1.default.pointToPosition(point),\r\n            ch: character,\r\n            options: CodeFormatAdapter.getFormatOptions(editor),\r\n        };\r\n    }\r\n    // Public: Create {DocumentRangeFormattingParams} to be sent to the language server when requesting an\r\n    // entire document is formatted.\r\n    //\r\n    // * `editor` The Atom {TextEditor} containing the document to be formatted.\r\n    // * `range` The Atom {Range} containing the range of document that should be formatted.\r\n    //\r\n    // Returns the {FormattingOptions} to be used containing the keys:\r\n    //  * `tabSize` The number of spaces a tab represents.\r\n    //  * `insertSpaces` {True} if spaces should be used, {False} for tab characters.\r\n    static getFormatOptions(editor) {\r\n        return {\r\n            tabSize: editor.getTabLength(),\r\n            insertSpaces: editor.getSoftTabs(),\r\n        };\r\n    }\r\n}\r\nexports.default = CodeFormatAdapter;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst assert = require(\"assert\");\r\nconst convert_1 = require(\"../convert\");\r\nclass CodeHighlightAdapter {\r\n    // Returns a {Boolean} indicating this adapter can adapt the server based on the\r\n    // given serverCapabilities.\r\n    static canAdapt(serverCapabilities) {\r\n        return serverCapabilities.documentHighlightProvider === true;\r\n    }\r\n    // Public: Creates highlight markers for a given editor position.\r\n    // Throws an error if documentHighlightProvider is not a registered capability.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server that provides highlights.\r\n    // * `serverCapabilities` The {ServerCapabilities} of the language server that will be used.\r\n    // * `editor` The Atom {TextEditor} containing the text to be highlighted.\r\n    // * `position` The Atom {Point} to fetch highlights for.\r\n    //\r\n    // Returns a {Promise} of an {Array} of {Range}s to be turned into highlights.\r\n    static highlight(connection, serverCapabilities, editor, position) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            assert(serverCapabilities.documentHighlightProvider, 'Must have the documentHighlight capability');\r\n            const highlights = yield connection.documentHighlight(convert_1.default.editorToTextDocumentPositionParams(editor, position));\r\n            return highlights.map((highlight) => {\r\n                return convert_1.default.lsRangeToAtomRange(highlight.range);\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.default = CodeHighlightAdapter;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZS1oaWdobGlnaHQtYWRhcHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9hZGFwdGVycy9jb2RlLWhpZ2hsaWdodC1hZGFwdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxpQ0FBa0M7QUFDbEMsd0NBQWlDO0FBV2pDLE1BQXFCLG9CQUFvQjtJQUN2QyxnRkFBZ0Y7SUFDaEYsNEJBQTRCO0lBQ3JCLE1BQU0sQ0FBQyxRQUFRLENBQUMsa0JBQXNDO1FBQzNELE9BQU8sa0JBQWtCLENBQUMseUJBQXlCLEtBQUssSUFBSSxDQUFDO0lBQy9ELENBQUM7SUFFRCxpRUFBaUU7SUFDakUsK0VBQStFO0lBQy9FLEVBQUU7SUFDRiwrRkFBK0Y7SUFDL0YsNEZBQTRGO0lBQzVGLDBFQUEwRTtJQUMxRSx5REFBeUQ7SUFDekQsRUFBRTtJQUNGLDhFQUE4RTtJQUN2RSxNQUFNLENBQU8sU0FBUyxDQUMzQixVQUFvQyxFQUNwQyxrQkFBc0MsRUFDdEMsTUFBa0IsRUFDbEIsUUFBZTs7WUFFZixNQUFNLENBQUMsa0JBQWtCLENBQUMseUJBQXlCLEVBQUUsNENBQTRDLENBQUMsQ0FBQztZQUNuRyxNQUFNLFVBQVUsR0FBRyxNQUFNLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxpQkFBTyxDQUFDLGtDQUFrQyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ3BILE9BQU8sVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFO2dCQUNsQyxPQUFPLGlCQUFPLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3JELENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztLQUFBO0NBQ0Y7QUE1QkQsdUNBNEJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xyXG5pbXBvcnQgQ29udmVydCBmcm9tICcuLi9jb252ZXJ0JztcclxuaW1wb3J0IHtcclxuICBQb2ludCxcclxuICBUZXh0RWRpdG9yLFxyXG4gIFJhbmdlLFxyXG59IGZyb20gJ2F0b20nO1xyXG5pbXBvcnQge1xyXG4gIExhbmd1YWdlQ2xpZW50Q29ubmVjdGlvbixcclxuICBTZXJ2ZXJDYXBhYmlsaXRpZXMsXHJcbn0gZnJvbSAnLi4vbGFuZ3VhZ2VjbGllbnQnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29kZUhpZ2hsaWdodEFkYXB0ZXIge1xyXG4gIC8vIFJldHVybnMgYSB7Qm9vbGVhbn0gaW5kaWNhdGluZyB0aGlzIGFkYXB0ZXIgY2FuIGFkYXB0IHRoZSBzZXJ2ZXIgYmFzZWQgb24gdGhlXHJcbiAgLy8gZ2l2ZW4gc2VydmVyQ2FwYWJpbGl0aWVzLlxyXG4gIHB1YmxpYyBzdGF0aWMgY2FuQWRhcHQoc2VydmVyQ2FwYWJpbGl0aWVzOiBTZXJ2ZXJDYXBhYmlsaXRpZXMpOiBib29sZWFuIHtcclxuICAgIHJldHVybiBzZXJ2ZXJDYXBhYmlsaXRpZXMuZG9jdW1lbnRIaWdobGlnaHRQcm92aWRlciA9PT0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIC8vIFB1YmxpYzogQ3JlYXRlcyBoaWdobGlnaHQgbWFya2VycyBmb3IgYSBnaXZlbiBlZGl0b3IgcG9zaXRpb24uXHJcbiAgLy8gVGhyb3dzIGFuIGVycm9yIGlmIGRvY3VtZW50SGlnaGxpZ2h0UHJvdmlkZXIgaXMgbm90IGEgcmVnaXN0ZXJlZCBjYXBhYmlsaXR5LlxyXG4gIC8vXHJcbiAgLy8gKiBgY29ubmVjdGlvbmAgQSB7TGFuZ3VhZ2VDbGllbnRDb25uZWN0aW9ufSB0byB0aGUgbGFuZ3VhZ2Ugc2VydmVyIHRoYXQgcHJvdmlkZXMgaGlnaGxpZ2h0cy5cclxuICAvLyAqIGBzZXJ2ZXJDYXBhYmlsaXRpZXNgIFRoZSB7U2VydmVyQ2FwYWJpbGl0aWVzfSBvZiB0aGUgbGFuZ3VhZ2Ugc2VydmVyIHRoYXQgd2lsbCBiZSB1c2VkLlxyXG4gIC8vICogYGVkaXRvcmAgVGhlIEF0b20ge1RleHRFZGl0b3J9IGNvbnRhaW5pbmcgdGhlIHRleHQgdG8gYmUgaGlnaGxpZ2h0ZWQuXHJcbiAgLy8gKiBgcG9zaXRpb25gIFRoZSBBdG9tIHtQb2ludH0gdG8gZmV0Y2ggaGlnaGxpZ2h0cyBmb3IuXHJcbiAgLy9cclxuICAvLyBSZXR1cm5zIGEge1Byb21pc2V9IG9mIGFuIHtBcnJheX0gb2Yge1JhbmdlfXMgdG8gYmUgdHVybmVkIGludG8gaGlnaGxpZ2h0cy5cclxuICBwdWJsaWMgc3RhdGljIGFzeW5jIGhpZ2hsaWdodChcclxuICAgIGNvbm5lY3Rpb246IExhbmd1YWdlQ2xpZW50Q29ubmVjdGlvbixcclxuICAgIHNlcnZlckNhcGFiaWxpdGllczogU2VydmVyQ2FwYWJpbGl0aWVzLFxyXG4gICAgZWRpdG9yOiBUZXh0RWRpdG9yLFxyXG4gICAgcG9zaXRpb246IFBvaW50LFxyXG4gICk6IFByb21pc2U8UmFuZ2VbXSB8IG51bGw+IHtcclxuICAgIGFzc2VydChzZXJ2ZXJDYXBhYmlsaXRpZXMuZG9jdW1lbnRIaWdobGlnaHRQcm92aWRlciwgJ011c3QgaGF2ZSB0aGUgZG9jdW1lbnRIaWdobGlnaHQgY2FwYWJpbGl0eScpO1xyXG4gICAgY29uc3QgaGlnaGxpZ2h0cyA9IGF3YWl0IGNvbm5lY3Rpb24uZG9jdW1lbnRIaWdobGlnaHQoQ29udmVydC5lZGl0b3JUb1RleHREb2N1bWVudFBvc2l0aW9uUGFyYW1zKGVkaXRvciwgcG9zaXRpb24pKTtcclxuICAgIHJldHVybiBoaWdobGlnaHRzLm1hcCgoaGlnaGxpZ2h0KSA9PiB7XHJcbiAgICAgIHJldHVybiBDb252ZXJ0LmxzUmFuZ2VUb0F0b21SYW5nZShoaWdobGlnaHQucmFuZ2UpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst convert_1 = require(\"../convert\");\r\nconst Utils = require(\"../utils\");\r\n// Public: Adapts the language server protocol \"textDocument/hover\" to the\r\n// Atom IDE UI Datatip package.\r\nclass DatatipAdapter {\r\n    // Public: Determine whether this adapter can be used to adapt a language server\r\n    // based on the serverCapabilities matrix containing a hoverProvider.\r\n    //\r\n    // * `serverCapabilities` The {ServerCapabilities} of the language server to consider.\r\n    //\r\n    // Returns a {Boolean} indicating adapter can adapt the server based on the\r\n    // given serverCapabilities.\r\n    static canAdapt(serverCapabilities) {\r\n        return serverCapabilities.hoverProvider === true;\r\n    }\r\n    // Public: Get the Datatip for this {Point} in a {TextEditor} by querying\r\n    // the language server.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server that will be queried\r\n    //                for the hover text/datatip.\r\n    // * `editor` The Atom {TextEditor} containing the text the Datatip should relate to.\r\n    // * `point` The Atom {Point} containing the point within the text the Datatip should relate to.\r\n    //\r\n    // Returns a {Promise} containing the {Datatip} to display or {null} if no Datatip is available.\r\n    getDatatip(connection, editor, point) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const documentPositionParams = convert_1.default.editorToTextDocumentPositionParams(editor, point);\r\n            const hover = yield connection.hover(documentPositionParams);\r\n            if (hover == null || DatatipAdapter.isEmptyHover(hover)) {\r\n                return null;\r\n            }\r\n            const range = hover.range == null ? Utils.getWordAtPosition(editor, point) : convert_1.default.lsRangeToAtomRange(hover.range);\r\n            const markedStrings = (Array.isArray(hover.contents) ? hover.contents : [hover.contents]).map((str) => DatatipAdapter.convertMarkedString(editor, str));\r\n            return { range, markedStrings };\r\n        });\r\n    }\r\n    static isEmptyHover(hover) {\r\n        return hover.contents == null ||\r\n            (typeof hover.contents === 'string' && hover.contents.length === 0) ||\r\n            (Array.isArray(hover.contents) &&\r\n                (hover.contents.length === 0 || hover.contents[0] === \"\"));\r\n    }\r\n    static convertMarkedString(editor, markedString) {\r\n        if (typeof markedString === 'string') {\r\n            return { type: 'markdown', value: markedString };\r\n        }\r\n        if (markedString.kind) {\r\n            return {\r\n                type: 'markdown',\r\n                value: markedString.value,\r\n            };\r\n        }\r\n        // Must check as <{language: string}> to disambiguate between\r\n        // string and the more explicit object type because MarkedString\r\n        // is a union of the two types\r\n        if (markedString.language) {\r\n            return {\r\n                type: 'snippet',\r\n                // TODO: find a better mapping from language -> grammar\r\n                grammar: atom.grammars.grammarForScopeName(`source.${markedString.language}`) || editor.getGrammar(),\r\n                value: markedString.value,\r\n            };\r\n        }\r\n        // Catch-all case\r\n        return { type: 'markdown', value: markedString.toString() };\r\n    }\r\n}\r\nexports.default = DatatipAdapter;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst convert_1 = require(\"../convert\");\r\nconst Utils = require(\"../utils\");\r\nconst atom_1 = require(\"atom\");\r\n// Public: Adapts the language server definition provider to the\r\n// Atom IDE UI Definitions package for 'Go To Definition' functionality.\r\nclass DefinitionAdapter {\r\n    // Public: Determine whether this adapter can be used to adapt a language server\r\n    // based on the serverCapabilities matrix containing a definitionProvider.\r\n    //\r\n    // * `serverCapabilities` The {ServerCapabilities} of the language server to consider.\r\n    //\r\n    // Returns a {Boolean} indicating adapter can adapt the server based on the\r\n    // given serverCapabilities.\r\n    static canAdapt(serverCapabilities) {\r\n        return serverCapabilities.definitionProvider === true;\r\n    }\r\n    // Public: Get the definitions for a symbol at a given {Point} within a\r\n    // {TextEditor} including optionally highlighting all other references\r\n    // within the document if the langauge server also supports highlighting.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server that will provide definitions and highlights.\r\n    // * `serverCapabilities` The {ServerCapabilities} of the language server that will be used.\r\n    // * `languageName` The name of the programming language.\r\n    // * `editor` The Atom {TextEditor} containing the symbol and potential highlights.\r\n    // * `point` The Atom {Point} containing the position of the text that represents the symbol\r\n    //           for which the definition and highlights should be provided.\r\n    //\r\n    // Returns a {Promise} indicating adapter can adapt the server based on the\r\n    // given serverCapabilities.\r\n    getDefinition(connection, serverCapabilities, languageName, editor, point) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const documentPositionParams = convert_1.default.editorToTextDocumentPositionParams(editor, point);\r\n            const definitionLocations = DefinitionAdapter.normalizeLocations(yield connection.gotoDefinition(documentPositionParams));\r\n            if (definitionLocations == null || definitionLocations.length === 0) {\r\n                return null;\r\n            }\r\n            let queryRange;\r\n            if (serverCapabilities.documentHighlightProvider) {\r\n                const highlights = yield connection.documentHighlight(documentPositionParams);\r\n                if (highlights != null && highlights.length > 0) {\r\n                    queryRange = highlights.map((h) => convert_1.default.lsRangeToAtomRange(h.range));\r\n                }\r\n            }\r\n            return {\r\n                queryRange: queryRange || [Utils.getWordAtPosition(editor, point)],\r\n                definitions: DefinitionAdapter.convertLocationsToDefinitions(definitionLocations, languageName),\r\n            };\r\n        });\r\n    }\r\n    // Public: Normalize the locations so a single {Location} becomes an {Array} of just\r\n    // one. The language server protocol return either as the protocol evolved between v1 and v2.\r\n    //\r\n    // * `locationResult` either a single {Location} object or an {Array} of {Locations}\r\n    //\r\n    // Returns an {Array} of {Location}s or {null} if the locationResult was null.\r\n    static normalizeLocations(locationResult) {\r\n        if (locationResult == null) {\r\n            return null;\r\n        }\r\n        return (Array.isArray(locationResult) ? locationResult : [locationResult]).filter((d) => d.range.start != null);\r\n    }\r\n    // Public: Convert an {Array} of {Location} objects into an Array of {Definition}s.\r\n    //\r\n    // * `locations` An {Array} of {Location} objects to be converted.\r\n    // * `languageName` The name of the language these objects are written in.\r\n    //\r\n    // Returns an {Array} of {Definition}s that represented the converted {Location}s.\r\n    static convertLocationsToDefinitions(locations, languageName) {\r\n        return locations.map((d) => ({\r\n            path: convert_1.default.uriToPath(d.uri),\r\n            position: convert_1.default.positionToPoint(d.range.start),\r\n            range: atom_1.Range.fromObject(convert_1.default.lsRangeToAtomRange(d.range)),\r\n            language: languageName,\r\n        }));\r\n    }\r\n}\r\nexports.default = DefinitionAdapter;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmaW5pdGlvbi1hZGFwdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL2FkYXB0ZXJzL2RlZmluaXRpb24tYWRhcHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0Esd0NBQWlDO0FBQ2pDLGtDQUFrQztBQU1sQywrQkFJYztBQUVkLGdFQUFnRTtBQUNoRSx3RUFBd0U7QUFDeEUsTUFBcUIsaUJBQWlCO0lBQ3BDLGdGQUFnRjtJQUNoRiwwRUFBMEU7SUFDMUUsRUFBRTtJQUNGLHNGQUFzRjtJQUN0RixFQUFFO0lBQ0YsMkVBQTJFO0lBQzNFLDRCQUE0QjtJQUNyQixNQUFNLENBQUMsUUFBUSxDQUFDLGtCQUFzQztRQUMzRCxPQUFPLGtCQUFrQixDQUFDLGtCQUFrQixLQUFLLElBQUksQ0FBQztJQUN4RCxDQUFDO0lBRUQsdUVBQXVFO0lBQ3ZFLHNFQUFzRTtJQUN0RSx5RUFBeUU7SUFDekUsRUFBRTtJQUNGLG1IQUFtSDtJQUNuSCw0RkFBNEY7SUFDNUYseURBQXlEO0lBQ3pELG1GQUFtRjtJQUNuRiw0RkFBNEY7SUFDNUYsd0VBQXdFO0lBQ3hFLEVBQUU7SUFDRiwyRUFBMkU7SUFDM0UsNEJBQTRCO0lBQ2YsYUFBYSxDQUN4QixVQUFvQyxFQUNwQyxrQkFBc0MsRUFDdEMsWUFBb0IsRUFDcEIsTUFBa0IsRUFDbEIsS0FBWTs7WUFFWixNQUFNLHNCQUFzQixHQUFHLGlCQUFPLENBQUMsa0NBQWtDLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ3pGLE1BQU0sbUJBQW1CLEdBQUcsaUJBQWlCLENBQUMsa0JBQWtCLENBQzlELE1BQU0sVUFBVSxDQUFDLGNBQWMsQ0FBQyxzQkFBc0IsQ0FBQyxDQUN4RCxDQUFDO1lBQ0YsSUFBSSxtQkFBbUIsSUFBSSxJQUFJLElBQUksbUJBQW1CLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtnQkFDbkUsT0FBTyxJQUFJLENBQUM7YUFDYjtZQUVELElBQUksVUFBVSxDQUFDO1lBQ2YsSUFBSSxrQkFBa0IsQ0FBQyx5QkFBeUIsRUFBRTtnQkFDaEQsTUFBTSxVQUFVLEdBQUcsTUFBTSxVQUFVLENBQUMsaUJBQWlCLENBQUMsc0JBQXNCLENBQUMsQ0FBQztnQkFDOUUsSUFBSSxVQUFVLElBQUksSUFBSSxJQUFJLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO29CQUMvQyxVQUFVLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsaUJBQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztpQkFDekU7YUFDRjtZQUVELE9BQU87Z0JBQ0wsVUFBVSxFQUFFLFVBQVUsSUFBSSxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7Z0JBQ2xFLFdBQVcsRUFBRSxpQkFBaUIsQ0FBQyw2QkFBNkIsQ0FBQyxtQkFBbUIsRUFBRSxZQUFZLENBQUM7YUFDaEcsQ0FBQztRQUNKLENBQUM7S0FBQTtJQUVELG9GQUFvRjtJQUNwRiw2RkFBNkY7SUFDN0YsRUFBRTtJQUNGLG9GQUFvRjtJQUNwRixFQUFFO0lBQ0YsOEVBQThFO0lBQ3ZFLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxjQUFxQztRQUNwRSxJQUFJLGNBQWMsSUFBSSxJQUFJLEVBQUU7WUFDMUIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxDQUFDO0lBQ2xILENBQUM7SUFFRCxtRkFBbUY7SUFDbkYsRUFBRTtJQUNGLGtFQUFrRTtJQUNsRSwwRUFBMEU7SUFDMUUsRUFBRTtJQUNGLGtGQUFrRjtJQUMzRSxNQUFNLENBQUMsNkJBQTZCLENBQUMsU0FBcUIsRUFBRSxZQUFvQjtRQUNyRixPQUFPLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDM0IsSUFBSSxFQUFFLGlCQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7WUFDOUIsUUFBUSxFQUFFLGlCQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO1lBQ2hELEtBQUssRUFBRSxZQUFLLENBQUMsVUFBVSxDQUFDLGlCQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzVELFFBQVEsRUFBRSxZQUFZO1NBQ3ZCLENBQUMsQ0FBQyxDQUFDO0lBQ04sQ0FBQztDQUNGO0FBakZELG9DQWlGQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGF0b21JZGUgZnJvbSAnYXRvbS1pZGUnO1xyXG5pbXBvcnQgQ29udmVydCBmcm9tICcuLi9jb252ZXJ0JztcclxuaW1wb3J0ICogYXMgVXRpbHMgZnJvbSAnLi4vdXRpbHMnO1xyXG5pbXBvcnQge1xyXG4gIExhbmd1YWdlQ2xpZW50Q29ubmVjdGlvbixcclxuICBMb2NhdGlvbixcclxuICBTZXJ2ZXJDYXBhYmlsaXRpZXMsXHJcbn0gZnJvbSAnLi4vbGFuZ3VhZ2VjbGllbnQnO1xyXG5pbXBvcnQge1xyXG4gIFBvaW50LFxyXG4gIFRleHRFZGl0b3IsXHJcbiAgUmFuZ2UsXHJcbn0gZnJvbSAnYXRvbSc7XHJcblxyXG4vLyBQdWJsaWM6IEFkYXB0cyB0aGUgbGFuZ3VhZ2Ugc2VydmVyIGRlZmluaXRpb24gcHJvdmlkZXIgdG8gdGhlXHJcbi8vIEF0b20gSURFIFVJIERlZmluaXRpb25zIHBhY2thZ2UgZm9yICdHbyBUbyBEZWZpbml0aW9uJyBmdW5jdGlvbmFsaXR5LlxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEZWZpbml0aW9uQWRhcHRlciB7XHJcbiAgLy8gUHVibGljOiBEZXRlcm1pbmUgd2hldGhlciB0aGlzIGFkYXB0ZXIgY2FuIGJlIHVzZWQgdG8gYWRhcHQgYSBsYW5ndWFnZSBzZXJ2ZXJcclxuICAvLyBiYXNlZCBvbiB0aGUgc2VydmVyQ2FwYWJpbGl0aWVzIG1hdHJpeCBjb250YWluaW5nIGEgZGVmaW5pdGlvblByb3ZpZGVyLlxyXG4gIC8vXHJcbiAgLy8gKiBgc2VydmVyQ2FwYWJpbGl0aWVzYCBUaGUge1NlcnZlckNhcGFiaWxpdGllc30gb2YgdGhlIGxhbmd1YWdlIHNlcnZlciB0byBjb25zaWRlci5cclxuICAvL1xyXG4gIC8vIFJldHVybnMgYSB7Qm9vbGVhbn0gaW5kaWNhdGluZyBhZGFwdGVyIGNhbiBhZGFwdCB0aGUgc2VydmVyIGJhc2VkIG9uIHRoZVxyXG4gIC8vIGdpdmVuIHNlcnZlckNhcGFiaWxpdGllcy5cclxuICBwdWJsaWMgc3RhdGljIGNhbkFkYXB0KHNlcnZlckNhcGFiaWxpdGllczogU2VydmVyQ2FwYWJpbGl0aWVzKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gc2VydmVyQ2FwYWJpbGl0aWVzLmRlZmluaXRpb25Qcm92aWRlciA9PT0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIC8vIFB1YmxpYzogR2V0IHRoZSBkZWZpbml0aW9ucyBmb3IgYSBzeW1ib2wgYXQgYSBnaXZlbiB7UG9pbnR9IHdpdGhpbiBhXHJcbiAgLy8ge1RleHRFZGl0b3J9IGluY2x1ZGluZyBvcHRpb25hbGx5IGhpZ2hsaWdodGluZyBhbGwgb3RoZXIgcmVmZXJlbmNlc1xyXG4gIC8vIHdpdGhpbiB0aGUgZG9jdW1lbnQgaWYgdGhlIGxhbmdhdWdlIHNlcnZlciBhbHNvIHN1cHBvcnRzIGhpZ2hsaWdodGluZy5cclxuICAvL1xyXG4gIC8vICogYGNvbm5lY3Rpb25gIEEge0xhbmd1YWdlQ2xpZW50Q29ubmVjdGlvbn0gdG8gdGhlIGxhbmd1YWdlIHNlcnZlciB0aGF0IHdpbGwgcHJvdmlkZSBkZWZpbml0aW9ucyBhbmQgaGlnaGxpZ2h0cy5cclxuICAvLyAqIGBzZXJ2ZXJDYXBhYmlsaXRpZXNgIFRoZSB7U2VydmVyQ2FwYWJpbGl0aWVzfSBvZiB0aGUgbGFuZ3VhZ2Ugc2VydmVyIHRoYXQgd2lsbCBiZSB1c2VkLlxyXG4gIC8vICogYGxhbmd1YWdlTmFtZWAgVGhlIG5hbWUgb2YgdGhlIHByb2dyYW1taW5nIGxhbmd1YWdlLlxyXG4gIC8vICogYGVkaXRvcmAgVGhlIEF0b20ge1RleHRFZGl0b3J9IGNvbnRhaW5pbmcgdGhlIHN5bWJvbCBhbmQgcG90ZW50aWFsIGhpZ2hsaWdodHMuXHJcbiAgLy8gKiBgcG9pbnRgIFRoZSBBdG9tIHtQb2ludH0gY29udGFpbmluZyB0aGUgcG9zaXRpb24gb2YgdGhlIHRleHQgdGhhdCByZXByZXNlbnRzIHRoZSBzeW1ib2xcclxuICAvLyAgICAgICAgICAgZm9yIHdoaWNoIHRoZSBkZWZpbml0aW9uIGFuZCBoaWdobGlnaHRzIHNob3VsZCBiZSBwcm92aWRlZC5cclxuICAvL1xyXG4gIC8vIFJldHVybnMgYSB7UHJvbWlzZX0gaW5kaWNhdGluZyBhZGFwdGVyIGNhbiBhZGFwdCB0aGUgc2VydmVyIGJhc2VkIG9uIHRoZVxyXG4gIC8vIGdpdmVuIHNlcnZlckNhcGFiaWxpdGllcy5cclxuICBwdWJsaWMgYXN5bmMgZ2V0RGVmaW5pdGlvbihcclxuICAgIGNvbm5lY3Rpb246IExhbmd1YWdlQ2xpZW50Q29ubmVjdGlvbixcclxuICAgIHNlcnZlckNhcGFiaWxpdGllczogU2VydmVyQ2FwYWJpbGl0aWVzLFxyXG4gICAgbGFuZ3VhZ2VOYW1lOiBzdHJpbmcsXHJcbiAgICBlZGl0b3I6IFRleHRFZGl0b3IsXHJcbiAgICBwb2ludDogUG9pbnQsXHJcbiAgKTogUHJvbWlzZTxhdG9tSWRlLkRlZmluaXRpb25RdWVyeVJlc3VsdCB8IG51bGw+IHtcclxuICAgIGNvbnN0IGRvY3VtZW50UG9zaXRpb25QYXJhbXMgPSBDb252ZXJ0LmVkaXRvclRvVGV4dERvY3VtZW50UG9zaXRpb25QYXJhbXMoZWRpdG9yLCBwb2ludCk7XHJcbiAgICBjb25zdCBkZWZpbml0aW9uTG9jYXRpb25zID0gRGVmaW5pdGlvbkFkYXB0ZXIubm9ybWFsaXplTG9jYXRpb25zKFxyXG4gICAgICBhd2FpdCBjb25uZWN0aW9uLmdvdG9EZWZpbml0aW9uKGRvY3VtZW50UG9zaXRpb25QYXJhbXMpLFxyXG4gICAgKTtcclxuICAgIGlmIChkZWZpbml0aW9uTG9jYXRpb25zID09IG51bGwgfHwgZGVmaW5pdGlvbkxvY2F0aW9ucy5sZW5ndGggPT09IDApIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IHF1ZXJ5UmFuZ2U7XHJcbiAgICBpZiAoc2VydmVyQ2FwYWJpbGl0aWVzLmRvY3VtZW50SGlnaGxpZ2h0UHJvdmlkZXIpIHtcclxuICAgICAgY29uc3QgaGlnaGxpZ2h0cyA9IGF3YWl0IGNvbm5lY3Rpb24uZG9jdW1lbnRIaWdobGlnaHQoZG9jdW1lbnRQb3NpdGlvblBhcmFtcyk7XHJcbiAgICAgIGlmIChoaWdobGlnaHRzICE9IG51bGwgJiYgaGlnaGxpZ2h0cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgcXVlcnlSYW5nZSA9IGhpZ2hsaWdodHMubWFwKChoKSA9PiBDb252ZXJ0LmxzUmFuZ2VUb0F0b21SYW5nZShoLnJhbmdlKSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBxdWVyeVJhbmdlOiBxdWVyeVJhbmdlIHx8IFtVdGlscy5nZXRXb3JkQXRQb3NpdGlvbihlZGl0b3IsIHBvaW50KV0sXHJcbiAgICAgIGRlZmluaXRpb25zOiBEZWZpbml0aW9uQWRhcHRlci5jb252ZXJ0TG9jYXRpb25zVG9EZWZpbml0aW9ucyhkZWZpbml0aW9uTG9jYXRpb25zLCBsYW5ndWFnZU5hbWUpLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8vIFB1YmxpYzogTm9ybWFsaXplIHRoZSBsb2NhdGlvbnMgc28gYSBzaW5nbGUge0xvY2F0aW9ufSBiZWNvbWVzIGFuIHtBcnJheX0gb2YganVzdFxyXG4gIC8vIG9uZS4gVGhlIGxhbmd1YWdlIHNlcnZlciBwcm90b2NvbCByZXR1cm4gZWl0aGVyIGFzIHRoZSBwcm90b2NvbCBldm9sdmVkIGJldHdlZW4gdjEgYW5kIHYyLlxyXG4gIC8vXHJcbiAgLy8gKiBgbG9jYXRpb25SZXN1bHRgIGVpdGhlciBhIHNpbmdsZSB7TG9jYXRpb259IG9iamVjdCBvciBhbiB7QXJyYXl9IG9mIHtMb2NhdGlvbnN9XHJcbiAgLy9cclxuICAvLyBSZXR1cm5zIGFuIHtBcnJheX0gb2Yge0xvY2F0aW9ufXMgb3Ige251bGx9IGlmIHRoZSBsb2NhdGlvblJlc3VsdCB3YXMgbnVsbC5cclxuICBwdWJsaWMgc3RhdGljIG5vcm1hbGl6ZUxvY2F0aW9ucyhsb2NhdGlvblJlc3VsdDogTG9jYXRpb24gfCBMb2NhdGlvbltdKTogTG9jYXRpb25bXSB8IG51bGwge1xyXG4gICAgaWYgKGxvY2F0aW9uUmVzdWx0ID09IG51bGwpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKEFycmF5LmlzQXJyYXkobG9jYXRpb25SZXN1bHQpID8gbG9jYXRpb25SZXN1bHQgOiBbbG9jYXRpb25SZXN1bHRdKS5maWx0ZXIoKGQpID0+IGQucmFuZ2Uuc3RhcnQgIT0gbnVsbCk7XHJcbiAgfVxyXG5cclxuICAvLyBQdWJsaWM6IENvbnZlcnQgYW4ge0FycmF5fSBvZiB7TG9jYXRpb259IG9iamVjdHMgaW50byBhbiBBcnJheSBvZiB7RGVmaW5pdGlvbn1zLlxyXG4gIC8vXHJcbiAgLy8gKiBgbG9jYXRpb25zYCBBbiB7QXJyYXl9IG9mIHtMb2NhdGlvbn0gb2JqZWN0cyB0byBiZSBjb252ZXJ0ZWQuXHJcbiAgLy8gKiBgbGFuZ3VhZ2VOYW1lYCBUaGUgbmFtZSBvZiB0aGUgbGFuZ3VhZ2UgdGhlc2Ugb2JqZWN0cyBhcmUgd3JpdHRlbiBpbi5cclxuICAvL1xyXG4gIC8vIFJldHVybnMgYW4ge0FycmF5fSBvZiB7RGVmaW5pdGlvbn1zIHRoYXQgcmVwcmVzZW50ZWQgdGhlIGNvbnZlcnRlZCB7TG9jYXRpb259cy5cclxuICBwdWJsaWMgc3RhdGljIGNvbnZlcnRMb2NhdGlvbnNUb0RlZmluaXRpb25zKGxvY2F0aW9uczogTG9jYXRpb25bXSwgbGFuZ3VhZ2VOYW1lOiBzdHJpbmcpOiBhdG9tSWRlLkRlZmluaXRpb25bXSB7XHJcbiAgICByZXR1cm4gbG9jYXRpb25zLm1hcCgoZCkgPT4gKHtcclxuICAgICAgcGF0aDogQ29udmVydC51cmlUb1BhdGgoZC51cmkpLFxyXG4gICAgICBwb3NpdGlvbjogQ29udmVydC5wb3NpdGlvblRvUG9pbnQoZC5yYW5nZS5zdGFydCksXHJcbiAgICAgIHJhbmdlOiBSYW5nZS5mcm9tT2JqZWN0KENvbnZlcnQubHNSYW5nZVRvQXRvbVJhbmdlKGQucmFuZ2UpKSxcclxuICAgICAgbGFuZ3VhZ2U6IGxhbmd1YWdlTmFtZSxcclxuICAgIH0pKTtcclxuICB9XHJcbn1cclxuIl19","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst convert_1 = require(\"../convert\");\r\nconst languageclient_1 = require(\"../languageclient\");\r\nconst apply_edit_adapter_1 = require(\"./apply-edit-adapter\");\r\nconst atom_1 = require(\"atom\");\r\nconst Utils = require(\"../utils\");\r\n// Public: Synchronizes the documents between Atom and the language server by notifying\r\n// each end of changes, opening, closing and other events as well as sending and applying\r\n// changes either in whole or in part depending on what the language server supports.\r\nclass DocumentSyncAdapter {\r\n    // Public: Create a new {DocumentSyncAdapter} for the given language server.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server to be kept in sync.\r\n    // * `documentSync` The document syncing options.\r\n    // * `editorSelector` A predicate function that takes a {TextEditor} and returns a {boolean}\r\n    //                    indicating whether this adapter should care about the contents of the editor.\r\n    constructor(_connection, _editorSelector, documentSync, _reportBusyWhile) {\r\n        this._connection = _connection;\r\n        this._editorSelector = _editorSelector;\r\n        this._reportBusyWhile = _reportBusyWhile;\r\n        this._disposable = new atom_1.CompositeDisposable();\r\n        this._editors = new WeakMap();\r\n        this._versions = new Map();\r\n        if (typeof documentSync === 'object') {\r\n            this._documentSync = documentSync;\r\n        }\r\n        else {\r\n            this._documentSync = {\r\n                change: documentSync || languageclient_1.TextDocumentSyncKind.Full,\r\n            };\r\n        }\r\n        this._disposable.add(atom.textEditors.observe(this.observeTextEditor.bind(this)));\r\n    }\r\n    // Public: Determine whether this adapter can be used to adapt a language server\r\n    // based on the serverCapabilities matrix textDocumentSync capability either being Full or\r\n    // Incremental.\r\n    //\r\n    // * `serverCapabilities` The {ServerCapabilities} of the language server to consider.\r\n    //\r\n    // Returns a {Boolean} indicating adapter can adapt the server based on the\r\n    // given serverCapabilities.\r\n    static canAdapt(serverCapabilities) {\r\n        return this.canAdaptV2(serverCapabilities) || this.canAdaptV3(serverCapabilities);\r\n    }\r\n    static canAdaptV2(serverCapabilities) {\r\n        return (serverCapabilities.textDocumentSync === languageclient_1.TextDocumentSyncKind.Incremental ||\r\n            serverCapabilities.textDocumentSync === languageclient_1.TextDocumentSyncKind.Full);\r\n    }\r\n    static canAdaptV3(serverCapabilities) {\r\n        const options = serverCapabilities.textDocumentSync;\r\n        return (options !== null &&\r\n            typeof options === 'object' &&\r\n            (options.change === languageclient_1.TextDocumentSyncKind.Incremental || options.change === languageclient_1.TextDocumentSyncKind.Full));\r\n    }\r\n    // Dispose this adapter ensuring any resources are freed and events unhooked.\r\n    dispose() {\r\n        this._disposable.dispose();\r\n    }\r\n    // Examine a {TextEditor} and decide if we wish to observe it. If so ensure that we stop observing it\r\n    // when it is closed or otherwise destroyed.\r\n    //\r\n    // * `editor` A {TextEditor} to consider for observation.\r\n    observeTextEditor(editor) {\r\n        const listener = editor.observeGrammar((_grammar) => this._handleGrammarChange(editor));\r\n        this._disposable.add(editor.onDidDestroy(() => {\r\n            this._disposable.remove(listener);\r\n            listener.dispose();\r\n        }));\r\n        this._disposable.add(listener);\r\n        if (!this._editors.has(editor) && this._editorSelector(editor)) {\r\n            this._handleNewEditor(editor);\r\n        }\r\n    }\r\n    _handleGrammarChange(editor) {\r\n        const sync = this._editors.get(editor);\r\n        if (sync != null && !this._editorSelector(editor)) {\r\n            this._editors.delete(editor);\r\n            this._disposable.remove(sync);\r\n            sync.didClose();\r\n            sync.dispose();\r\n        }\r\n        else if (sync == null && this._editorSelector(editor)) {\r\n            this._handleNewEditor(editor);\r\n        }\r\n    }\r\n    _handleNewEditor(editor) {\r\n        const sync = new TextEditorSyncAdapter(editor, this._connection, this._documentSync, this._versions, this._reportBusyWhile);\r\n        this._editors.set(editor, sync);\r\n        this._disposable.add(sync);\r\n        this._disposable.add(editor.onDidDestroy(() => {\r\n            const destroyedSync = this._editors.get(editor);\r\n            if (destroyedSync) {\r\n                this._editors.delete(editor);\r\n                this._disposable.remove(destroyedSync);\r\n                destroyedSync.dispose();\r\n            }\r\n        }));\r\n    }\r\n    getEditorSyncAdapter(editor) {\r\n        return this._editors.get(editor);\r\n    }\r\n}\r\nexports.default = DocumentSyncAdapter;\r\n// Public: Keep a single {TextEditor} in sync with a given language server.\r\nclass TextEditorSyncAdapter {\r\n    // Public: Create a {TextEditorSyncAdapter} in sync with a given language server.\r\n    //\r\n    // * `editor` A {TextEditor} to keep in sync.\r\n    // * `connection` A {LanguageClientConnection} to a language server to keep in sync.\r\n    // * `documentSync` The document syncing options.\r\n    constructor(_editor, _connection, _documentSync, _versions, _reportBusyWhile) {\r\n        this._editor = _editor;\r\n        this._connection = _connection;\r\n        this._documentSync = _documentSync;\r\n        this._versions = _versions;\r\n        this._reportBusyWhile = _reportBusyWhile;\r\n        this._disposable = new atom_1.CompositeDisposable();\r\n        this._fakeDidChangeWatchedFiles = atom.project.onDidChangeFiles == null;\r\n        const changeTracking = this.setupChangeTracking(_documentSync);\r\n        if (changeTracking != null) {\r\n            this._disposable.add(changeTracking);\r\n        }\r\n        // These handlers are attached only if server supports them\r\n        if (_documentSync.willSave) {\r\n            this._disposable.add(_editor.getBuffer().onWillSave(this.willSave.bind(this)));\r\n        }\r\n        if (_documentSync.willSaveWaitUntil) {\r\n            this._disposable.add(_editor.getBuffer().onWillSave(this.willSaveWaitUntil.bind(this)));\r\n        }\r\n        // Send close notifications unless it's explicitly disabled\r\n        if (_documentSync.openClose !== false) {\r\n            this._disposable.add(_editor.onDidDestroy(this.didClose.bind(this)));\r\n        }\r\n        this._disposable.add(_editor.onDidSave(this.didSave.bind(this)), _editor.onDidChangePath(this.didRename.bind(this)));\r\n        this._currentUri = this.getEditorUri();\r\n        if (_documentSync.openClose !== false) {\r\n            this.didOpen();\r\n        }\r\n    }\r\n    // The change tracking disposable listener that will ensure that changes are sent to the\r\n    // language server as appropriate.\r\n    setupChangeTracking(documentSync) {\r\n        switch (documentSync.change) {\r\n            case languageclient_1.TextDocumentSyncKind.Full:\r\n                return this._editor.onDidChange(this.sendFullChanges.bind(this));\r\n            case languageclient_1.TextDocumentSyncKind.Incremental:\r\n                return this._editor.getBuffer().onDidChangeText(this.sendIncrementalChanges.bind(this));\r\n        }\r\n        return null;\r\n    }\r\n    // Dispose this adapter ensuring any resources are freed and events unhooked.\r\n    dispose() {\r\n        this._disposable.dispose();\r\n    }\r\n    // Get the languageId field that will be sent to the language server by simply\r\n    // using the grammar name.\r\n    getLanguageId() {\r\n        return this._editor.getGrammar().name;\r\n    }\r\n    // Public: Create a {VersionedTextDocumentIdentifier} for the document observed by\r\n    // this adapter including both the Uri and the current Version.\r\n    getVersionedTextDocumentIdentifier() {\r\n        return {\r\n            uri: this.getEditorUri(),\r\n            version: this._getVersion(this._editor.getPath() || ''),\r\n        };\r\n    }\r\n    // Public: Send the entire document to the language server. This is used when\r\n    // operating in Full (1) sync mode.\r\n    sendFullChanges() {\r\n        if (!this._isPrimaryAdapter()) {\r\n            return;\r\n        } // Multiple editors, we are not first\r\n        this._bumpVersion();\r\n        this._connection.didChangeTextDocument({\r\n            textDocument: this.getVersionedTextDocumentIdentifier(),\r\n            contentChanges: [{ text: this._editor.getText() }],\r\n        });\r\n    }\r\n    // Public: Send the incremental text changes to the language server. This is used\r\n    // when operating in Incremental (2) sync mode.\r\n    //\r\n    // * `event` The event fired by Atom to indicate the document has stopped changing\r\n    //           including a list of changes since the last time this event fired for this\r\n    //           text editor.\r\n    // Note: The order of changes in the event is guaranteed top to bottom.  Language server\r\n    // expects this in reverse.\r\n    sendIncrementalChanges(event) {\r\n        if (event.changes.length > 0) {\r\n            if (!this._isPrimaryAdapter()) {\r\n                return;\r\n            } // Multiple editors, we are not first\r\n            this._bumpVersion();\r\n            this._connection.didChangeTextDocument({\r\n                textDocument: this.getVersionedTextDocumentIdentifier(),\r\n                contentChanges: event.changes.map(TextEditorSyncAdapter.textEditToContentChange).reverse(),\r\n            });\r\n        }\r\n    }\r\n    // Public: Convert an Atom {TextEditEvent} to a language server {TextDocumentContentChangeEvent}\r\n    // object.\r\n    //\r\n    // * `change` The Atom {TextEditEvent} to convert.\r\n    //\r\n    // Returns a {TextDocumentContentChangeEvent} that represents the converted {TextEditEvent}.\r\n    static textEditToContentChange(change) {\r\n        return {\r\n            range: convert_1.default.atomRangeToLSRange(change.oldRange),\r\n            rangeLength: change.oldText.length,\r\n            text: change.newText,\r\n        };\r\n    }\r\n    _isPrimaryAdapter() {\r\n        const lowestIdForBuffer = Math.min(...atom.workspace\r\n            .getTextEditors()\r\n            .filter((t) => t.getBuffer() === this._editor.getBuffer())\r\n            .map((t) => t.id));\r\n        return lowestIdForBuffer === this._editor.id;\r\n    }\r\n    _bumpVersion() {\r\n        const filePath = this._editor.getPath();\r\n        if (filePath == null) {\r\n            return;\r\n        }\r\n        this._versions.set(filePath, this._getVersion(filePath) + 1);\r\n    }\r\n    // Ensure when the document is opened we send notification to the language server\r\n    // so it can load it in and keep track of diagnostics etc.\r\n    didOpen() {\r\n        const filePath = this._editor.getPath();\r\n        if (filePath == null) {\r\n            return;\r\n        } // Not yet saved\r\n        if (!this._isPrimaryAdapter()) {\r\n            return;\r\n        } // Multiple editors, we are not first\r\n        this._connection.didOpenTextDocument({\r\n            textDocument: {\r\n                uri: this.getEditorUri(),\r\n                languageId: this.getLanguageId().toLowerCase(),\r\n                version: this._getVersion(filePath),\r\n                text: this._editor.getText(),\r\n            },\r\n        });\r\n    }\r\n    _getVersion(filePath) {\r\n        return this._versions.get(filePath) || 1;\r\n    }\r\n    // Called when the {TextEditor} is closed and sends the 'didCloseTextDocument' notification to\r\n    // the connected language server.\r\n    didClose() {\r\n        if (this._editor.getPath() == null) {\r\n            return;\r\n        } // Not yet saved\r\n        const fileStillOpen = atom.workspace.getTextEditors().find((t) => t.getBuffer() === this._editor.getBuffer());\r\n        if (fileStillOpen) {\r\n            return; // Other windows or editors still have this file open\r\n        }\r\n        this._connection.didCloseTextDocument({ textDocument: { uri: this.getEditorUri() } });\r\n    }\r\n    // Called just before the {TextEditor} saves and sends the 'willSaveTextDocument' notification to\r\n    // the connected language server.\r\n    willSave() {\r\n        if (!this._isPrimaryAdapter()) {\r\n            return;\r\n        }\r\n        const uri = this.getEditorUri();\r\n        this._connection.willSaveTextDocument({\r\n            textDocument: { uri },\r\n            reason: languageclient_1.TextDocumentSaveReason.Manual,\r\n        });\r\n    }\r\n    // Called just before the {TextEditor} saves, sends the 'willSaveWaitUntilTextDocument' request to\r\n    // the connected language server and waits for the response before saving the buffer.\r\n    willSaveWaitUntil() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isPrimaryAdapter()) {\r\n                return Promise.resolve();\r\n            }\r\n            const buffer = this._editor.getBuffer();\r\n            const uri = this.getEditorUri();\r\n            const title = this._editor.getLongTitle();\r\n            const applyEditsOrTimeout = Utils.promiseWithTimeout(2500, // 2.5 seconds timeout\r\n            this._connection.willSaveWaitUntilTextDocument({\r\n                textDocument: { uri },\r\n                reason: languageclient_1.TextDocumentSaveReason.Manual,\r\n            })).then((edits) => {\r\n                const cursor = this._editor.getCursorBufferPosition();\r\n                apply_edit_adapter_1.default.applyEdits(buffer, convert_1.default.convertLsTextEdits(edits));\r\n                this._editor.setCursorBufferPosition(cursor);\r\n            }).catch((err) => {\r\n                atom.notifications.addError('On-save action failed', {\r\n                    description: `Failed to apply edits to ${title}`,\r\n                    detail: err.message,\r\n                });\r\n                return;\r\n            });\r\n            const withBusySignal = this._reportBusyWhile(`Applying on-save edits for ${title}`, () => applyEditsOrTimeout);\r\n            return withBusySignal || applyEditsOrTimeout;\r\n        });\r\n    }\r\n    // Called when the {TextEditor} saves and sends the 'didSaveTextDocument' notification to\r\n    // the connected language server.\r\n    // Note: Right now this also sends the `didChangeWatchedFiles` notification as well but that\r\n    // will be sent from elsewhere soon.\r\n    didSave() {\r\n        if (!this._isPrimaryAdapter()) {\r\n            return;\r\n        }\r\n        const uri = this.getEditorUri();\r\n        const didSaveNotification = {\r\n            textDocument: { uri, version: this._getVersion((uri)) },\r\n        };\r\n        if (this._documentSync.save && this._documentSync.save.includeText) {\r\n            didSaveNotification.text = this._editor.getText();\r\n        }\r\n        this._connection.didSaveTextDocument(didSaveNotification);\r\n        if (this._fakeDidChangeWatchedFiles) {\r\n            this._connection.didChangeWatchedFiles({\r\n                changes: [{ uri, type: languageclient_1.FileChangeType.Changed }],\r\n            });\r\n        }\r\n    }\r\n    didRename() {\r\n        if (!this._isPrimaryAdapter()) {\r\n            return;\r\n        }\r\n        const oldUri = this._currentUri;\r\n        this._currentUri = this.getEditorUri();\r\n        if (!oldUri) {\r\n            return; // Didn't previously have a name\r\n        }\r\n        if (this._documentSync.openClose !== false) {\r\n            this._connection.didCloseTextDocument({ textDocument: { uri: oldUri } });\r\n        }\r\n        if (this._fakeDidChangeWatchedFiles) {\r\n            this._connection.didChangeWatchedFiles({\r\n                changes: [{ uri: oldUri, type: languageclient_1.FileChangeType.Deleted }, { uri: this._currentUri, type: languageclient_1.FileChangeType.Created }],\r\n            });\r\n        }\r\n        // Send an equivalent open event for this editor, which will now use the new\r\n        // file path.\r\n        if (this._documentSync.openClose !== false) {\r\n            this.didOpen();\r\n        }\r\n    }\r\n    // Public: Obtain the current {TextEditor} path and convert it to a Uri.\r\n    getEditorUri() {\r\n        return convert_1.default.pathToUri(this._editor.getPath() || '');\r\n    }\r\n}\r\nexports.TextEditorSyncAdapter = TextEditorSyncAdapter;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst convert_1 = require(\"../convert\");\r\n// Public: Adapts the language server definition provider to the\r\n// Atom IDE UI Definitions package for 'Go To Definition' functionality.\r\nclass FindReferencesAdapter {\r\n    // Public: Determine whether this adapter can be used to adapt a language server\r\n    // based on the serverCapabilities matrix containing a referencesProvider.\r\n    //\r\n    // * `serverCapabilities` The {ServerCapabilities} of the language server to consider.\r\n    //\r\n    // Returns a {Boolean} indicating adapter can adapt the server based on the\r\n    // given serverCapabilities.\r\n    static canAdapt(serverCapabilities) {\r\n        return serverCapabilities.referencesProvider === true;\r\n    }\r\n    // Public: Get the references for a specific symbol within the document as represented by\r\n    // the {TextEditor} and {Point} within it via the language server.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server that will be queried\r\n    //                for the references.\r\n    // * `editor` The Atom {TextEditor} containing the text the references should relate to.\r\n    // * `point` The Atom {Point} containing the point within the text the references should relate to.\r\n    //\r\n    // Returns a {Promise} containing a {FindReferencesReturn} with all the references the language server\r\n    // could find.\r\n    getReferences(connection, editor, point, projectRoot) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const locations = yield connection.findReferences(FindReferencesAdapter.createReferenceParams(editor, point));\r\n            if (locations == null) {\r\n                return null;\r\n            }\r\n            const references = locations.map(FindReferencesAdapter.locationToReference);\r\n            return {\r\n                type: 'data',\r\n                baseUri: projectRoot || '',\r\n                referencedSymbolName: FindReferencesAdapter.getReferencedSymbolName(editor, point, references),\r\n                references,\r\n            };\r\n        });\r\n    }\r\n    // Public: Create a {ReferenceParams} from a given {TextEditor} for a specific {Point}.\r\n    //\r\n    // * `editor` A {TextEditor} that represents the document.\r\n    // * `point` A {Point} within the document.\r\n    //\r\n    // Returns a {ReferenceParams} built from the given parameters.\r\n    static createReferenceParams(editor, point) {\r\n        return {\r\n            textDocument: convert_1.default.editorToTextDocumentIdentifier(editor),\r\n            position: convert_1.default.pointToPosition(point),\r\n            context: { includeDeclaration: true },\r\n        };\r\n    }\r\n    // Public: Convert a {Location} into a {Reference}.\r\n    //\r\n    // * `location` A {Location} to convert.\r\n    //\r\n    // Returns a {Reference} equivalent to the given {Location}.\r\n    static locationToReference(location) {\r\n        return {\r\n            uri: convert_1.default.uriToPath(location.uri),\r\n            name: null,\r\n            range: convert_1.default.lsRangeToAtomRange(location.range),\r\n        };\r\n    }\r\n    // Public: Get a symbol name from a {TextEditor} for a specific {Point} in the document.\r\n    static getReferencedSymbolName(editor, point, references) {\r\n        if (references.length === 0) {\r\n            return '';\r\n        }\r\n        const currentReference = references.find((r) => r.range.containsPoint(point)) || references[0];\r\n        return editor.getBuffer().getTextInRange(currentReference.range);\r\n    }\r\n}\r\nexports.default = FindReferencesAdapter;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmluZC1yZWZlcmVuY2VzLWFkYXB0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvYWRhcHRlcnMvZmluZC1yZWZlcmVuY2VzLWFkYXB0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLHdDQUFpQztBQVlqQyxnRUFBZ0U7QUFDaEUsd0VBQXdFO0FBQ3hFLE1BQXFCLHFCQUFxQjtJQUN4QyxnRkFBZ0Y7SUFDaEYsMEVBQTBFO0lBQzFFLEVBQUU7SUFDRixzRkFBc0Y7SUFDdEYsRUFBRTtJQUNGLDJFQUEyRTtJQUMzRSw0QkFBNEI7SUFDckIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxrQkFBc0M7UUFDM0QsT0FBTyxrQkFBa0IsQ0FBQyxrQkFBa0IsS0FBSyxJQUFJLENBQUM7SUFDeEQsQ0FBQztJQUVELHlGQUF5RjtJQUN6RixrRUFBa0U7SUFDbEUsRUFBRTtJQUNGLDBGQUEwRjtJQUMxRixxQ0FBcUM7SUFDckMsd0ZBQXdGO0lBQ3hGLG1HQUFtRztJQUNuRyxFQUFFO0lBQ0Ysc0dBQXNHO0lBQ3RHLGNBQWM7SUFDRCxhQUFhLENBQ3hCLFVBQW9DLEVBQ3BDLE1BQWtCLEVBQ2xCLEtBQVksRUFDWixXQUEwQjs7WUFFMUIsTUFBTSxTQUFTLEdBQUcsTUFBTSxVQUFVLENBQUMsY0FBYyxDQUMvQyxxQkFBcUIsQ0FBQyxxQkFBcUIsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQzNELENBQUM7WUFDRixJQUFJLFNBQVMsSUFBSSxJQUFJLEVBQUU7Z0JBQ3JCLE9BQU8sSUFBSSxDQUFDO2FBQ2I7WUFFRCxNQUFNLFVBQVUsR0FBd0IsU0FBUyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1lBQ2pHLE9BQU87Z0JBQ0wsSUFBSSxFQUFFLE1BQU07Z0JBQ1osT0FBTyxFQUFFLFdBQVcsSUFBSSxFQUFFO2dCQUMxQixvQkFBb0IsRUFBRSxxQkFBcUIsQ0FBQyx1QkFBdUIsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLFVBQVUsQ0FBQztnQkFDOUYsVUFBVTthQUNYLENBQUM7UUFDSixDQUFDO0tBQUE7SUFFRCx1RkFBdUY7SUFDdkYsRUFBRTtJQUNGLDBEQUEwRDtJQUMxRCwyQ0FBMkM7SUFDM0MsRUFBRTtJQUNGLCtEQUErRDtJQUN4RCxNQUFNLENBQUMscUJBQXFCLENBQUMsTUFBa0IsRUFBRSxLQUFZO1FBQ2xFLE9BQU87WUFDTCxZQUFZLEVBQUUsaUJBQU8sQ0FBQyw4QkFBOEIsQ0FBQyxNQUFNLENBQUM7WUFDNUQsUUFBUSxFQUFFLGlCQUFPLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQztZQUN4QyxPQUFPLEVBQUUsRUFBQyxrQkFBa0IsRUFBRSxJQUFJLEVBQUM7U0FDcEMsQ0FBQztJQUNKLENBQUM7SUFFRCxtREFBbUQ7SUFDbkQsRUFBRTtJQUNGLHdDQUF3QztJQUN4QyxFQUFFO0lBQ0YsNERBQTREO0lBQ3JELE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxRQUFrQjtRQUNsRCxPQUFPO1lBQ0wsR0FBRyxFQUFFLGlCQUFPLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUM7WUFDcEMsSUFBSSxFQUFFLElBQUk7WUFDVixLQUFLLEVBQUUsaUJBQU8sQ0FBQyxrQkFBa0IsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO1NBQ2xELENBQUM7SUFDSixDQUFDO0lBRUQsd0ZBQXdGO0lBQ2pGLE1BQU0sQ0FBQyx1QkFBdUIsQ0FDbkMsTUFBa0IsRUFDbEIsS0FBWSxFQUNaLFVBQStCO1FBRS9CLElBQUksVUFBVSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDM0IsT0FBTyxFQUFFLENBQUM7U0FDWDtRQUNELE1BQU0sZ0JBQWdCLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0YsT0FBTyxNQUFNLENBQUMsU0FBUyxFQUFFLENBQUMsY0FBYyxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25FLENBQUM7Q0FDRjtBQW5GRCx3Q0FtRkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBhdG9tSWRlIGZyb20gJ2F0b20taWRlJztcclxuaW1wb3J0IENvbnZlcnQgZnJvbSAnLi4vY29udmVydCc7XHJcbmltcG9ydCB7XHJcbiAgUG9pbnQsXHJcbiAgVGV4dEVkaXRvcixcclxufSBmcm9tICdhdG9tJztcclxuaW1wb3J0IHtcclxuICBMYW5ndWFnZUNsaWVudENvbm5lY3Rpb24sXHJcbiAgTG9jYXRpb24sXHJcbiAgU2VydmVyQ2FwYWJpbGl0aWVzLFxyXG4gIFJlZmVyZW5jZVBhcmFtcyxcclxufSBmcm9tICcuLi9sYW5ndWFnZWNsaWVudCc7XHJcblxyXG4vLyBQdWJsaWM6IEFkYXB0cyB0aGUgbGFuZ3VhZ2Ugc2VydmVyIGRlZmluaXRpb24gcHJvdmlkZXIgdG8gdGhlXHJcbi8vIEF0b20gSURFIFVJIERlZmluaXRpb25zIHBhY2thZ2UgZm9yICdHbyBUbyBEZWZpbml0aW9uJyBmdW5jdGlvbmFsaXR5LlxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGaW5kUmVmZXJlbmNlc0FkYXB0ZXIge1xyXG4gIC8vIFB1YmxpYzogRGV0ZXJtaW5lIHdoZXRoZXIgdGhpcyBhZGFwdGVyIGNhbiBiZSB1c2VkIHRvIGFkYXB0IGEgbGFuZ3VhZ2Ugc2VydmVyXHJcbiAgLy8gYmFzZWQgb24gdGhlIHNlcnZlckNhcGFiaWxpdGllcyBtYXRyaXggY29udGFpbmluZyBhIHJlZmVyZW5jZXNQcm92aWRlci5cclxuICAvL1xyXG4gIC8vICogYHNlcnZlckNhcGFiaWxpdGllc2AgVGhlIHtTZXJ2ZXJDYXBhYmlsaXRpZXN9IG9mIHRoZSBsYW5ndWFnZSBzZXJ2ZXIgdG8gY29uc2lkZXIuXHJcbiAgLy9cclxuICAvLyBSZXR1cm5zIGEge0Jvb2xlYW59IGluZGljYXRpbmcgYWRhcHRlciBjYW4gYWRhcHQgdGhlIHNlcnZlciBiYXNlZCBvbiB0aGVcclxuICAvLyBnaXZlbiBzZXJ2ZXJDYXBhYmlsaXRpZXMuXHJcbiAgcHVibGljIHN0YXRpYyBjYW5BZGFwdChzZXJ2ZXJDYXBhYmlsaXRpZXM6IFNlcnZlckNhcGFiaWxpdGllcyk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHNlcnZlckNhcGFiaWxpdGllcy5yZWZlcmVuY2VzUHJvdmlkZXIgPT09IHRydWU7XHJcbiAgfVxyXG5cclxuICAvLyBQdWJsaWM6IEdldCB0aGUgcmVmZXJlbmNlcyBmb3IgYSBzcGVjaWZpYyBzeW1ib2wgd2l0aGluIHRoZSBkb2N1bWVudCBhcyByZXByZXNlbnRlZCBieVxyXG4gIC8vIHRoZSB7VGV4dEVkaXRvcn0gYW5kIHtQb2ludH0gd2l0aGluIGl0IHZpYSB0aGUgbGFuZ3VhZ2Ugc2VydmVyLlxyXG4gIC8vXHJcbiAgLy8gKiBgY29ubmVjdGlvbmAgQSB7TGFuZ3VhZ2VDbGllbnRDb25uZWN0aW9ufSB0byB0aGUgbGFuZ3VhZ2Ugc2VydmVyIHRoYXQgd2lsbCBiZSBxdWVyaWVkXHJcbiAgLy8gICAgICAgICAgICAgICAgZm9yIHRoZSByZWZlcmVuY2VzLlxyXG4gIC8vICogYGVkaXRvcmAgVGhlIEF0b20ge1RleHRFZGl0b3J9IGNvbnRhaW5pbmcgdGhlIHRleHQgdGhlIHJlZmVyZW5jZXMgc2hvdWxkIHJlbGF0ZSB0by5cclxuICAvLyAqIGBwb2ludGAgVGhlIEF0b20ge1BvaW50fSBjb250YWluaW5nIHRoZSBwb2ludCB3aXRoaW4gdGhlIHRleHQgdGhlIHJlZmVyZW5jZXMgc2hvdWxkIHJlbGF0ZSB0by5cclxuICAvL1xyXG4gIC8vIFJldHVybnMgYSB7UHJvbWlzZX0gY29udGFpbmluZyBhIHtGaW5kUmVmZXJlbmNlc1JldHVybn0gd2l0aCBhbGwgdGhlIHJlZmVyZW5jZXMgdGhlIGxhbmd1YWdlIHNlcnZlclxyXG4gIC8vIGNvdWxkIGZpbmQuXHJcbiAgcHVibGljIGFzeW5jIGdldFJlZmVyZW5jZXMoXHJcbiAgICBjb25uZWN0aW9uOiBMYW5ndWFnZUNsaWVudENvbm5lY3Rpb24sXHJcbiAgICBlZGl0b3I6IFRleHRFZGl0b3IsXHJcbiAgICBwb2ludDogUG9pbnQsXHJcbiAgICBwcm9qZWN0Um9vdDogc3RyaW5nIHwgbnVsbCxcclxuICApOiBQcm9taXNlPGF0b21JZGUuRmluZFJlZmVyZW5jZXNSZXR1cm4gfCBudWxsPiB7XHJcbiAgICBjb25zdCBsb2NhdGlvbnMgPSBhd2FpdCBjb25uZWN0aW9uLmZpbmRSZWZlcmVuY2VzKFxyXG4gICAgICBGaW5kUmVmZXJlbmNlc0FkYXB0ZXIuY3JlYXRlUmVmZXJlbmNlUGFyYW1zKGVkaXRvciwgcG9pbnQpLFxyXG4gICAgKTtcclxuICAgIGlmIChsb2NhdGlvbnMgPT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCByZWZlcmVuY2VzOiBhdG9tSWRlLlJlZmVyZW5jZVtdID0gbG9jYXRpb25zLm1hcChGaW5kUmVmZXJlbmNlc0FkYXB0ZXIubG9jYXRpb25Ub1JlZmVyZW5jZSk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB0eXBlOiAnZGF0YScsXHJcbiAgICAgIGJhc2VVcmk6IHByb2plY3RSb290IHx8ICcnLFxyXG4gICAgICByZWZlcmVuY2VkU3ltYm9sTmFtZTogRmluZFJlZmVyZW5jZXNBZGFwdGVyLmdldFJlZmVyZW5jZWRTeW1ib2xOYW1lKGVkaXRvciwgcG9pbnQsIHJlZmVyZW5jZXMpLFxyXG4gICAgICByZWZlcmVuY2VzLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8vIFB1YmxpYzogQ3JlYXRlIGEge1JlZmVyZW5jZVBhcmFtc30gZnJvbSBhIGdpdmVuIHtUZXh0RWRpdG9yfSBmb3IgYSBzcGVjaWZpYyB7UG9pbnR9LlxyXG4gIC8vXHJcbiAgLy8gKiBgZWRpdG9yYCBBIHtUZXh0RWRpdG9yfSB0aGF0IHJlcHJlc2VudHMgdGhlIGRvY3VtZW50LlxyXG4gIC8vICogYHBvaW50YCBBIHtQb2ludH0gd2l0aGluIHRoZSBkb2N1bWVudC5cclxuICAvL1xyXG4gIC8vIFJldHVybnMgYSB7UmVmZXJlbmNlUGFyYW1zfSBidWlsdCBmcm9tIHRoZSBnaXZlbiBwYXJhbWV0ZXJzLlxyXG4gIHB1YmxpYyBzdGF0aWMgY3JlYXRlUmVmZXJlbmNlUGFyYW1zKGVkaXRvcjogVGV4dEVkaXRvciwgcG9pbnQ6IFBvaW50KTogUmVmZXJlbmNlUGFyYW1zIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHRleHREb2N1bWVudDogQ29udmVydC5lZGl0b3JUb1RleHREb2N1bWVudElkZW50aWZpZXIoZWRpdG9yKSxcclxuICAgICAgcG9zaXRpb246IENvbnZlcnQucG9pbnRUb1Bvc2l0aW9uKHBvaW50KSxcclxuICAgICAgY29udGV4dDoge2luY2x1ZGVEZWNsYXJhdGlvbjogdHJ1ZX0sXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLy8gUHVibGljOiBDb252ZXJ0IGEge0xvY2F0aW9ufSBpbnRvIGEge1JlZmVyZW5jZX0uXHJcbiAgLy9cclxuICAvLyAqIGBsb2NhdGlvbmAgQSB7TG9jYXRpb259IHRvIGNvbnZlcnQuXHJcbiAgLy9cclxuICAvLyBSZXR1cm5zIGEge1JlZmVyZW5jZX0gZXF1aXZhbGVudCB0byB0aGUgZ2l2ZW4ge0xvY2F0aW9ufS5cclxuICBwdWJsaWMgc3RhdGljIGxvY2F0aW9uVG9SZWZlcmVuY2UobG9jYXRpb246IExvY2F0aW9uKTogYXRvbUlkZS5SZWZlcmVuY2Uge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgdXJpOiBDb252ZXJ0LnVyaVRvUGF0aChsb2NhdGlvbi51cmkpLFxyXG4gICAgICBuYW1lOiBudWxsLFxyXG4gICAgICByYW5nZTogQ29udmVydC5sc1JhbmdlVG9BdG9tUmFuZ2UobG9jYXRpb24ucmFuZ2UpLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8vIFB1YmxpYzogR2V0IGEgc3ltYm9sIG5hbWUgZnJvbSBhIHtUZXh0RWRpdG9yfSBmb3IgYSBzcGVjaWZpYyB7UG9pbnR9IGluIHRoZSBkb2N1bWVudC5cclxuICBwdWJsaWMgc3RhdGljIGdldFJlZmVyZW5jZWRTeW1ib2xOYW1lKFxyXG4gICAgZWRpdG9yOiBUZXh0RWRpdG9yLFxyXG4gICAgcG9pbnQ6IFBvaW50LFxyXG4gICAgcmVmZXJlbmNlczogYXRvbUlkZS5SZWZlcmVuY2VbXSxcclxuICApOiBzdHJpbmcge1xyXG4gICAgaWYgKHJlZmVyZW5jZXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuICAgIGNvbnN0IGN1cnJlbnRSZWZlcmVuY2UgPSByZWZlcmVuY2VzLmZpbmQoKHIpID0+IHIucmFuZ2UuY29udGFpbnNQb2ludChwb2ludCkpIHx8IHJlZmVyZW5jZXNbMF07XHJcbiAgICByZXR1cm4gZWRpdG9yLmdldEJ1ZmZlcigpLmdldFRleHRJblJhbmdlKGN1cnJlbnRSZWZlcmVuY2UucmFuZ2UpO1xyXG4gIH1cclxufVxyXG4iXX0=","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst convert_1 = require(\"../convert\");\r\nconst languageclient_1 = require(\"../languageclient\");\r\n// Public: Listen to diagnostics messages from the language server and publish them\r\n// to the user by way of the Linter Push (Indie) v2 API supported by Atom IDE UI.\r\nclass LinterPushV2Adapter {\r\n    // Public: Create a new {LinterPushV2Adapter} that will listen for diagnostics\r\n    // via the supplied {LanguageClientConnection}.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server that will provide diagnostics.\r\n    constructor(connection) {\r\n        this._diagnosticMap = new Map();\r\n        this._diagnosticCodes = new Map();\r\n        this._indies = new Set();\r\n        connection.onPublishDiagnostics(this.captureDiagnostics.bind(this));\r\n    }\r\n    // Dispose this adapter ensuring any resources are freed and events unhooked.\r\n    dispose() {\r\n        this.detachAll();\r\n    }\r\n    // Public: Attach this {LinterPushV2Adapter} to a given {V2IndieDelegate} registry.\r\n    //\r\n    // * `indie` A {V2IndieDelegate} that wants to receive messages.\r\n    attach(indie) {\r\n        this._indies.add(indie);\r\n        this._diagnosticMap.forEach((value, key) => indie.setMessages(key, value));\r\n        indie.onDidDestroy(() => {\r\n            this._indies.delete(indie);\r\n        });\r\n    }\r\n    // Public: Remove all {V2IndieDelegate} registries attached to this adapter and clear them.\r\n    detachAll() {\r\n        this._indies.forEach((i) => i.clearMessages());\r\n        this._indies.clear();\r\n    }\r\n    // Public: Capture the diagnostics sent from a langguage server, convert them to the\r\n    // Linter V2 format and forward them on to any attached {V2IndieDelegate}s.\r\n    //\r\n    // * `params` The {PublishDiagnosticsParams} received from the language server that should\r\n    //            be captured and forwarded on to any attached {V2IndieDelegate}s.\r\n    captureDiagnostics(params) {\r\n        const path = convert_1.default.uriToPath(params.uri);\r\n        const codeMap = new Map();\r\n        const messages = params.diagnostics.map((d) => {\r\n            const linterMessage = this.diagnosticToV2Message(path, d);\r\n            codeMap.set(getCodeKey(linterMessage.location.position, d.message), d.code);\r\n            return linterMessage;\r\n        });\r\n        this._diagnosticMap.set(path, messages);\r\n        this._diagnosticCodes.set(path, codeMap);\r\n        this._indies.forEach((i) => i.setMessages(path, messages));\r\n    }\r\n    // Public: Convert a single {Diagnostic} received from a language server into a single\r\n    // {V2Message} expected by the Linter V2 API.\r\n    //\r\n    // * `path` A string representing the path of the file the diagnostic belongs to.\r\n    // * `diagnostics` A {Diagnostic} object received from the language server.\r\n    //\r\n    // Returns a {V2Message} equivalent to the {Diagnostic} object supplied by the language server.\r\n    diagnosticToV2Message(path, diagnostic) {\r\n        return {\r\n            location: {\r\n                file: path,\r\n                position: convert_1.default.lsRangeToAtomRange(diagnostic.range),\r\n            },\r\n            excerpt: diagnostic.message,\r\n            linterName: diagnostic.source,\r\n            severity: LinterPushV2Adapter.diagnosticSeverityToSeverity(diagnostic.severity || -1),\r\n        };\r\n    }\r\n    // Public: Convert a diagnostic severity number obtained from the language server into\r\n    // the textual equivalent for a Linter {V2Message}.\r\n    //\r\n    // * `severity` A number representing the severity of the diagnostic.\r\n    //\r\n    // Returns a string of 'error', 'warning' or 'info' depending on the severity.\r\n    static diagnosticSeverityToSeverity(severity) {\r\n        switch (severity) {\r\n            case languageclient_1.DiagnosticSeverity.Error:\r\n                return 'error';\r\n            case languageclient_1.DiagnosticSeverity.Warning:\r\n                return 'warning';\r\n            case languageclient_1.DiagnosticSeverity.Information:\r\n            case languageclient_1.DiagnosticSeverity.Hint:\r\n            default:\r\n                return 'info';\r\n        }\r\n    }\r\n    // Private: Get the recorded diagnostic code for a range/message.\r\n    // Diagnostic codes are tricky because there's no suitable place in the Linter API for them.\r\n    // For now, we'll record the original code for each range/message combination and retrieve it\r\n    // when needed (e.g. for passing back into code actions)\r\n    getDiagnosticCode(editor, range, text) {\r\n        const path = editor.getPath();\r\n        if (path != null) {\r\n            const diagnosticCodes = this._diagnosticCodes.get(path);\r\n            if (diagnosticCodes != null) {\r\n                return diagnosticCodes.get(getCodeKey(range, text)) || null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexports.default = LinterPushV2Adapter;\r\nfunction getCodeKey(range, text) {\r\n    return [].concat(...range.serialize(), text).join(',');\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst languageclient_1 = require(\"../languageclient\");\r\n// Adapts Atom's user notifications to those of the language server protocol.\r\nclass LoggingConsoleAdapter {\r\n    // Create a new {LoggingConsoleAdapter} that will listen for log messages\r\n    // via the supplied {LanguageClientConnection}.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server that will provide log messages.\r\n    constructor(connection) {\r\n        this._consoles = new Set();\r\n        connection.onLogMessage(this.logMessage.bind(this));\r\n    }\r\n    // Dispose this adapter ensuring any resources are freed and events unhooked.\r\n    dispose() {\r\n        this.detachAll();\r\n    }\r\n    // Public: Attach this {LoggingConsoleAdapter} to a given {ConsoleApi}.\r\n    //\r\n    // * `console` A {ConsoleApi} that wants to receive messages.\r\n    attach(console) {\r\n        this._consoles.add(console);\r\n    }\r\n    // Public: Remove all {ConsoleApi}'s attached to this adapter.\r\n    detachAll() {\r\n        this._consoles.clear();\r\n    }\r\n    // Log a message using the Atom IDE UI Console API.\r\n    //\r\n    // * `params` The {LogMessageParams} received from the language server\r\n    //            indicating the details of the message to be loggedd.\r\n    logMessage(params) {\r\n        switch (params.type) {\r\n            case languageclient_1.MessageType.Error: {\r\n                this._consoles.forEach((c) => c.error(params.message));\r\n                return;\r\n            }\r\n            case languageclient_1.MessageType.Warning: {\r\n                this._consoles.forEach((c) => c.warn(params.message));\r\n                return;\r\n            }\r\n            case languageclient_1.MessageType.Info: {\r\n                this._consoles.forEach((c) => c.info(params.message));\r\n                return;\r\n            }\r\n            case languageclient_1.MessageType.Log: {\r\n                this._consoles.forEach((c) => c.log(params.message));\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.default = LoggingConsoleAdapter;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZy1jb25zb2xlLWFkYXB0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvYWRhcHRlcnMvbG9nZ2luZy1jb25zb2xlLWFkYXB0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxzREFJMkI7QUFFM0IsNkVBQTZFO0FBQzdFLE1BQXFCLHFCQUFxQjtJQUd4Qyx5RUFBeUU7SUFDekUsK0NBQStDO0lBQy9DLEVBQUU7SUFDRixxR0FBcUc7SUFDckcsWUFBWSxVQUFvQztRQU54QyxjQUFTLEdBQW9CLElBQUksR0FBRyxFQUFFLENBQUM7UUFPN0MsVUFBVSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFFRCw2RUFBNkU7SUFDdEUsT0FBTztRQUNaLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRUQsdUVBQXVFO0lBQ3ZFLEVBQUU7SUFDRiw2REFBNkQ7SUFDdEQsTUFBTSxDQUFDLE9BQW1CO1FBQy9CLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFRCw4REFBOEQ7SUFDdkQsU0FBUztRQUNkLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELG1EQUFtRDtJQUNuRCxFQUFFO0lBQ0Ysc0VBQXNFO0lBQ3RFLGtFQUFrRTtJQUMxRCxVQUFVLENBQUMsTUFBd0I7UUFDekMsUUFBUSxNQUFNLENBQUMsSUFBSSxFQUFFO1lBQ25CLEtBQUssNEJBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDdEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZELE9BQU87YUFDUjtZQUNELEtBQUssNEJBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDeEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ3RELE9BQU87YUFDUjtZQUNELEtBQUssNEJBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDckIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ3RELE9BQU87YUFDUjtZQUNELEtBQUssNEJBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDcEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ3JELE9BQU87YUFDUjtTQUNGO0lBQ0gsQ0FBQztDQUNGO0FBcERELHdDQW9EQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnNvbGVBcGkgfSBmcm9tICdhdG9tLWlkZSc7XHJcbmltcG9ydCB7XHJcbiAgTGFuZ3VhZ2VDbGllbnRDb25uZWN0aW9uLFxyXG4gIExvZ01lc3NhZ2VQYXJhbXMsXHJcbiAgTWVzc2FnZVR5cGUsXHJcbn0gZnJvbSAnLi4vbGFuZ3VhZ2VjbGllbnQnO1xyXG5cclxuLy8gQWRhcHRzIEF0b20ncyB1c2VyIG5vdGlmaWNhdGlvbnMgdG8gdGhvc2Ugb2YgdGhlIGxhbmd1YWdlIHNlcnZlciBwcm90b2NvbC5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9nZ2luZ0NvbnNvbGVBZGFwdGVyIHtcclxuICBwcml2YXRlIF9jb25zb2xlczogU2V0PENvbnNvbGVBcGk+ID0gbmV3IFNldCgpO1xyXG5cclxuICAvLyBDcmVhdGUgYSBuZXcge0xvZ2dpbmdDb25zb2xlQWRhcHRlcn0gdGhhdCB3aWxsIGxpc3RlbiBmb3IgbG9nIG1lc3NhZ2VzXHJcbiAgLy8gdmlhIHRoZSBzdXBwbGllZCB7TGFuZ3VhZ2VDbGllbnRDb25uZWN0aW9ufS5cclxuICAvL1xyXG4gIC8vICogYGNvbm5lY3Rpb25gIEEge0xhbmd1YWdlQ2xpZW50Q29ubmVjdGlvbn0gdG8gdGhlIGxhbmd1YWdlIHNlcnZlciB0aGF0IHdpbGwgcHJvdmlkZSBsb2cgbWVzc2FnZXMuXHJcbiAgY29uc3RydWN0b3IoY29ubmVjdGlvbjogTGFuZ3VhZ2VDbGllbnRDb25uZWN0aW9uKSB7XHJcbiAgICBjb25uZWN0aW9uLm9uTG9nTWVzc2FnZSh0aGlzLmxvZ01lc3NhZ2UuYmluZCh0aGlzKSk7XHJcbiAgfVxyXG5cclxuICAvLyBEaXNwb3NlIHRoaXMgYWRhcHRlciBlbnN1cmluZyBhbnkgcmVzb3VyY2VzIGFyZSBmcmVlZCBhbmQgZXZlbnRzIHVuaG9va2VkLlxyXG4gIHB1YmxpYyBkaXNwb3NlKCk6IHZvaWQge1xyXG4gICAgdGhpcy5kZXRhY2hBbGwoKTtcclxuICB9XHJcblxyXG4gIC8vIFB1YmxpYzogQXR0YWNoIHRoaXMge0xvZ2dpbmdDb25zb2xlQWRhcHRlcn0gdG8gYSBnaXZlbiB7Q29uc29sZUFwaX0uXHJcbiAgLy9cclxuICAvLyAqIGBjb25zb2xlYCBBIHtDb25zb2xlQXBpfSB0aGF0IHdhbnRzIHRvIHJlY2VpdmUgbWVzc2FnZXMuXHJcbiAgcHVibGljIGF0dGFjaChjb25zb2xlOiBDb25zb2xlQXBpKTogdm9pZCB7XHJcbiAgICB0aGlzLl9jb25zb2xlcy5hZGQoY29uc29sZSk7XHJcbiAgfVxyXG5cclxuICAvLyBQdWJsaWM6IFJlbW92ZSBhbGwge0NvbnNvbGVBcGl9J3MgYXR0YWNoZWQgdG8gdGhpcyBhZGFwdGVyLlxyXG4gIHB1YmxpYyBkZXRhY2hBbGwoKTogdm9pZCB7XHJcbiAgICB0aGlzLl9jb25zb2xlcy5jbGVhcigpO1xyXG4gIH1cclxuXHJcbiAgLy8gTG9nIGEgbWVzc2FnZSB1c2luZyB0aGUgQXRvbSBJREUgVUkgQ29uc29sZSBBUEkuXHJcbiAgLy9cclxuICAvLyAqIGBwYXJhbXNgIFRoZSB7TG9nTWVzc2FnZVBhcmFtc30gcmVjZWl2ZWQgZnJvbSB0aGUgbGFuZ3VhZ2Ugc2VydmVyXHJcbiAgLy8gICAgICAgICAgICBpbmRpY2F0aW5nIHRoZSBkZXRhaWxzIG9mIHRoZSBtZXNzYWdlIHRvIGJlIGxvZ2dlZGQuXHJcbiAgcHJpdmF0ZSBsb2dNZXNzYWdlKHBhcmFtczogTG9nTWVzc2FnZVBhcmFtcyk6IHZvaWQge1xyXG4gICAgc3dpdGNoIChwYXJhbXMudHlwZSkge1xyXG4gICAgICBjYXNlIE1lc3NhZ2VUeXBlLkVycm9yOiB7XHJcbiAgICAgICAgdGhpcy5fY29uc29sZXMuZm9yRWFjaCgoYykgPT4gYy5lcnJvcihwYXJhbXMubWVzc2FnZSkpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBjYXNlIE1lc3NhZ2VUeXBlLldhcm5pbmc6IHtcclxuICAgICAgICB0aGlzLl9jb25zb2xlcy5mb3JFYWNoKChjKSA9PiBjLndhcm4ocGFyYW1zLm1lc3NhZ2UpKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgY2FzZSBNZXNzYWdlVHlwZS5JbmZvOiB7XHJcbiAgICAgICAgdGhpcy5fY29uc29sZXMuZm9yRWFjaCgoYykgPT4gYy5pbmZvKHBhcmFtcy5tZXNzYWdlKSk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGNhc2UgTWVzc2FnZVR5cGUuTG9nOiB7XHJcbiAgICAgICAgdGhpcy5fY29uc29sZXMuZm9yRWFjaCgoYykgPT4gYy5sb2cocGFyYW1zLm1lc3NhZ2UpKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst languageclient_1 = require(\"../languageclient\");\r\n// Public: Adapts Atom's user notifications to those of the language server protocol.\r\nclass NotificationsAdapter {\r\n    // Public: Attach to a {LanguageClientConnection} to recieve events indicating\r\n    // when user notifications should be displayed.\r\n    static attach(connection, name, projectPath) {\r\n        connection.onShowMessage((m) => NotificationsAdapter.onShowMessage(m, name, projectPath));\r\n        connection.onShowMessageRequest((m) => NotificationsAdapter.onShowMessageRequest(m, name, projectPath));\r\n    }\r\n    // Public: Show a notification message with buttons using the Atom notifications API.\r\n    //\r\n    // * `params` The {ShowMessageRequestParams} received from the language server\r\n    //            indicating the details of the notification to be displayed.\r\n    // * `name`   The name of the language server so the user can identify the\r\n    //            context of the message.\r\n    // * `projectPath`   The path of the current project.\r\n    static onShowMessageRequest(params, name, projectPath) {\r\n        return new Promise((resolve, _reject) => {\r\n            const options = {\r\n                dismissable: true,\r\n                detail: `${name} ${projectPath}`,\r\n            };\r\n            if (params.actions) {\r\n                options.buttons = params.actions.map((a) => ({\r\n                    text: a.title,\r\n                    onDidClick: () => {\r\n                        resolve(a);\r\n                        if (notification != null) {\r\n                            notification.dismiss();\r\n                        }\r\n                    },\r\n                }));\r\n            }\r\n            const notification = addNotificationForMessage(params.type, params.message, options);\r\n            if (notification != null) {\r\n                notification.onDidDismiss(() => {\r\n                    resolve(null);\r\n                });\r\n            }\r\n        });\r\n    }\r\n    // Public: Show a notification message using the Atom notifications API.\r\n    //\r\n    // * `params` The {ShowMessageParams} received from the language server\r\n    //            indicating the details of the notification to be displayed.\r\n    // * `name`   The name of the language server so the user can identify the\r\n    //            context of the message.\r\n    // * `projectPath`   The path of the current project.\r\n    static onShowMessage(params, name, projectPath) {\r\n        addNotificationForMessage(params.type, params.message, {\r\n            dismissable: true,\r\n            detail: `${name} ${projectPath}`,\r\n        });\r\n    }\r\n    // Public: Convert a {MessageActionItem} from the language server into an\r\n    // equivalent {NotificationButton} within Atom.\r\n    //\r\n    // * `actionItem` The {MessageActionItem} to be converted.\r\n    //\r\n    // Returns a {NotificationButton} equivalent to the {MessageActionItem} given.\r\n    static actionItemToNotificationButton(actionItem) {\r\n        return {\r\n            text: actionItem.title,\r\n        };\r\n    }\r\n}\r\nexports.default = NotificationsAdapter;\r\nfunction messageTypeToString(messageType) {\r\n    switch (messageType) {\r\n        case languageclient_1.MessageType.Error: return 'error';\r\n        case languageclient_1.MessageType.Warning: return 'warning';\r\n        default: return 'info';\r\n    }\r\n}\r\nfunction addNotificationForMessage(messageType, message, options) {\r\n    function isDuplicate(note) {\r\n        const noteDismissed = note.isDismissed && note.isDismissed();\r\n        const noteOptions = note.getOptions && note.getOptions() || {};\r\n        return !noteDismissed &&\r\n            note.getType() === messageTypeToString(messageType) &&\r\n            note.getMessage() === message &&\r\n            noteOptions.detail === options.detail;\r\n    }\r\n    if (atom.notifications.getNotifications().some(isDuplicate)) {\r\n        return null;\r\n    }\r\n    switch (messageType) {\r\n        case languageclient_1.MessageType.Error:\r\n            return atom.notifications.addError(message, options);\r\n        case languageclient_1.MessageType.Warning:\r\n            return atom.notifications.addWarning(message, options);\r\n        case languageclient_1.MessageType.Log:\r\n            // console.log(params.message);\r\n            return null;\r\n        case languageclient_1.MessageType.Info:\r\n        default:\r\n            return atom.notifications.addInfo(message, options);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst convert_1 = require(\"../convert\");\r\nconst Utils = require(\"../utils\");\r\nconst languageclient_1 = require(\"../languageclient\");\r\nconst atom_1 = require(\"atom\");\r\n// Public: Adapts the documentSymbolProvider of the language server to the Outline View\r\n// supplied by Atom IDE UI.\r\nclass OutlineViewAdapter {\r\n    constructor() {\r\n        this._cancellationTokens = new WeakMap();\r\n    }\r\n    // Public: Determine whether this adapter can be used to adapt a language server\r\n    // based on the serverCapabilities matrix containing a documentSymbolProvider.\r\n    //\r\n    // * `serverCapabilities` The {ServerCapabilities} of the language server to consider.\r\n    //\r\n    // Returns a {Boolean} indicating adapter can adapt the server based on the\r\n    // given serverCapabilities.\r\n    static canAdapt(serverCapabilities) {\r\n        return serverCapabilities.documentSymbolProvider === true;\r\n    }\r\n    // Public: Obtain the Outline for document via the {LanguageClientConnection} as identified\r\n    // by the {TextEditor}.\r\n    //\r\n    // * `connection` A {LanguageClientConnection} to the language server that will be queried\r\n    //                for the outline.\r\n    // * `editor` The Atom {TextEditor} containing the text the Outline should represent.\r\n    //\r\n    // Returns a {Promise} containing the {Outline} of this document.\r\n    getOutline(connection, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const results = yield Utils.doWithCancellationToken(connection, this._cancellationTokens, (cancellationToken) => connection.documentSymbol({ textDocument: convert_1.default.editorToTextDocumentIdentifier(editor) }, cancellationToken));\r\n            if (results.length === 0) {\r\n                return {\r\n                    outlineTrees: [],\r\n                };\r\n            }\r\n            if (results[0].selectionRange !== undefined) {\r\n                // If the server is giving back the newer DocumentSymbol format.\r\n                return {\r\n                    outlineTrees: OutlineViewAdapter.createHierarchicalOutlineTrees(results),\r\n                };\r\n            }\r\n            else {\r\n                // If the server is giving back the original SymbolInformation format.\r\n                return {\r\n                    outlineTrees: OutlineViewAdapter.createOutlineTrees(results),\r\n                };\r\n            }\r\n        });\r\n    }\r\n    // Public: Create an {Array} of {OutlineTree}s from the Array of {DocumentSymbol} recieved\r\n    // from the language server. This includes converting all the children nodes in the entire\r\n    // hierarchy.\r\n    //\r\n    // * `symbols` An {Array} of {DocumentSymbol}s received from the language server that\r\n    //             should be converted to an {Array} of {OutlineTree}.\r\n    //\r\n    // Returns an {Array} of {OutlineTree} containing the given symbols that the Outline View can display.\r\n    static createHierarchicalOutlineTrees(symbols) {\r\n        // Sort all the incoming symbols\r\n        symbols.sort((a, b) => {\r\n            if (a.range.start.line !== b.range.start.line) {\r\n                return a.range.start.line - b.range.start.line;\r\n            }\r\n            if (a.range.start.character !== b.range.start.character) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            if (a.range.end.line !== b.range.end.line) {\r\n                return a.range.end.line - b.range.end.line;\r\n            }\r\n            return a.range.end.character - b.range.end.character;\r\n        });\r\n        return symbols.map((symbol) => {\r\n            const tree = OutlineViewAdapter.hierarchicalSymbolToOutline(symbol);\r\n            if (symbol.children != null) {\r\n                tree.children = OutlineViewAdapter.createHierarchicalOutlineTrees(symbol.children);\r\n            }\r\n            return tree;\r\n        });\r\n    }\r\n    // Public: Create an {Array} of {OutlineTree}s from the Array of {SymbolInformation} recieved\r\n    // from the language server. This includes determining the appropriate child and parent\r\n    // relationships for the hierarchy.\r\n    //\r\n    // * `symbols` An {Array} of {SymbolInformation}s received from the language server that\r\n    //             should be converted to an {OutlineTree}.\r\n    //\r\n    // Returns an {OutlineTree} containing the given symbols that the Outline View can display.\r\n    static createOutlineTrees(symbols) {\r\n        symbols.sort((a, b) => (a.location.range.start.line === b.location.range.start.line\r\n            ? a.location.range.start.character - b.location.range.start.character\r\n            : a.location.range.start.line - b.location.range.start.line));\r\n        // Temporarily keep containerName through the conversion process\r\n        // Also filter out symbols without a name - it's part of the spec but some don't include it\r\n        const allItems = symbols.filter((symbol) => symbol.name).map((symbol) => ({\r\n            containerName: symbol.containerName,\r\n            outline: OutlineViewAdapter.symbolToOutline(symbol),\r\n        }));\r\n        // Create a map of containers by name with all items that have that name\r\n        const containers = allItems.reduce((map, item) => {\r\n            const name = item.outline.representativeName;\r\n            if (name != null) {\r\n                const container = map.get(name);\r\n                if (container == null) {\r\n                    map.set(name, [item.outline]);\r\n                }\r\n                else {\r\n                    container.push(item.outline);\r\n                }\r\n            }\r\n            return map;\r\n        }, new Map());\r\n        const roots = [];\r\n        // Put each item within its parent and extract out the roots\r\n        for (const item of allItems) {\r\n            const containerName = item.containerName;\r\n            const child = item.outline;\r\n            if (containerName == null || containerName === '') {\r\n                roots.push(item.outline);\r\n            }\r\n            else {\r\n                const possibleParents = containers.get(containerName);\r\n                let closestParent = OutlineViewAdapter._getClosestParent(possibleParents, child);\r\n                if (closestParent == null) {\r\n                    closestParent = {\r\n                        plainText: containerName,\r\n                        representativeName: containerName,\r\n                        startPosition: new atom_1.Point(0, 0),\r\n                        children: [child],\r\n                    };\r\n                    roots.push(closestParent);\r\n                    if (possibleParents == null) {\r\n                        containers.set(containerName, [closestParent]);\r\n                    }\r\n                    else {\r\n                        possibleParents.push(closestParent);\r\n                    }\r\n                }\r\n                else {\r\n                    closestParent.children.push(child);\r\n                }\r\n            }\r\n        }\r\n        return roots;\r\n    }\r\n    static _getClosestParent(candidates, child) {\r\n        if (candidates == null || candidates.length === 0) {\r\n            return null;\r\n        }\r\n        let parent;\r\n        for (const candidate of candidates) {\r\n            if (candidate !== child &&\r\n                candidate.startPosition.isLessThanOrEqual(child.startPosition) &&\r\n                (candidate.endPosition === undefined ||\r\n                    (child.endPosition && candidate.endPosition.isGreaterThanOrEqual(child.endPosition)))) {\r\n                if (parent === undefined ||\r\n                    (parent.startPosition.isLessThanOrEqual(candidate.startPosition) ||\r\n                        (parent.endPosition != null &&\r\n                            candidate.endPosition &&\r\n                            parent.endPosition.isGreaterThanOrEqual(candidate.endPosition)))) {\r\n                    parent = candidate;\r\n                }\r\n            }\r\n        }\r\n        return parent || null;\r\n    }\r\n    // Public: Convert an individual {DocumentSymbol} from the language server\r\n    // to an {OutlineTree} for use by the Outline View. It does NOT recursively\r\n    // process the given symbol's children (if any).\r\n    //\r\n    // * `symbol` The {DocumentSymbol} to convert to an {OutlineTree}.\r\n    //\r\n    // Returns the {OutlineTree} corresponding to the given {DocumentSymbol}.\r\n    static hierarchicalSymbolToOutline(symbol) {\r\n        const icon = OutlineViewAdapter.symbolKindToEntityKind(symbol.kind);\r\n        return {\r\n            tokenizedText: [\r\n                {\r\n                    kind: OutlineViewAdapter.symbolKindToTokenKind(symbol.kind),\r\n                    value: symbol.name,\r\n                },\r\n            ],\r\n            icon: icon != null ? icon : undefined,\r\n            representativeName: symbol.name,\r\n            startPosition: convert_1.default.positionToPoint(symbol.selectionRange.start),\r\n            endPosition: convert_1.default.positionToPoint(symbol.selectionRange.end),\r\n            children: [],\r\n        };\r\n    }\r\n    // Public: Convert an individual {SymbolInformation} from the language server\r\n    // to an {OutlineTree} for use by the Outline View.\r\n    //\r\n    // * `symbol` The {SymbolInformation} to convert to an {OutlineTree}.\r\n    //\r\n    // Returns the {OutlineTree} equivalent to the given {SymbolInformation}.\r\n    static symbolToOutline(symbol) {\r\n        const icon = OutlineViewAdapter.symbolKindToEntityKind(symbol.kind);\r\n        return {\r\n            tokenizedText: [\r\n                {\r\n                    kind: OutlineViewAdapter.symbolKindToTokenKind(symbol.kind),\r\n                    value: symbol.name,\r\n                },\r\n            ],\r\n            icon: icon != null ? icon : undefined,\r\n            representativeName: symbol.name,\r\n            startPosition: convert_1.default.positionToPoint(symbol.location.range.start),\r\n            endPosition: convert_1.default.positionToPoint(symbol.location.range.end),\r\n            children: [],\r\n        };\r\n    }\r\n    // Public: Convert a symbol kind into an outline entity kind used to determine\r\n    // the styling such as the appropriate icon in the Outline View.\r\n    //\r\n    // * `symbol` The numeric symbol kind received from the language server.\r\n    //\r\n    // Returns a string representing the equivalent OutlineView entity kind.\r\n    static symbolKindToEntityKind(symbol) {\r\n        switch (symbol) {\r\n            case languageclient_1.SymbolKind.Array:\r\n                return 'type-array';\r\n            case languageclient_1.SymbolKind.Boolean:\r\n                return 'type-boolean';\r\n            case languageclient_1.SymbolKind.Class:\r\n                return 'type-class';\r\n            case languageclient_1.SymbolKind.Constant:\r\n                return 'type-constant';\r\n            case languageclient_1.SymbolKind.Constructor:\r\n                return 'type-constructor';\r\n            case languageclient_1.SymbolKind.Enum:\r\n                return 'type-enum';\r\n            case languageclient_1.SymbolKind.Field:\r\n                return 'type-field';\r\n            case languageclient_1.SymbolKind.File:\r\n                return 'type-file';\r\n            case languageclient_1.SymbolKind.Function:\r\n                return 'type-function';\r\n            case languageclient_1.SymbolKind.Interface:\r\n                return 'type-interface';\r\n            case languageclient_1.SymbolKind.Method:\r\n                return 'type-method';\r\n            case languageclient_1.SymbolKind.Module:\r\n                return 'type-module';\r\n            case languageclient_1.SymbolKind.Namespace:\r\n                return 'type-namespace';\r\n            case languageclient_1.SymbolKind.Number:\r\n                return 'type-number';\r\n            case languageclient_1.SymbolKind.Package:\r\n                return 'type-package';\r\n            case languageclient_1.SymbolKind.Property:\r\n                return 'type-property';\r\n            case languageclient_1.SymbolKind.String:\r\n                return 'type-string';\r\n            case languageclient_1.SymbolKind.Variable:\r\n                return 'type-variable';\r\n            case languageclient_1.SymbolKind.Struct:\r\n                return 'type-class';\r\n            case languageclient_1.SymbolKind.EnumMember:\r\n                return 'type-constant';\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    // Public: Convert a symbol kind to the appropriate token kind used to syntax\r\n    // highlight the symbol name in the Outline View.\r\n    //\r\n    // * `symbol` The numeric symbol kind received from the language server.\r\n    //\r\n    // Returns a string representing the equivalent syntax token kind.\r\n    static symbolKindToTokenKind(symbol) {\r\n        switch (symbol) {\r\n            case languageclient_1.SymbolKind.Class:\r\n                return 'type';\r\n            case languageclient_1.SymbolKind.Constructor:\r\n                return 'constructor';\r\n            case languageclient_1.SymbolKind.Method:\r\n            case languageclient_1.SymbolKind.Function:\r\n                return 'method';\r\n            case languageclient_1.SymbolKind.String:\r\n                return 'string';\r\n            default:\r\n                return 'plain';\r\n        }\r\n    }\r\n}\r\nexports.default = OutlineViewAdapter;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst assert = require(\"assert\");\r\nconst convert_1 = require(\"../convert\");\r\nconst atom_1 = require(\"atom\");\r\nclass SignatureHelpAdapter {\r\n    constructor(server, grammarScopes) {\r\n        this._disposables = new atom_1.CompositeDisposable();\r\n        this._connection = server.connection;\r\n        this._capabilities = server.capabilities;\r\n        this._grammarScopes = grammarScopes;\r\n    }\r\n    // Returns a {Boolean} indicating this adapter can adapt the server based on the\r\n    // given serverCapabilities.\r\n    static canAdapt(serverCapabilities) {\r\n        return serverCapabilities.signatureHelpProvider != null;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n    attach(register) {\r\n        const { signatureHelpProvider } = this._capabilities;\r\n        assert(signatureHelpProvider != null);\r\n        let triggerCharacters;\r\n        if (signatureHelpProvider && Array.isArray(signatureHelpProvider.triggerCharacters)) {\r\n            triggerCharacters = new Set(signatureHelpProvider.triggerCharacters);\r\n        }\r\n        this._disposables.add(register({\r\n            priority: 1,\r\n            grammarScopes: this._grammarScopes,\r\n            triggerCharacters,\r\n            getSignatureHelp: this.getSignatureHelp.bind(this),\r\n        }));\r\n    }\r\n    // Public: Retrieves signature help for a given editor and position.\r\n    getSignatureHelp(editor, point) {\r\n        return this._connection.signatureHelp(convert_1.default.editorToTextDocumentPositionParams(editor, point));\r\n    }\r\n}\r\nexports.default = SignatureHelpAdapter;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnbmF0dXJlLWhlbHAtYWRhcHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9hZGFwdGVycy9zaWduYXR1cmUtaGVscC1hZGFwdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsaUNBQWtDO0FBQ2xDLHdDQUFpQztBQUVqQywrQkFJYztBQU9kLE1BQXFCLG9CQUFvQjtJQU12QyxZQUFZLE1BQW9CLEVBQUUsYUFBdUI7UUFMakQsaUJBQVksR0FBd0IsSUFBSSwwQkFBbUIsRUFBRSxDQUFDO1FBTXBFLElBQUksQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUNyQyxJQUFJLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUM7UUFDekMsSUFBSSxDQUFDLGNBQWMsR0FBRyxhQUFhLENBQUM7SUFDdEMsQ0FBQztJQUVELGdGQUFnRjtJQUNoRiw0QkFBNEI7SUFDckIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxrQkFBc0M7UUFDM0QsT0FBTyxrQkFBa0IsQ0FBQyxxQkFBcUIsSUFBSSxJQUFJLENBQUM7SUFDMUQsQ0FBQztJQUVNLE9BQU87UUFDWixJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFTSxNQUFNLENBQUMsUUFBdUM7UUFDbkQsTUFBTSxFQUFDLHFCQUFxQixFQUFDLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUNuRCxNQUFNLENBQUMscUJBQXFCLElBQUksSUFBSSxDQUFDLENBQUM7UUFFdEMsSUFBSSxpQkFBMEMsQ0FBQztRQUMvQyxJQUFJLHFCQUFxQixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMscUJBQXFCLENBQUMsaUJBQWlCLENBQUMsRUFBRTtZQUNuRixpQkFBaUIsR0FBRyxJQUFJLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1NBQ3RFO1FBRUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQ25CLFFBQVEsQ0FBQztZQUNQLFFBQVEsRUFBRSxDQUFDO1lBQ1gsYUFBYSxFQUFFLElBQUksQ0FBQyxjQUFjO1lBQ2xDLGlCQUFpQjtZQUNqQixnQkFBZ0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztTQUNuRCxDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUM7SUFFRCxvRUFBb0U7SUFDN0QsZ0JBQWdCLENBQUMsTUFBa0IsRUFBRSxLQUFZO1FBQ3RELE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsaUJBQU8sQ0FBQyxrQ0FBa0MsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUNuRyxDQUFDO0NBQ0Y7QUE3Q0QsdUNBNkNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYXRvbUlkZSBmcm9tICdhdG9tLWlkZSc7XHJcbmltcG9ydCBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKTtcclxuaW1wb3J0IENvbnZlcnQgZnJvbSAnLi4vY29udmVydCc7XHJcbmltcG9ydCB7IEFjdGl2ZVNlcnZlciB9IGZyb20gJy4uL3NlcnZlci1tYW5hZ2VyJztcclxuaW1wb3J0IHtcclxuICBDb21wb3NpdGVEaXNwb3NhYmxlLFxyXG4gIFBvaW50LFxyXG4gIFRleHRFZGl0b3IsXHJcbn0gZnJvbSAnYXRvbSc7XHJcbmltcG9ydCB7XHJcbiAgTGFuZ3VhZ2VDbGllbnRDb25uZWN0aW9uLFxyXG4gIFNlcnZlckNhcGFiaWxpdGllcyxcclxuICBTaWduYXR1cmVIZWxwLFxyXG59IGZyb20gJy4uL2xhbmd1YWdlY2xpZW50JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNpZ25hdHVyZUhlbHBBZGFwdGVyIHtcclxuICBwcml2YXRlIF9kaXNwb3NhYmxlczogQ29tcG9zaXRlRGlzcG9zYWJsZSA9IG5ldyBDb21wb3NpdGVEaXNwb3NhYmxlKCk7XHJcbiAgcHJpdmF0ZSBfY29ubmVjdGlvbjogTGFuZ3VhZ2VDbGllbnRDb25uZWN0aW9uO1xyXG4gIHByaXZhdGUgX2NhcGFiaWxpdGllczogU2VydmVyQ2FwYWJpbGl0aWVzO1xyXG4gIHByaXZhdGUgX2dyYW1tYXJTY29wZXM6IHN0cmluZ1tdO1xyXG5cclxuICBjb25zdHJ1Y3RvcihzZXJ2ZXI6IEFjdGl2ZVNlcnZlciwgZ3JhbW1hclNjb3Blczogc3RyaW5nW10pIHtcclxuICAgIHRoaXMuX2Nvbm5lY3Rpb24gPSBzZXJ2ZXIuY29ubmVjdGlvbjtcclxuICAgIHRoaXMuX2NhcGFiaWxpdGllcyA9IHNlcnZlci5jYXBhYmlsaXRpZXM7XHJcbiAgICB0aGlzLl9ncmFtbWFyU2NvcGVzID0gZ3JhbW1hclNjb3BlcztcclxuICB9XHJcblxyXG4gIC8vIFJldHVybnMgYSB7Qm9vbGVhbn0gaW5kaWNhdGluZyB0aGlzIGFkYXB0ZXIgY2FuIGFkYXB0IHRoZSBzZXJ2ZXIgYmFzZWQgb24gdGhlXHJcbiAgLy8gZ2l2ZW4gc2VydmVyQ2FwYWJpbGl0aWVzLlxyXG4gIHB1YmxpYyBzdGF0aWMgY2FuQWRhcHQoc2VydmVyQ2FwYWJpbGl0aWVzOiBTZXJ2ZXJDYXBhYmlsaXRpZXMpOiBib29sZWFuIHtcclxuICAgIHJldHVybiBzZXJ2ZXJDYXBhYmlsaXRpZXMuc2lnbmF0dXJlSGVscFByb3ZpZGVyICE9IG51bGw7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZGlzcG9zZSgpIHtcclxuICAgIHRoaXMuX2Rpc3Bvc2FibGVzLmRpc3Bvc2UoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBhdHRhY2gocmVnaXN0ZXI6IGF0b21JZGUuU2lnbmF0dXJlSGVscFJlZ2lzdHJ5KTogdm9pZCB7XHJcbiAgICBjb25zdCB7c2lnbmF0dXJlSGVscFByb3ZpZGVyfSA9IHRoaXMuX2NhcGFiaWxpdGllcztcclxuICAgIGFzc2VydChzaWduYXR1cmVIZWxwUHJvdmlkZXIgIT0gbnVsbCk7XHJcblxyXG4gICAgbGV0IHRyaWdnZXJDaGFyYWN0ZXJzOiBTZXQ8c3RyaW5nPiB8IHVuZGVmaW5lZDtcclxuICAgIGlmIChzaWduYXR1cmVIZWxwUHJvdmlkZXIgJiYgQXJyYXkuaXNBcnJheShzaWduYXR1cmVIZWxwUHJvdmlkZXIudHJpZ2dlckNoYXJhY3RlcnMpKSB7XHJcbiAgICAgIHRyaWdnZXJDaGFyYWN0ZXJzID0gbmV3IFNldChzaWduYXR1cmVIZWxwUHJvdmlkZXIudHJpZ2dlckNoYXJhY3RlcnMpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX2Rpc3Bvc2FibGVzLmFkZChcclxuICAgICAgcmVnaXN0ZXIoe1xyXG4gICAgICAgIHByaW9yaXR5OiAxLFxyXG4gICAgICAgIGdyYW1tYXJTY29wZXM6IHRoaXMuX2dyYW1tYXJTY29wZXMsXHJcbiAgICAgICAgdHJpZ2dlckNoYXJhY3RlcnMsXHJcbiAgICAgICAgZ2V0U2lnbmF0dXJlSGVscDogdGhpcy5nZXRTaWduYXR1cmVIZWxwLmJpbmQodGhpcyksXHJcbiAgICAgIH0pLFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8vIFB1YmxpYzogUmV0cmlldmVzIHNpZ25hdHVyZSBoZWxwIGZvciBhIGdpdmVuIGVkaXRvciBhbmQgcG9zaXRpb24uXHJcbiAgcHVibGljIGdldFNpZ25hdHVyZUhlbHAoZWRpdG9yOiBUZXh0RWRpdG9yLCBwb2ludDogUG9pbnQpOiBQcm9taXNlPFNpZ25hdHVyZUhlbHAgfCBudWxsPiB7XHJcbiAgICByZXR1cm4gdGhpcy5fY29ubmVjdGlvbi5zaWduYXR1cmVIZWxwKENvbnZlcnQuZWRpdG9yVG9UZXh0RG9jdW1lbnRQb3NpdGlvblBhcmFtcyhlZGl0b3IsIHBvaW50KSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst rpc = require(\"vscode-jsonrpc\");\r\nconst path = require(\"path\");\r\nconst convert_js_1 = require(\"./convert.js\");\r\nconst apply_edit_adapter_1 = require(\"./adapters/apply-edit-adapter\");\r\nconst autocomplete_adapter_1 = require(\"./adapters/autocomplete-adapter\");\r\nconst code_action_adapter_1 = require(\"./adapters/code-action-adapter\");\r\nconst code_format_adapter_1 = require(\"./adapters/code-format-adapter\");\r\nconst code_highlight_adapter_1 = require(\"./adapters/code-highlight-adapter\");\r\nconst datatip_adapter_1 = require(\"./adapters/datatip-adapter\");\r\nconst definition_adapter_1 = require(\"./adapters/definition-adapter\");\r\nconst document_sync_adapter_1 = require(\"./adapters/document-sync-adapter\");\r\nconst find_references_adapter_1 = require(\"./adapters/find-references-adapter\");\r\nconst linter_push_v2_adapter_1 = require(\"./adapters/linter-push-v2-adapter\");\r\nconst logging_console_adapter_1 = require(\"./adapters/logging-console-adapter\");\r\nconst notifications_adapter_1 = require(\"./adapters/notifications-adapter\");\r\nconst outline_view_adapter_1 = require(\"./adapters/outline-view-adapter\");\r\nconst signature_help_adapter_1 = require(\"./adapters/signature-help-adapter\");\r\nconst Utils = require(\"./utils\");\r\nconst languageclient_1 = require(\"./languageclient\");\r\nexports.LanguageClientConnection = languageclient_1.LanguageClientConnection;\r\nconst logger_1 = require(\"./logger\");\r\nconst server_manager_js_1 = require(\"./server-manager.js\");\r\nconst atom_1 = require(\"atom\");\r\n// Public: AutoLanguageClient provides a simple way to have all the supported\r\n// Atom-IDE services wired up entirely for you by just subclassing it and\r\n// implementing startServerProcess/getGrammarScopes/getLanguageName and\r\n// getServerName.\r\nclass AutoLanguageClient {\r\n    constructor() {\r\n        this._isDeactivating = false;\r\n        this._serverAdapters = new WeakMap();\r\n        this.processStdErr = '';\r\n        this.reportBusyWhile = (title, f) => __awaiter(this, void 0, void 0, function* () {\r\n            if (this.busySignalService) {\r\n                return this.busySignalService.reportBusyWhile(title, f);\r\n            }\r\n            else {\r\n                return this.reportBusyWhileDefault(title, f);\r\n            }\r\n        });\r\n        this.reportBusyWhileDefault = (title, f) => __awaiter(this, void 0, void 0, function* () {\r\n            this.logger.info(`[Started] ${title}`);\r\n            let res;\r\n            try {\r\n                res = yield f();\r\n            }\r\n            finally {\r\n                this.logger.info(`[Finished] ${title}`);\r\n            }\r\n            return res;\r\n        });\r\n    }\r\n    // You must implement these so we know how to deal with your language and server\r\n    // -------------------------------------------------------------------------\r\n    // Return an array of the grammar scopes you handle, e.g. [ 'source.js' ]\r\n    getGrammarScopes() {\r\n        throw Error('Must implement getGrammarScopes when extending AutoLanguageClient');\r\n    }\r\n    // Return the name of the language you support, e.g. 'JavaScript'\r\n    getLanguageName() {\r\n        throw Error('Must implement getLanguageName when extending AutoLanguageClient');\r\n    }\r\n    // Return the name of your server, e.g. 'Eclipse JDT'\r\n    getServerName() {\r\n        throw Error('Must implement getServerName when extending AutoLanguageClient');\r\n    }\r\n    // Start your server process\r\n    startServerProcess(projectPath) {\r\n        throw Error('Must override startServerProcess to start language server process when extending AutoLanguageClient');\r\n    }\r\n    // You might want to override these for different behavior\r\n    // ---------------------------------------------------------------------------\r\n    // Determine whether we should start a server for a given editor if we don't have one yet\r\n    shouldStartForEditor(editor) {\r\n        return this.getGrammarScopes().includes(editor.getGrammar().scopeName);\r\n    }\r\n    // Return the parameters used to initialize a client - you may want to extend capabilities\r\n    getInitializeParams(projectPath, process) {\r\n        return {\r\n            processId: process.pid,\r\n            rootPath: projectPath,\r\n            rootUri: convert_js_1.default.pathToUri(projectPath),\r\n            workspaceFolders: [],\r\n            capabilities: {\r\n                workspace: {\r\n                    applyEdit: true,\r\n                    configuration: false,\r\n                    workspaceEdit: {\r\n                        documentChanges: true,\r\n                    },\r\n                    workspaceFolders: false,\r\n                    didChangeConfiguration: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    didChangeWatchedFiles: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    symbol: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    executeCommand: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                },\r\n                textDocument: {\r\n                    synchronization: {\r\n                        dynamicRegistration: false,\r\n                        willSave: true,\r\n                        willSaveWaitUntil: true,\r\n                        didSave: true,\r\n                    },\r\n                    completion: {\r\n                        dynamicRegistration: false,\r\n                        completionItem: {\r\n                            snippetSupport: true,\r\n                            commitCharactersSupport: false,\r\n                        },\r\n                        contextSupport: true,\r\n                    },\r\n                    hover: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    signatureHelp: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    references: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    documentHighlight: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    documentSymbol: {\r\n                        dynamicRegistration: false,\r\n                        hierarchicalDocumentSymbolSupport: true,\r\n                    },\r\n                    formatting: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    rangeFormatting: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    onTypeFormatting: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    definition: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    codeAction: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    codeLens: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    documentLink: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    rename: {\r\n                        dynamicRegistration: false,\r\n                    },\r\n                    // We do not support these features yet.\r\n                    // Need to set to undefined to appease TypeScript weak type detection.\r\n                    implementation: undefined,\r\n                    typeDefinition: undefined,\r\n                    colorProvider: undefined,\r\n                    foldingRange: undefined,\r\n                },\r\n                experimental: {},\r\n            },\r\n        };\r\n    }\r\n    // Early wire-up of listeners before initialize method is sent\r\n    preInitialization(connection) { }\r\n    // Late wire-up of listeners after initialize method has been sent\r\n    postInitialization(server) { }\r\n    // Determine whether to use ipc, stdio or socket to connect to the server\r\n    getConnectionType() {\r\n        return this.socket != null ? 'socket' : 'stdio';\r\n    }\r\n    // Return the name of your root configuration key\r\n    getRootConfigurationKey() {\r\n        return '';\r\n    }\r\n    // Optionally transform the configuration object before it is sent to the server\r\n    mapConfigurationObject(configuration) {\r\n        return configuration;\r\n    }\r\n    // Helper methods that are useful for implementors\r\n    // ---------------------------------------------------------------------------\r\n    // Gets a LanguageClientConnection for a given TextEditor\r\n    getConnectionForEditor(editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const server = yield this._serverManager.getServer(editor);\r\n            return server ? server.connection : null;\r\n        });\r\n    }\r\n    // Restart all active language servers for this language client in the workspace\r\n    restartAllServers() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this._serverManager.restartAllServers();\r\n        });\r\n    }\r\n    // Default implementation of the rest of the AutoLanguageClient\r\n    // ---------------------------------------------------------------------------\r\n    // Activate does very little for perf reasons - hooks in via ServerManager for later 'activation'\r\n    activate() {\r\n        this._disposable = new atom_1.CompositeDisposable();\r\n        this.name = `${this.getLanguageName()} (${this.getServerName()})`;\r\n        this.logger = this.getLogger();\r\n        this._serverManager = new server_manager_js_1.ServerManager((p) => this.startServer(p), this.logger, (e) => this.shouldStartForEditor(e), (filepath) => this.filterChangeWatchedFiles(filepath), this.reportBusyWhile, this.getServerName());\r\n        this._serverManager.startListening();\r\n        process.on('exit', () => this.exitCleanup.bind(this));\r\n    }\r\n    exitCleanup() {\r\n        this._serverManager.terminate();\r\n    }\r\n    // Deactivate disposes the resources we're using\r\n    deactivate() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._isDeactivating = true;\r\n            this._disposable.dispose();\r\n            this._serverManager.stopListening();\r\n            yield this._serverManager.stopAllServers();\r\n        });\r\n    }\r\n    spawnChildNode(args, options = {}) {\r\n        this.logger.debug(`starting child Node \"${args.join(' ')}\"`);\r\n        options.env = options.env || Object.create(process.env);\r\n        if (options.env) {\r\n            options.env.ELECTRON_RUN_AS_NODE = '1';\r\n            options.env.ELECTRON_NO_ATTACH_CONSOLE = '1';\r\n        }\r\n        return cp.spawn(process.execPath, args, options);\r\n    }\r\n    // LSP logging is only set for warnings & errors by default unless you turn on the core.debugLSP setting\r\n    getLogger() {\r\n        const filter = atom.config.get('core.debugLSP')\r\n            ? logger_1.FilteredLogger.DeveloperLevelFilter\r\n            : logger_1.FilteredLogger.UserLevelFilter;\r\n        return new logger_1.FilteredLogger(new logger_1.ConsoleLogger(this.name), filter);\r\n    }\r\n    // Starts the server by starting the process, then initializing the language server and starting adapters\r\n    startServer(projectPath) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const process = yield this.reportBusyWhile(`Starting ${this.getServerName()} for ${path.basename(projectPath)}`, () => __awaiter(this, void 0, void 0, function* () { return this.startServerProcess(projectPath); }));\r\n            this.captureServerErrors(process, projectPath);\r\n            const connection = new languageclient_1.LanguageClientConnection(this.createRpcConnection(process), this.logger);\r\n            this.preInitialization(connection);\r\n            const initializeParams = this.getInitializeParams(projectPath, process);\r\n            const initialization = connection.initialize(initializeParams);\r\n            this.reportBusyWhile(`${this.getServerName()} initializing for ${path.basename(projectPath)}`, () => initialization);\r\n            const initializeResponse = yield initialization;\r\n            const newServer = {\r\n                projectPath,\r\n                process,\r\n                connection,\r\n                capabilities: initializeResponse.capabilities,\r\n                disposable: new atom_1.CompositeDisposable(),\r\n            };\r\n            this.postInitialization(newServer);\r\n            connection.initialized();\r\n            connection.on('close', () => {\r\n                if (!this._isDeactivating) {\r\n                    this._serverManager.stopServer(newServer);\r\n                    if (!this._serverManager.hasServerReachedRestartLimit(newServer)) {\r\n                        this.logger.debug(`Restarting language server for project '${newServer.projectPath}'`);\r\n                        this._serverManager.startServer(projectPath);\r\n                    }\r\n                    else {\r\n                        this.logger.warn(`Language server has exceeded auto-restart limit for project '${newServer.projectPath}'`);\r\n                        atom.notifications.addError(\r\n                        // tslint:disable-next-line:max-line-length\r\n                        `The ${this.name} language server has exited and exceeded the restart limit for project '${newServer.projectPath}'`);\r\n                    }\r\n                }\r\n            });\r\n            const configurationKey = this.getRootConfigurationKey();\r\n            if (configurationKey) {\r\n                newServer.disposable.add(atom.config.observe(configurationKey, (config) => {\r\n                    const mappedConfig = this.mapConfigurationObject(config || {});\r\n                    if (mappedConfig) {\r\n                        connection.didChangeConfiguration({\r\n                            settings: mappedConfig,\r\n                        });\r\n                    }\r\n                }));\r\n            }\r\n            this.startExclusiveAdapters(newServer);\r\n            return newServer;\r\n        });\r\n    }\r\n    captureServerErrors(childProcess, projectPath) {\r\n        childProcess.on('error', (err) => this.handleSpawnFailure(err));\r\n        childProcess.on('exit', (code, signal) => this.logger.debug(`exit: code ${code} signal ${signal}`));\r\n        childProcess.stderr.setEncoding('utf8');\r\n        childProcess.stderr.on('data', (chunk) => {\r\n            const errorString = chunk.toString();\r\n            this.handleServerStderr(errorString, projectPath);\r\n            // Keep the last 5 lines for packages to use in messages\r\n            this.processStdErr = (this.processStdErr + errorString)\r\n                .split('\\n')\r\n                .slice(-5)\r\n                .join('\\n');\r\n        });\r\n    }\r\n    handleSpawnFailure(err) {\r\n        atom.notifications.addError(`${this.getServerName()} language server for ${this.getLanguageName()} unable to start`, {\r\n            dismissable: true,\r\n            description: err.toString(),\r\n        });\r\n    }\r\n    // Creates the RPC connection which can be ipc, socket or stdio\r\n    createRpcConnection(process) {\r\n        let reader;\r\n        let writer;\r\n        const connectionType = this.getConnectionType();\r\n        switch (connectionType) {\r\n            case 'ipc':\r\n                reader = new rpc.IPCMessageReader(process);\r\n                writer = new rpc.IPCMessageWriter(process);\r\n                break;\r\n            case 'socket':\r\n                reader = new rpc.SocketMessageReader(this.socket);\r\n                writer = new rpc.SocketMessageWriter(this.socket);\r\n                break;\r\n            case 'stdio':\r\n                reader = new rpc.StreamMessageReader(process.stdout);\r\n                writer = new rpc.StreamMessageWriter(process.stdin);\r\n                break;\r\n            default:\r\n                return Utils.assertUnreachable(connectionType);\r\n        }\r\n        return rpc.createMessageConnection(reader, writer, {\r\n            log: (...args) => { },\r\n            warn: (...args) => { },\r\n            info: (...args) => { },\r\n            error: (...args) => {\r\n                this.logger.error(args);\r\n            },\r\n        });\r\n    }\r\n    // Start adapters that are not shared between servers\r\n    startExclusiveAdapters(server) {\r\n        apply_edit_adapter_1.default.attach(server.connection);\r\n        notifications_adapter_1.default.attach(server.connection, this.name, server.projectPath);\r\n        if (document_sync_adapter_1.default.canAdapt(server.capabilities)) {\r\n            const docSyncAdapter = new document_sync_adapter_1.default(server.connection, (editor) => this.shouldSyncForEditor(editor, server.projectPath), server.capabilities.textDocumentSync, this.reportBusyWhile);\r\n            server.disposable.add(docSyncAdapter);\r\n        }\r\n        const linterPushV2 = new linter_push_v2_adapter_1.default(server.connection);\r\n        if (this._linterDelegate != null) {\r\n            linterPushV2.attach(this._linterDelegate);\r\n        }\r\n        server.disposable.add(linterPushV2);\r\n        const loggingConsole = new logging_console_adapter_1.default(server.connection);\r\n        if (this._consoleDelegate != null) {\r\n            loggingConsole.attach(this._consoleDelegate({ id: this.name, name: 'abc' }));\r\n        }\r\n        server.disposable.add(loggingConsole);\r\n        let signatureHelpAdapter;\r\n        if (signature_help_adapter_1.default.canAdapt(server.capabilities)) {\r\n            signatureHelpAdapter = new signature_help_adapter_1.default(server, this.getGrammarScopes());\r\n            if (this._signatureHelpRegistry != null) {\r\n                signatureHelpAdapter.attach(this._signatureHelpRegistry);\r\n            }\r\n            server.disposable.add(signatureHelpAdapter);\r\n        }\r\n        this._serverAdapters.set(server, {\r\n            linterPushV2, loggingConsole, signatureHelpAdapter,\r\n        });\r\n    }\r\n    shouldSyncForEditor(editor, projectPath) {\r\n        return this.isFileInProject(editor, projectPath) && this.shouldStartForEditor(editor);\r\n    }\r\n    isFileInProject(editor, projectPath) {\r\n        return (editor.getPath() || '').startsWith(projectPath);\r\n    }\r\n    // Autocomplete+ via LS completion---------------------------------------\r\n    provideAutocomplete() {\r\n        return {\r\n            selector: this.getGrammarScopes()\r\n                .map((g) => g.includes('.') ? '.' + g : g)\r\n                .join(', '),\r\n            inclusionPriority: 1,\r\n            suggestionPriority: 2,\r\n            excludeLowerPriority: false,\r\n            getSuggestions: this.getSuggestions.bind(this),\r\n            onDidInsertSuggestion: this.onDidInsertSuggestion.bind(this),\r\n            getSuggestionDetailsOnSelect: this.getSuggestionDetailsOnSelect.bind(this),\r\n        };\r\n    }\r\n    getSuggestions(request) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const server = yield this._serverManager.getServer(request.editor);\r\n            if (server == null || !autocomplete_adapter_1.default.canAdapt(server.capabilities)) {\r\n                return [];\r\n            }\r\n            this.autoComplete = this.autoComplete || new autocomplete_adapter_1.default();\r\n            this._lastAutocompleteRequest = request;\r\n            return this.autoComplete.getSuggestions(server, request, this.onDidConvertAutocomplete, atom.config.get('autocomplete-plus.minimumWordLength'));\r\n        });\r\n    }\r\n    getSuggestionDetailsOnSelect(suggestion) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const request = this._lastAutocompleteRequest;\r\n            if (request == null) {\r\n                return null;\r\n            }\r\n            const server = yield this._serverManager.getServer(request.editor);\r\n            if (server == null || !autocomplete_adapter_1.default.canResolve(server.capabilities) || this.autoComplete == null) {\r\n                return null;\r\n            }\r\n            return this.autoComplete.completeSuggestion(server, suggestion, request, this.onDidConvertAutocomplete);\r\n        });\r\n    }\r\n    onDidConvertAutocomplete(completionItem, suggestion, request) {\r\n    }\r\n    onDidInsertSuggestion(arg) { }\r\n    // Definitions via LS documentHighlight and gotoDefinition------------\r\n    provideDefinitions() {\r\n        return {\r\n            name: this.name,\r\n            priority: 20,\r\n            grammarScopes: this.getGrammarScopes(),\r\n            getDefinition: this.getDefinition.bind(this),\r\n        };\r\n    }\r\n    getDefinition(editor, point) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const server = yield this._serverManager.getServer(editor);\r\n            if (server == null || !definition_adapter_1.default.canAdapt(server.capabilities)) {\r\n                return null;\r\n            }\r\n            this.definitions = this.definitions || new definition_adapter_1.default();\r\n            return this.definitions.getDefinition(server.connection, server.capabilities, this.getLanguageName(), editor, point);\r\n        });\r\n    }\r\n    // Outline View via LS documentSymbol---------------------------------\r\n    provideOutlines() {\r\n        return {\r\n            name: this.name,\r\n            grammarScopes: this.getGrammarScopes(),\r\n            priority: 1,\r\n            getOutline: this.getOutline.bind(this),\r\n        };\r\n    }\r\n    getOutline(editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const server = yield this._serverManager.getServer(editor);\r\n            if (server == null || !outline_view_adapter_1.default.canAdapt(server.capabilities)) {\r\n                return null;\r\n            }\r\n            this.outlineView = this.outlineView || new outline_view_adapter_1.default();\r\n            return this.outlineView.getOutline(server.connection, editor);\r\n        });\r\n    }\r\n    // Linter push v2 API via LS publishDiagnostics\r\n    consumeLinterV2(registerIndie) {\r\n        this._linterDelegate = registerIndie({ name: this.name });\r\n        if (this._linterDelegate == null) {\r\n            return;\r\n        }\r\n        for (const server of this._serverManager.getActiveServers()) {\r\n            const linterPushV2 = this.getServerAdapter(server, 'linterPushV2');\r\n            if (linterPushV2 != null) {\r\n                linterPushV2.attach(this._linterDelegate);\r\n            }\r\n        }\r\n    }\r\n    // Find References via LS findReferences------------------------------\r\n    provideFindReferences() {\r\n        return {\r\n            isEditorSupported: (editor) => this.getGrammarScopes().includes(editor.getGrammar().scopeName),\r\n            findReferences: this.getReferences.bind(this),\r\n        };\r\n    }\r\n    getReferences(editor, point) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const server = yield this._serverManager.getServer(editor);\r\n            if (server == null || !find_references_adapter_1.default.canAdapt(server.capabilities)) {\r\n                return null;\r\n            }\r\n            this.findReferences = this.findReferences || new find_references_adapter_1.default();\r\n            return this.findReferences.getReferences(server.connection, editor, point, server.projectPath);\r\n        });\r\n    }\r\n    // Datatip via LS textDocument/hover----------------------------------\r\n    consumeDatatip(service) {\r\n        this._disposable.add(service.addProvider({\r\n            providerName: this.name,\r\n            priority: 1,\r\n            grammarScopes: this.getGrammarScopes(),\r\n            validForScope: (scopeName) => {\r\n                return this.getGrammarScopes().includes(scopeName);\r\n            },\r\n            datatip: this.getDatatip.bind(this),\r\n        }));\r\n    }\r\n    getDatatip(editor, point) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const server = yield this._serverManager.getServer(editor);\r\n            if (server == null || !datatip_adapter_1.default.canAdapt(server.capabilities)) {\r\n                return null;\r\n            }\r\n            this.datatip = this.datatip || new datatip_adapter_1.default();\r\n            return this.datatip.getDatatip(server.connection, editor, point);\r\n        });\r\n    }\r\n    // Console via LS logging---------------------------------------------\r\n    consumeConsole(createConsole) {\r\n        this._consoleDelegate = createConsole;\r\n        for (const server of this._serverManager.getActiveServers()) {\r\n            const loggingConsole = this.getServerAdapter(server, 'loggingConsole');\r\n            if (loggingConsole) {\r\n                loggingConsole.attach(this._consoleDelegate({ id: this.name, name: 'abc' }));\r\n            }\r\n        }\r\n        // No way of detaching from client connections today\r\n        return new atom_1.Disposable(() => { });\r\n    }\r\n    // Code Format via LS formatDocument & formatDocumentRange------------\r\n    provideCodeFormat() {\r\n        return {\r\n            grammarScopes: this.getGrammarScopes(),\r\n            priority: 1,\r\n            formatCode: this.getCodeFormat.bind(this),\r\n        };\r\n    }\r\n    getCodeFormat(editor, range) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const server = yield this._serverManager.getServer(editor);\r\n            if (server == null || !code_format_adapter_1.default.canAdapt(server.capabilities)) {\r\n                return [];\r\n            }\r\n            return code_format_adapter_1.default.format(server.connection, server.capabilities, editor, range);\r\n        });\r\n    }\r\n    provideRangeCodeFormat() {\r\n        return {\r\n            grammarScopes: this.getGrammarScopes(),\r\n            priority: 1,\r\n            formatCode: this.getRangeCodeFormat.bind(this),\r\n        };\r\n    }\r\n    getRangeCodeFormat(editor, range) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const server = yield this._serverManager.getServer(editor);\r\n            if (server == null || !server.capabilities.documentRangeFormattingProvider) {\r\n                return [];\r\n            }\r\n            return code_format_adapter_1.default.formatRange(server.connection, editor, range);\r\n        });\r\n    }\r\n    provideFileCodeFormat() {\r\n        return {\r\n            grammarScopes: this.getGrammarScopes(),\r\n            priority: 1,\r\n            formatEntireFile: this.getFileCodeFormat.bind(this),\r\n        };\r\n    }\r\n    provideOnSaveCodeFormat() {\r\n        return {\r\n            grammarScopes: this.getGrammarScopes(),\r\n            priority: 1,\r\n            formatOnSave: this.getFileCodeFormat.bind(this),\r\n        };\r\n    }\r\n    getFileCodeFormat(editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const server = yield this._serverManager.getServer(editor);\r\n            if (server == null || !server.capabilities.documentFormattingProvider) {\r\n                return [];\r\n            }\r\n            return code_format_adapter_1.default.formatDocument(server.connection, editor);\r\n        });\r\n    }\r\n    provideOnTypeCodeFormat() {\r\n        return {\r\n            grammarScopes: this.getGrammarScopes(),\r\n            priority: 1,\r\n            formatAtPosition: this.getOnTypeCodeFormat.bind(this),\r\n        };\r\n    }\r\n    getOnTypeCodeFormat(editor, point, character) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const server = yield this._serverManager.getServer(editor);\r\n            if (server == null || !server.capabilities.documentOnTypeFormattingProvider) {\r\n                return [];\r\n            }\r\n            return code_format_adapter_1.default.formatOnType(server.connection, editor, point, character);\r\n        });\r\n    }\r\n    provideCodeHighlight() {\r\n        return {\r\n            grammarScopes: this.getGrammarScopes(),\r\n            priority: 1,\r\n            highlight: (editor, position) => {\r\n                return this.getCodeHighlight(editor, position);\r\n            },\r\n        };\r\n    }\r\n    getCodeHighlight(editor, position) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const server = yield this._serverManager.getServer(editor);\r\n            if (server == null || !code_highlight_adapter_1.default.canAdapt(server.capabilities)) {\r\n                return null;\r\n            }\r\n            return code_highlight_adapter_1.default.highlight(server.connection, server.capabilities, editor, position);\r\n        });\r\n    }\r\n    provideCodeActions() {\r\n        return {\r\n            grammarScopes: this.getGrammarScopes(),\r\n            priority: 1,\r\n            getCodeActions: (editor, range, diagnostics) => {\r\n                return this.getCodeActions(editor, range, diagnostics);\r\n            },\r\n        };\r\n    }\r\n    getCodeActions(editor, range, diagnostics) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const server = yield this._serverManager.getServer(editor);\r\n            if (server == null || !code_action_adapter_1.default.canAdapt(server.capabilities)) {\r\n                return null;\r\n            }\r\n            return code_action_adapter_1.default.getCodeActions(server.connection, server.capabilities, this.getServerAdapter(server, 'linterPushV2'), editor, range, diagnostics);\r\n        });\r\n    }\r\n    consumeSignatureHelp(registry) {\r\n        this._signatureHelpRegistry = registry;\r\n        for (const server of this._serverManager.getActiveServers()) {\r\n            const signatureHelpAdapter = this.getServerAdapter(server, 'signatureHelpAdapter');\r\n            if (signatureHelpAdapter != null) {\r\n                signatureHelpAdapter.attach(registry);\r\n            }\r\n        }\r\n        return new atom_1.Disposable(() => {\r\n            this._signatureHelpRegistry = undefined;\r\n        });\r\n    }\r\n    consumeBusySignal(service) {\r\n        this.busySignalService = service;\r\n        return new atom_1.Disposable(() => delete this.busySignalService);\r\n    }\r\n    /**\r\n     * `didChangeWatchedFiles` message filtering, override for custom logic.\r\n     * @param filePath path of a file that has changed in the project path\r\n     * @return false => message will not be sent to the language server\r\n     */\r\n    filterChangeWatchedFiles(filePath) {\r\n        return true;\r\n    }\r\n    /**\r\n     * Called on language server stderr output.\r\n     * @param stderr a chunk of stderr from a language server instance\r\n     */\r\n    handleServerStderr(stderr, projectPath) {\r\n        stderr.split('\\n').filter((l) => l).forEach((line) => this.logger.warn(`stderr ${line}`));\r\n    }\r\n    getServerAdapter(server, adapter) {\r\n        const adapters = this._serverAdapters.get(server);\r\n        return adapters && adapters[adapter];\r\n    }\r\n}\r\nexports.default = AutoLanguageClient;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1sYW5ndWFnZWNsaWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9hdXRvLWxhbmd1YWdlY2xpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxvQ0FBb0M7QUFFcEMsc0NBQXNDO0FBQ3RDLDZCQUE2QjtBQUc3Qiw2Q0FBbUM7QUFDbkMsc0VBQTZEO0FBQzdELDBFQUFrRTtBQUNsRSx3RUFBK0Q7QUFDL0Qsd0VBQStEO0FBQy9ELDhFQUFxRTtBQUNyRSxnRUFBd0Q7QUFDeEQsc0VBQThEO0FBQzlELDRFQUFtRTtBQUNuRSxnRkFBdUU7QUFDdkUsOEVBQW9FO0FBQ3BFLGdGQUF1RTtBQUN2RSw0RUFBb0U7QUFDcEUsMEVBQWlFO0FBQ2pFLDhFQUFxRTtBQUNyRSxpQ0FBaUM7QUFFakMscURBQTREO0FBb0JyQyxtQ0FwQmQseUNBQXdCLENBb0JjO0FBbkIvQyxxQ0FJa0I7QUFDbEIsMkRBSTZCO0FBQzdCLCtCQU1jO0FBWWQsNkVBQTZFO0FBQzdFLHlFQUF5RTtBQUN6RSx1RUFBdUU7QUFDdkUsaUJBQWlCO0FBQ2pCLE1BQXFCLGtCQUFrQjtJQUF2QztRQU9VLG9CQUFlLEdBQVksS0FBSyxDQUFDO1FBQ2pDLG9CQUFlLEdBQUcsSUFBSSxPQUFPLEVBQWdDLENBQUM7UUFLNUQsa0JBQWEsR0FBVyxFQUFFLENBQUM7UUFzdEIzQixvQkFBZSxHQUEwQixDQUFPLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNwRSxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtnQkFDMUIsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsZUFBZSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQzthQUN6RDtpQkFBTTtnQkFDTCxPQUFPLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDOUM7UUFDSCxDQUFDLENBQUEsQ0FBQTtRQUVTLDJCQUFzQixHQUEwQixD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QkFBa0IsQ0FBQyxNQUFjLEVBQUUsV0FBbUI7UUFDOUQsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDNUYsQ0FBQztJQUVPLGdCQUFnQixDQUN0QixNQUFvQixFQUFFLE9BQVU7UUFFaEMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEQsT0FBTyxRQUFRLElBQUksUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7Q0FvQkY7QUFydkJELHFDQXF2QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjcCBmcm9tICdjaGlsZF9wcm9jZXNzJztcclxuaW1wb3J0ICogYXMgbHMgZnJvbSAnLi9sYW5ndWFnZWNsaWVudCc7XHJcbmltcG9ydCAqIGFzIHJwYyBmcm9tICd2c2NvZGUtanNvbnJwYyc7XHJcbmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7XHJcbmltcG9ydCAqIGFzIGF0b21JZGUgZnJvbSAnYXRvbS1pZGUnO1xyXG5pbXBvcnQgKiBhcyBsaW50ZXIgZnJvbSAnYXRvbS9saW50ZXInO1xyXG5pbXBvcnQgQ29udmVydCBmcm9tICcuL2NvbnZlcnQuanMnO1xyXG5pbXBvcnQgQXBwbHlFZGl0QWRhcHRlciBmcm9tICcuL2FkYXB0ZXJzL2FwcGx5LWVkaXQtYWRhcHRlcic7XHJcbmltcG9ydCBBdXRvY29tcGxldGVBZGFwdGVyIGZyb20gJy4vYWRhcHRlcnMvYXV0b2NvbXBsZXRlLWFkYXB0ZXInO1xyXG5pbXBvcnQgQ29kZUFjdGlvbkFkYXB0ZXIgZnJvbSAnLi9hZGFwdGVycy9jb2RlLWFjdGlvbi1hZGFwdGVyJztcclxuaW1wb3J0IENvZGVGb3JtYXRBZGFwdGVyIGZyb20gJy4vYWRhcHRlcnMvY29kZS1mb3JtYXQtYWRhcHRlcic7XHJcbmltcG9ydCBDb2RlSGlnaGxpZ2h0QWRhcHRlciBmcm9tICcuL2FkYXB0ZXJzL2NvZGUtaGlnaGxpZ2h0LWFkYXB0ZXInO1xyXG5pbXBvcnQgRGF0YXRpcEFkYXB0ZXIgZnJvbSAnLi9hZGFwdGVycy9kYXRhdGlwLWFkYXB0ZXInO1xyXG5pbXBvcnQgRGVmaW5pdGlvbkFkYXB0ZXIgZnJvbSAnLi9hZGFwdGVycy9kZWZpbml0aW9uLWFkYXB0ZXInO1xyXG5pbXBvcnQgRG9jdW1lbnRTeW5jQWRhcHRlciBmcm9tICcuL2FkYXB0ZXJzL2RvY3VtZW50LXN5bmMtYWRhcHRlcic7XHJcbmltcG9ydCBGaW5kUmVmZXJlbmNlc0FkYXB0ZXIgZnJvbSAnLi9hZGFwdGVycy9maW5kLXJlZmVyZW5jZXMtYWRhcHRlcic7XHJcbmltcG9ydCBMaW50ZXJQdXNoVjJBZGFwdGVyIGZyb20gJy4vYWRhcHRlcnMvbGludGVyLXB1c2gtdjItYWRhcHRlcic7XHJcbmltcG9ydCBMb2dnaW5nQ29uc29sZUFkYXB0ZXIgZnJvbSAnLi9hZGFwdGVycy9sb2dnaW5nLWNvbnNvbGUtYWRhcHRlcic7XHJcbmltcG9ydCBOb3RpZmljYXRpb25zQWRhcHRlciBmcm9tICcuL2FkYXB0ZXJzL25vdGlmaWNhdGlvbnMtYWRhcHRlcic7XHJcbmltcG9ydCBPdXRsaW5lVmlld0FkYXB0ZXIgZnJvbSAnLi9hZGFwdGVycy9vdXRsaW5lLXZpZXctYWRhcHRlcic7XHJcbmltcG9ydCBTaWduYXR1cmVIZWxwQWRhcHRlciBmcm9tICcuL2FkYXB0ZXJzL3NpZ25hdHVyZS1oZWxwLWFkYXB0ZXInO1xyXG5pbXBvcnQgKiBhcyBVdGlscyBmcm9tICcuL3V0aWxzJztcclxuaW1wb3J0IHsgU29ja2V0IH0gZnJvbSAnbmV0JztcclxuaW1wb3J0IHsgTGFuZ3VhZ2VDbGllbnRDb25uZWN0aW9uIH0gZnJvbSAnLi9sYW5ndWFnZWNsaWVudCc7XHJcbmltcG9ydCB7XHJcbiAgQ29uc29sZUxvZ2dlcixcclxuICBGaWx0ZXJlZExvZ2dlcixcclxuICBMb2dnZXIsXHJcbn0gZnJvbSAnLi9sb2dnZXInO1xyXG5pbXBvcnQge1xyXG4gIExhbmd1YWdlU2VydmVyUHJvY2VzcyxcclxuICBTZXJ2ZXJNYW5hZ2VyLFxyXG4gIEFjdGl2ZVNlcnZlcixcclxufSBmcm9tICcuL3NlcnZlci1tYW5hZ2VyLmpzJztcclxuaW1wb3J0IHtcclxuICBEaXNwb3NhYmxlLFxyXG4gIENvbXBvc2l0ZURpc3Bvc2FibGUsXHJcbiAgUG9pbnQsXHJcbiAgUmFuZ2UsXHJcbiAgVGV4dEVkaXRvcixcclxufSBmcm9tICdhdG9tJztcclxuaW1wb3J0ICogYXMgYWMgZnJvbSAnYXRvbS9hdXRvY29tcGxldGUtcGx1cyc7XHJcblxyXG5leHBvcnQgeyBBY3RpdmVTZXJ2ZXIsIExhbmd1YWdlQ2xpZW50Q29ubmVjdGlvbiwgTGFuZ3VhZ2VTZXJ2ZXJQcm9jZXNzIH07XHJcbmV4cG9ydCB0eXBlIENvbm5lY3Rpb25UeXBlID0gJ3N0ZGlvJyB8ICdzb2NrZXQnIHwgJ2lwYyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFNlcnZlckFkYXB0ZXJzIHtcclxuICBsaW50ZXJQdXNoVjI6IExpbnRlclB1c2hWMkFkYXB0ZXI7XHJcbiAgbG9nZ2luZ0NvbnNvbGU6IExvZ2dpbmdDb25zb2xlQWRhcHRlcjtcclxuICBzaWduYXR1cmVIZWxwQWRhcHRlcj86IFNpZ25hdHVyZUhlbHBBZGFwdGVyO1xyXG59XHJcblxyXG4vLyBQdWJsaWM6IEF1dG9MYW5ndWFnZUNsaWVudCBwcm92aWRlcyBhIHNpbXBsZSB3YXkgdG8gaGF2ZSBhbGwgdGhlIHN1cHBvcnRlZFxyXG4vLyBBdG9tLUlERSBzZXJ2aWNlcyB3aXJlZCB1cCBlbnRpcmVseSBmb3IgeW91IGJ5IGp1c3Qgc3ViY2xhc3NpbmcgaXQgYW5kXHJcbi8vIGltcGxlbWVudGluZyBzdGFydFNlcnZlclByb2Nlc3MvZ2V0R3JhbW1hclNjb3Blcy9nZXRMYW5ndWFnZU5hbWUgYW5kXHJcbi8vIGdldFNlcnZlck5hbWUuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEF1dG9MYW5ndWFnZUNsaWVudCB7XHJcbiAgcHJpdmF0ZSBfZGlzcG9zYWJsZSE6IENvbXBvc2l0ZURpc3Bvc2FibGU7XHJcbiAgcHJpdmF0ZSBfc2VydmVyTWFuYWdlciE6IFNlcnZlck1hbmFnZXI7XHJcbiAgcHJpdmF0ZSBfY29uc29sZURlbGVnYXRlPzogYXRvbUlkZS5Db25zb2xlU2VydmljZTtcclxuICBwcml2YXRlIF9saW50ZXJEZWxlZ2F0ZT86IGxpbnRlci5JbmRpZURlbGVnYXRlO1xyXG4gIHByaXZhdGUgX3NpZ25hdHVyZUhlbHBSZWdpc3RyeT86IGF0b21JZGUuU2lnbmF0dXJlSGVscFJlZ2lzdHJ5O1xyXG4gIHByaXZhdGUgX2xhc3RBdXRvY29tcGxldGVSZXF1ZXN0PzogYWMuU3VnZ2VzdGlvbnNSZXF1ZXN0ZWRFdmVudDtcclxuICBwcml2YXRlIF9pc0RlYWN0aXZhdGluZzogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIHByaXZhdGUgX3NlcnZlckFkYXB0ZXJzID0gbmV3IFdlYWtNYXA8QWN0aXZlU2VydmVyLCBTZXJ2ZXJBZGFwdGVycz4oKTtcclxuXHJcbiAgLy8gQXZhaWxhYmxlIGlmIGNvbnN1bWVCdXN5U2lnbmFsIGlzIHNldHVwXHJcbiAgcHJvdGVjdGVkIGJ1c3lTaWduYWxTZXJ2aWNlPzogYXRvbUlkZS5CdXN5U2lnbmFsU2VydmljZTtcclxuXHJcbiAgcHJvdGVjdGVkIHByb2Nlc3NTdGRFcnI6IHN0cmluZyA9ICcnO1xyXG4gIHByb3RlY3RlZCBsb2dnZXIhOiBMb2dnZXI7XHJcbiAgcHJvdGVjdGVkIG5hbWUhOiBzdHJpbmc7XHJcbiAgcHJvdGVjdGVkIHNvY2tldCE6IFNvY2tldDtcclxuXHJcbiAgLy8gU2hhcmVkIGFkYXB0ZXJzIHRoYXQgY2FuIHRha2UgdGhlIFJQQyBjb25uZWN0aW9uIGFzIHJlcXVpcmVkXHJcbiAgcHJvdGVjdGVkIGF1dG9Db21wbGV0ZT86IEF1dG9jb21wbGV0ZUFkYXB0ZXI7XHJcbiAgcHJvdGVjdGVkIGRhdGF0aXA/OiBEYXRhdGlwQWRhcHRlcjtcclxuICBwcm90ZWN0ZWQgZGVmaW5pdGlvbnM/OiBEZWZpbml0aW9uQWRhcHRlcjtcclxuICBwcm90ZWN0ZWQgZmluZFJlZmVyZW5jZXM/OiBGaW5kUmVmZXJlbmNlc0FkYXB0ZXI7XHJcbiAgcHJvdGVjdGVkIG91dGxpbmVWaWV3PzogT3V0bGluZVZpZXdBZGFwdGVyO1xyXG5cclxuICAvLyBZb3UgbXVzdCBpbXBsZW1lbnQgdGhlc2Ugc28gd2Uga25vdyBob3cgdG8gZGVhbCB3aXRoIHlvdXIgbGFuZ3VhZ2UgYW5kIHNlcnZlclxyXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgLy8gUmV0dXJuIGFuIGFycmF5IG9mIHRoZSBncmFtbWFyIHNjb3BlcyB5b3UgaGFuZGxlLCBlLmcuIFsgJ3NvdXJjZS5qcycgXVxyXG4gIHByb3RlY3RlZCBnZXRHcmFtbWFyU2NvcGVzKCk6IHN0cmluZ1tdIHtcclxuICAgIHRocm93IEVycm9yKCdNdXN0IGltcGxlbWVudCBnZXRHcmFtbWFyU2NvcGVzIHdoZW4gZXh0ZW5kaW5nIEF1dG9MYW5ndWFnZUNsaWVudCcpO1xyXG4gIH1cclxuXHJcbiAgLy8gUmV0dXJuIHRoZSBuYW1lIG9mIHRoZSBsYW5ndWFnZSB5b3Ugc3VwcG9ydCwgZS5nLiAnSmF2YVNjcmlwdCdcclxuICBwcm90ZWN0ZWQgZ2V0TGFuZ3VhZ2VOYW1lKCk6IHN0cmluZyB7XHJcbiAgICB0aHJvdyBFcnJvcignTXVzdCBpbXBsZW1lbnQgZ2V0TGFuZ3VhZ2VOYW1lIHdoZW4gZXh0ZW5kaW5nIEF1dG9MYW5ndWFnZUNsaWVudCcpO1xyXG4gIH1cclxuXHJcbiAgLy8gUmV0dXJuIHRoZSBuYW1lIG9mIHlvdXIgc2VydmVyLCBlLmcuICdFY2xpcHNlIEpEVCdcclxuICBwcm90ZWN0ZWQgZ2V0U2VydmVyTmFtZSgpOiBzdHJpbmcge1xyXG4gICAgdGhyb3cgRXJyb3IoJ011c3QgaW1wbGVtZW50IGdldFNlcnZlck5hbWUgd2hlbiBleHRlbmRpbmcgQXV0b0xhbmd1YWdlQ2xpZW50Jyk7XHJcbiAgfVxyXG5cclxuICAvLyBTdGFydCB5b3VyIHNlcnZlciBwcm9jZXNzXHJcbiAgcHJvdGVjdGVkIHN0YXJ0U2VydmVyUHJvY2Vzcyhwcm9qZWN0UGF0aDogc3RyaW5nKTogTGFuZ3VhZ2VTZXJ2ZXJQcm9jZXNzIHwgUHJvbWlzZTxMYW5ndWFnZVNlcnZlclByb2Nlc3M+IHtcclxuICAgIHRocm93IEVycm9yKCdNdXN0IG92ZXJyaWRlIHN0YXJ0U2VydmVyUHJvY2VzcyB0byBzdGFydCBsYW5ndWFnZSBzZXJ2ZXIgcHJvY2VzcyB3aGVuIGV4dGVuZGluZyBBdXRvTGFuZ3VhZ2VDbGllbnQnKTtcclxuICB9XHJcblxyXG4gIC8vIFlvdSBtaWdodCB3YW50IHRvIG92ZXJyaWRlIHRoZXNlIGZvciBkaWZmZXJlbnQgYmVoYXZpb3JcclxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgLy8gRGV0ZXJtaW5lIHdoZXRoZXIgd2Ugc2hvdWxkIHN0YXJ0IGEgc2VydmVyIGZvciBhIGdpdmVuIGVkaXRvciBpZiB3ZSBkb24ndCBoYXZlIG9uZSB5ZXRcclxuICBwcm90ZWN0ZWQgc2hvdWxkU3RhcnRGb3JFZGl0b3IoZWRpdG9yOiBUZXh0RWRpdG9yKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5nZXRHcmFtbWFyU2NvcGVzKCkuaW5jbHVkZXMoZWRpdG9yLmdldEdyYW1tYXIoKS5zY29wZU5hbWUpO1xyXG4gIH1cclxuXHJcbiAgLy8gUmV0dXJuIHRoZSBwYXJhbWV0ZXJzIHVzZWQgdG8gaW5pdGlhbGl6ZSBhIGNsaWVudCAtIHlvdSBtYXkgd2FudCB0byBleHRlbmQgY2FwYWJpbGl0aWVzXHJcbiAgcHJvdGVjdGVkIGdldEluaXRpYWxpemVQYXJhbXMocHJvamVjdFBhdGg6IHN0cmluZywgcHJvY2VzczogTGFuZ3VhZ2VTZXJ2ZXJQcm9jZXNzKTogbHMuSW5pdGlhbGl6ZVBhcmFtcyB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwcm9jZXNzSWQ6IHByb2Nlc3MucGlkLFxyXG4gICAgICByb290UGF0aDogcHJvamVjdFBhdGgsXHJcbiAgICAgIHJvb3RVcmk6IENvbnZlcnQucGF0aFRvVXJpKHByb2plY3RQYXRoKSxcclxuICAgICAgd29ya3NwYWNlRm9sZGVyczogW10sXHJcbiAgICAgIGNhcGFiaWxpdGllczoge1xyXG4gICAgICAgIHdvcmtzcGFjZToge1xyXG4gICAgICAgICAgYXBwbHlFZGl0OiB0cnVlLFxyXG4gICAgICAgICAgY29uZmlndXJhdGlvbjogZmFsc2UsXHJcbiAgICAgICAgICB3b3Jrc3BhY2VFZGl0OiB7XHJcbiAgICAgICAgICAgIGRvY3VtZW50Q2hhbmdlczogdHJ1ZSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB3b3Jrc3BhY2VGb2xkZXJzOiBmYWxzZSxcclxuICAgICAgICAgIGRpZENoYW5nZUNvbmZpZ3VyYXRpb246IHtcclxuICAgICAgICAgICAgZHluYW1pY1JlZ2lzdHJhdGlvbjogZmFsc2UsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgZGlkQ2hhbmdlV2F0Y2hlZEZpbGVzOiB7XHJcbiAgICAgICAgICAgIGR5bmFtaWNSZWdpc3RyYXRpb246IGZhbHNlLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHN5bWJvbDoge1xyXG4gICAgICAgICAgICBkeW5hbWljUmVnaXN0cmF0aW9uOiBmYWxzZSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBleGVjdXRlQ29tbWFuZDoge1xyXG4gICAgICAgICAgICBkeW5hbWljUmVnaXN0cmF0aW9uOiBmYWxzZSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgICB0ZXh0RG9jdW1lbnQ6IHtcclxuICAgICAgICAgIHN5bmNocm9uaXphdGlvbjoge1xyXG4gICAgICAgICAgICBkeW5hbWljUmVnaXN0cmF0aW9uOiBmYWxzZSxcclxuICAgICAgICAgICAgd2lsbFNhdmU6IHRydWUsXHJcbiAgICAgICAgICAgIHdpbGxTYXZlV2FpdFVudGlsOiB0cnVlLFxyXG4gICAgICAgICAgICBkaWRTYXZlOiB0cnVlLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGNvbXBsZXRpb246IHtcclxuICAgICAgICAgICAgZHluYW1pY1JlZ2lzdHJhdGlvbjogZmFsc2UsXHJcbiAgICAgICAgICAgIGNvbXBsZXRpb25JdGVtOiB7XHJcbiAgICAgICAgICAgICAgc25pcHBldFN1cHBvcnQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgY29tbWl0Q2hhcmFjdGVyc1N1cHBvcnQ6IGZhbHNlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBjb250ZXh0U3VwcG9ydDogdHJ1ZSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBob3Zlcjoge1xyXG4gICAgICAgICAgICBkeW5hbWljUmVnaXN0cmF0aW9uOiBmYWxzZSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBzaWduYXR1cmVIZWxwOiB7XHJcbiAgICAgICAgICAgIGR5bmFtaWNSZWdpc3RyYXRpb246IGZhbHNlLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHJlZmVyZW5jZXM6IHtcclxuICAgICAgICAgICAgZHluYW1pY1JlZ2lzdHJhdGlvbjogZmFsc2UsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgZG9jdW1lbnRIaWdobGlnaHQ6IHtcclxuICAgICAgICAgICAgZHluYW1pY1JlZ2lzdHJhdGlvbjogZmFsc2UsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgZG9jdW1lbnRTeW1ib2w6IHtcclxuICAgICAgICAgICAgZHluYW1pY1JlZ2lzdHJhdGlvbjogZmFsc2UsXHJcbiAgICAgICAgICAgIGhpZXJhcmNoaWNhbERvY3VtZW50U3ltYm9sU3VwcG9ydDogdHJ1ZSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBmb3JtYXR0aW5nOiB7XHJcbiAgICAgICAgICAgIGR5bmFtaWNSZWdpc3RyYXRpb246IGZhbHNlLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHJhbmdlRm9ybWF0dGluZzoge1xyXG4gICAgICAgICAgICBkeW5hbWljUmVnaXN0cmF0aW9uOiBmYWxzZSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBvblR5cGVGb3JtYXR0aW5nOiB7XHJcbiAgICAgICAgICAgIGR5bmFtaWNSZWdpc3RyYXRpb246IGZhbHNlLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGRlZmluaXRpb246IHtcclxuICAgICAgICAgICAgZHluYW1pY1JlZ2lzdHJhdGlvbjogZmFsc2UsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgY29kZUFjdGlvbjoge1xyXG4gICAgICAgICAgICBkeW5hbWljUmVnaXN0cmF0aW9uOiBmYWxzZSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBjb2RlTGVuczoge1xyXG4gICAgICAgICAgICBkeW5hbWljUmVnaXN0cmF0aW9uOiBmYWxzZSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBkb2N1bWVudExpbms6IHtcclxuICAgICAgICAgICAgZHluYW1pY1JlZ2lzdHJhdGlvbjogZmFsc2UsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgcmVuYW1lOiB7XHJcbiAgICAgICAgICAgIGR5bmFtaWNSZWdpc3RyYXRpb246IGZhbHNlLFxyXG4gICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAvLyBXZSBkbyBub3Qgc3VwcG9ydCB0aGVzZSBmZWF0dXJlcyB5ZXQuXHJcbiAgICAgICAgICAvLyBOZWVkIHRvIHNldCB0byB1bmRlZmluZWQgdG8gYXBwZWFzZSBUeXBlU2NyaXB0IHdlYWsgdHlwZSBkZXRlY3Rpb24uXHJcbiAgICAgICAgICBpbXBsZW1lbnRhdGlvbjogdW5kZWZpbmVkLFxyXG4gICAgICAgICAgdHlwZURlZmluaXRpb246IHVuZGVmaW5lZCxcclxuICAgICAgICAgIGNvbG9yUHJvdmlkZXI6IHVuZGVmaW5lZCxcclxuICAgICAgICAgIGZvbGRpbmdSYW5nZTogdW5kZWZpbmVkLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXhwZXJpbWVudGFsOiB7fSxcclxuICAgICAgfSxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvLyBFYXJseSB3aXJlLXVwIG9mIGxpc3RlbmVycyBiZWZvcmUgaW5pdGlhbGl6ZSBtZXRob2QgaXMgc2VudFxyXG4gIHByb3RlY3RlZCBwcmVJbml0aWFsaXphdGlvbihjb25uZWN0aW9uOiBMYW5ndWFnZUNsaWVudENvbm5lY3Rpb24pOiB2b2lkIHt9XHJcblxyXG4gIC8vIExhdGUgd2lyZS11cCBvZiBsaXN0ZW5lcnMgYWZ0ZXIgaW5pdGlhbGl6ZSBtZXRob2QgaGFzIGJlZW4gc2VudFxyXG4gIHByb3RlY3RlZCBwb3N0SW5pdGlhbGl6YXRpb24oc2VydmVyOiBBY3RpdmVTZXJ2ZXIpOiB2b2lkIHt9XHJcblxyXG4gIC8vIERldGVybWluZSB3aGV0aGVyIHRvIHVzZSBpcGMsIHN0ZGlvIG9yIHNvY2tldCB0byBjb25uZWN0IHRvIHRoZSBzZXJ2ZXJcclxuICBwcm90ZWN0ZWQgZ2V0Q29ubmVjdGlvblR5cGUoKTogQ29ubmVjdGlvblR5cGUge1xyXG4gICAgcmV0dXJuIHRoaXMuc29ja2V0ICE9IG51bGwgPyAnc29ja2V0JyA6ICdzdGRpbyc7XHJcbiAgfVxyXG5cclxuICAvLyBSZXR1cm4gdGhlIG5hbWUgb2YgeW91ciByb290IGNvbmZpZ3VyYXRpb24ga2V5XHJcbiAgcHJvdGVjdGVkIGdldFJvb3RDb25maWd1cmF0aW9uS2V5KCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gJyc7XHJcbiAgfVxyXG5cclxuICAvLyBPcHRpb25hbGx5IHRyYW5zZm9ybSB0aGUgY29uZmlndXJhdGlvbiBvYmplY3QgYmVmb3JlIGl0IGlzIHNlbnQgdG8gdGhlIHNlcnZlclxyXG4gIHByb3RlY3RlZCBtYXBDb25maWd1cmF0aW9uT2JqZWN0KGNvbmZpZ3VyYXRpb246IGFueSk6IGFueSB7XHJcbiAgICByZXR1cm4gY29uZmlndXJhdGlvbjtcclxuICB9XHJcblxyXG4gIC8vIEhlbHBlciBtZXRob2RzIHRoYXQgYXJlIHVzZWZ1bCBmb3IgaW1wbGVtZW50b3JzXHJcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gIC8vIEdldHMgYSBMYW5ndWFnZUNsaWVudENvbm5lY3Rpb24gZm9yIGEgZ2l2ZW4gVGV4dEVkaXRvclxyXG4gIHByb3RlY3RlZCBhc3luYyBnZXRDb25uZWN0aW9uRm9yRWRpdG9yKGVkaXRvcjogVGV4dEVkaXRvcik6IFByb21pc2U8TGFuZ3VhZ2VDbGllbnRDb25uZWN0aW9uIHwgbnVsbD4ge1xyXG4gICAgY29uc3Qgc2VydmVyID0gYXdhaXQgdGhpcy5fc2VydmVyTWFuYWdlci5nZXRTZXJ2ZXIoZWRpdG9yKTtcclxuICAgIHJldHVybiBzZXJ2ZXIgPyBzZXJ2ZXIuY29ubmVjdGlvbiA6IG51bGw7XHJcbiAgfVxyXG5cclxuICAvLyBSZXN0YXJ0IGFsbCBhY3RpdmUgbGFuZ3VhZ2Ugc2VydmVycyBmb3IgdGhpcyBsYW5ndWFnZSBjbGllbnQgaW4gdGhlIHdvcmtzcGFjZVxyXG4gIHByb3RlY3RlZCBhc3luYyByZXN0YXJ0QWxsU2VydmVycygpIHtcclxuICAgIGF3YWl0IHRoaXMuX3NlcnZlck1hbmFnZXIucmVzdGFydEFsbFNlcnZlcnMoKTtcclxuICB9XHJcblxyXG4gIC8vIERlZmF1bHQgaW1wbGVtZW50YXRpb24gb2YgdGhlIHJlc3Qgb2YgdGhlIEF1dG9MYW5ndWFnZUNsaWVudFxyXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuICAvLyBBY3RpdmF0ZSBkb2VzIHZlcnkgbGl0dGxlIGZvciBwZXJmIHJlYXNvbnMgLSBob29rcyBpbiB2aWEgU2VydmVyTWFuYWdlciBmb3IgbGF0ZXIgJ2FjdGl2YXRpb24nXHJcbiAgcHVibGljIGFjdGl2YXRlKCk6IHZvaWQge1xyXG4gICAgdGhpcy5fZGlzcG9zYWJsZSA9IG5ldyBDb21wb3NpdGVEaXNwb3NhYmxlKCk7XHJcbiAgICB0aGlzLm5hbWUgPSBgJHt0aGlzLmdldExhbmd1YWdlTmFtZSgpfSAoJHt0aGlzLmdldFNlcnZlck5hbWUoKX0pYDtcclxuICAgIHRoaXMubG9nZ2VyID0gdGhpcy5nZXRMb2dnZXIoKTtcclxuICAgIHRoaXMuX3NlcnZlck1hbmFnZXIgPSBuZXcgU2VydmVyTWFuYWdlcihcclxuICAgICAgKHApID0+IHRoaXMuc3RhcnRTZXJ2ZXIocCksXHJcbiAgICAgIHRoaXMubG9nZ2VyLFxyXG4gICAgICAoZSkgPT4gdGhpcy5zaG91bGRTdGFydEZvckVkaXRvcihlKSxcclxuICAgICAgKGZpbGVwYXRoKSA9PiB0aGlzLmZpbHRlckNoYW5nZVdhdGNoZWRGaWxlcyhmaWxlcGF0aCksXHJcbiAgICAgIHRoaXMucmVwb3J0QnVzeVdoaWxlLFxyXG4gICAgICB0aGlzLmdldFNlcnZlck5hbWUoKSxcclxuICAgICk7XHJcbiAgICB0aGlzLl9zZXJ2ZXJNYW5hZ2VyLnN0YXJ0TGlzdGVuaW5nKCk7XHJcbiAgICBwcm9jZXNzLm9uKCdleGl0JywgKCkgPT4gdGhpcy5leGl0Q2xlYW51cC5iaW5kKHRoaXMpKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZXhpdENsZWFudXAoKTogdm9pZCB7XHJcbiAgICB0aGlzLl9zZXJ2ZXJNYW5hZ2VyLnRlcm1pbmF0ZSgpO1xyXG4gIH1cclxuXHJcbiAgLy8gRGVhY3RpdmF0ZSBkaXNwb3NlcyB0aGUgcmVzb3VyY2VzIHdlJ3JlIHVzaW5nXHJcbiAgcHVibGljIGFzeW5jIGRlYWN0aXZhdGUoKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHRoaXMuX2lzRGVhY3RpdmF0aW5nID0gdHJ1ZTtcclxuICAgIHRoaXMuX2Rpc3Bvc2FibGUuZGlzcG9zZSgpO1xyXG4gICAgdGhpcy5fc2VydmVyTWFuYWdlci5zdG9wTGlzdGVuaW5nKCk7XHJcbiAgICBhd2FpdCB0aGlzLl9zZXJ2ZXJNYW5hZ2VyLnN0b3BBbGxTZXJ2ZXJzKCk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgc3Bhd25DaGlsZE5vZGUoYXJnczogc3RyaW5nW10sIG9wdGlvbnM6IGNwLlNwYXduT3B0aW9ucyA9IHt9KTogY3AuQ2hpbGRQcm9jZXNzIHtcclxuICAgIHRoaXMubG9nZ2VyLmRlYnVnKGBzdGFydGluZyBjaGlsZCBOb2RlIFwiJHthcmdzLmpvaW4oJyAnKX1cImApO1xyXG4gICAgb3B0aW9ucy5lbnYgPSBvcHRpb25zLmVudiB8fCBPYmplY3QuY3JlYXRlKHByb2Nlc3MuZW52KTtcclxuICAgIGlmIChvcHRpb25zLmVudikge1xyXG4gICAgICBvcHRpb25zLmVudi5FTEVDVFJPTl9SVU5fQVNfTk9ERSA9ICcxJztcclxuICAgICAgb3B0aW9ucy5lbnYuRUxFQ1RST05fTk9fQVRUQUNIX0NPTlNPTEUgPSAnMSc7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY3Auc3Bhd24ocHJvY2Vzcy5leGVjUGF0aCwgYXJncywgb3B0aW9ucyk7XHJcbiAgfVxyXG5cclxuICAvLyBMU1AgbG9nZ2luZyBpcyBvbmx5IHNldCBmb3Igd2FybmluZ3MgJiBlcnJvcnMgYnkgZGVmYXVsdCB1bmxlc3MgeW91IHR1cm4gb24gdGhlIGNvcmUuZGVidWdMU1Agc2V0dGluZ1xyXG4gIHByb3RlY3RlZCBnZXRMb2dnZXIoKTogTG9nZ2VyIHtcclxuICAgIGNvbnN0IGZpbHRlciA9IGF0b20uY29uZmlnLmdldCgnY29yZS5kZWJ1Z0xTUCcpXHJcbiAgICAgID8gRmlsdGVyZWRMb2dnZXIuRGV2ZWxvcGVyTGV2ZWxGaWx0ZXJcclxuICAgICAgOiBGaWx0ZXJlZExvZ2dlci5Vc2VyTGV2ZWxGaWx0ZXI7XHJcbiAgICByZXR1cm4gbmV3IEZpbHRlcmVkTG9nZ2VyKG5ldyBDb25zb2xlTG9nZ2VyKHRoaXMubmFtZSksIGZpbHRlcik7XHJcbiAgfVxyXG5cclxuICAvLyBTdGFydHMgdGhlIHNlcnZlciBieSBzdGFydGluZyB0aGUgcHJvY2VzcywgdGhlbiBpbml0aWFsaXppbmcgdGhlIGxhbmd1YWdlIHNlcnZlciBhbmQgc3RhcnRpbmcgYWRhcHRlcnNcclxuICBwcml2YXRlIGFzeW5jIHN0YXJ0U2VydmVyKHByb2plY3RQYXRoOiBzdHJpbmcpOiBQcm9taXNlPEFjdGl2ZVNlcnZlcj4ge1xyXG4gICAgY29uc3QgcHJvY2VzcyA9IGF3YWl0IHRoaXMucmVwb3J0QnVzeVdoaWxlKFxyXG4gICAgICBgU3RhcnRpbmcgJHt0aGlzLmdldFNlcnZlck5hbWUoKX0gZm9yICR7cGF0aC5iYXNlbmFtZShwcm9qZWN0UGF0aCl9YCxcclxuICAgICAgYXN5bmMgKCkgPT4gdGhpcy5zdGFydFNlcnZlclByb2Nlc3MocHJvamVjdFBhdGgpLFxyXG4gICAgKTtcclxuICAgIHRoaXMuY2FwdHVyZVNlcnZlckVycm9ycyhwcm9jZXNzLCBwcm9qZWN0UGF0aCk7XHJcbiAgICBjb25zdCBjb25uZWN0aW9uID0gbmV3IExhbmd1YWdlQ2xpZW50Q29ubmVjdGlvbih0aGlzLmNyZWF0ZVJwY0Nvbm5lY3Rpb24ocHJvY2VzcyksIHRoaXMubG9nZ2VyKTtcclxuICAgIHRoaXMucHJlSW5pdGlhbGl6YXRpb24oY29ubmVjdGlvbik7XHJcbiAgICBjb25zdCBpbml0aWFsaXplUGFyYW1zID0gdGhpcy5nZXRJbml0aWFsaXplUGFyYW1zKHByb2plY3RQYXRoLCBwcm9jZXNzKTtcclxuICAgIGNvbnN0IGluaXRpYWxpemF0aW9uID0gY29ubmVjdGlvbi5pbml0aWFsaXplKGluaXRpYWxpemVQYXJhbXMpO1xyXG4gICAgdGhpcy5yZXBvcnRCdXN5V2hpbGUoXHJcbiAgICAgIGAke3RoaXMuZ2V0U2VydmVyTmFtZSgpfSBpbml0aWFsaXppbmcgZm9yICR7cGF0aC5iYXNlbmFtZShwcm9qZWN0UGF0aCl9YCxcclxuICAgICAgKCkgPT4gaW5pdGlhbGl6YXRpb24sXHJcbiAgICApO1xyXG4gICAgY29uc3QgaW5pdGlhbGl6ZVJlc3BvbnNlID0gYXdhaXQgaW5pdGlhbGl6YXRpb247XHJcbiAgICBjb25zdCBuZXdTZXJ2ZXIgPSB7XHJcbiAgICAgIHByb2plY3RQYXRoLFxyXG4gICAgICBwcm9jZXNzLFxyXG4gICAgICBjb25uZWN0aW9uLFxyXG4gICAgICBjYXBhYmlsaXRpZXM6IGluaXRpYWxpemVSZXNwb25zZS5jYXBhYmlsaXRpZXMsXHJcbiAgICAgIGRpc3Bvc2FibGU6IG5ldyBDb21wb3NpdGVEaXNwb3NhYmxlKCksXHJcbiAgICB9O1xyXG4gICAgdGhpcy5wb3N0SW5pdGlhbGl6YXRpb24obmV3U2VydmVyKTtcclxuICAgIGNvbm5lY3Rpb24uaW5pdGlhbGl6ZWQoKTtcclxuICAgIGNvbm5lY3Rpb24ub24oJ2Nsb3NlJywgKCkgPT4ge1xyXG4gICAgICBpZiAoIXRoaXMuX2lzRGVhY3RpdmF0aW5nKSB7XHJcbiAgICAgICAgdGhpcy5fc2VydmVyTWFuYWdlci5zdG9wU2VydmVyKG5ld1NlcnZlcik7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9zZXJ2ZXJNYW5hZ2VyLmhhc1NlcnZlclJlYWNoZWRSZXN0YXJ0TGltaXQobmV3U2VydmVyKSkge1xyXG4gICAgICAgICAgdGhpcy5sb2dnZXIuZGVidWcoYFJlc3RhcnRpbmcgbGFuZ3VhZ2Ugc2VydmVyIGZvciBwcm9qZWN0ICcke25ld1NlcnZlci5wcm9qZWN0UGF0aH0nYCk7XHJcbiAgICAgICAgICB0aGlzLl9zZXJ2ZXJNYW5hZ2VyLnN0YXJ0U2VydmVyKHByb2plY3RQYXRoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5sb2dnZXIud2FybihgTGFuZ3VhZ2Ugc2VydmVyIGhhcyBleGNlZWRlZCBhdXRvLXJlc3RhcnQgbGltaXQgZm9yIHByb2plY3QgJyR7bmV3U2VydmVyLnByb2plY3RQYXRofSdgKTtcclxuICAgICAgICAgIGF0b20ubm90aWZpY2F0aW9ucy5hZGRFcnJvcihcclxuICAgICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1heC1saW5lLWxlbmd0aFxyXG4gICAgICAgICAgICBgVGhlICR7dGhpcy5uYW1lfSBsYW5ndWFnZSBzZXJ2ZXIgaGFzIGV4aXRlZCBhbmQgZXhjZWVkZWQgdGhlIHJlc3RhcnQgbGltaXQgZm9yIHByb2plY3QgJyR7bmV3U2VydmVyLnByb2plY3RQYXRofSdgKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IGNvbmZpZ3VyYXRpb25LZXkgPSB0aGlzLmdldFJvb3RDb25maWd1cmF0aW9uS2V5KCk7XHJcbiAgICBpZiAoY29uZmlndXJhdGlvbktleSkge1xyXG4gICAgICBuZXdTZXJ2ZXIuZGlzcG9zYWJsZS5hZGQoXHJcbiAgICAgICAgYXRvbS5jb25maWcub2JzZXJ2ZShjb25maWd1cmF0aW9uS2V5LCAoY29uZmlnKSA9PiB7XHJcbiAgICAgICAgICBjb25zdCBtYXBwZWRDb25maWcgPSB0aGlzLm1hcENvbmZpZ3VyYXRpb25PYmplY3QoY29uZmlnIHx8IHt9KTtcclxuICAgICAgICAgIGlmIChtYXBwZWRDb25maWcpIHtcclxuICAgICAgICAgICAgY29ubmVjdGlvbi5kaWRDaGFuZ2VDb25maWd1cmF0aW9uKHtcclxuICAgICAgICAgICAgICBzZXR0aW5nczogbWFwcGVkQ29uZmlnLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KSk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5zdGFydEV4Y2x1c2l2ZUFkYXB0ZXJzKG5ld1NlcnZlcik7XHJcbiAgICByZXR1cm4gbmV3U2VydmVyO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBjYXB0dXJlU2VydmVyRXJyb3JzKGNoaWxkUHJvY2VzczogTGFuZ3VhZ2VTZXJ2ZXJQcm9jZXNzLCBwcm9qZWN0UGF0aDogc3RyaW5nKTogdm9pZCB7XHJcbiAgICBjaGlsZFByb2Nlc3Mub24oJ2Vycm9yJywgKGVycikgPT4gdGhpcy5oYW5kbGVTcGF3bkZhaWx1cmUoZXJyKSk7XHJcbiAgICBjaGlsZFByb2Nlc3Mub24oJ2V4aXQnLCAoY29kZSwgc2lnbmFsKSA9PiB0aGlzLmxvZ2dlci5kZWJ1ZyhgZXhpdDogY29kZSAke2NvZGV9IHNpZ25hbCAke3NpZ25hbH1gKSk7XHJcbiAgICBjaGlsZFByb2Nlc3Muc3RkZXJyLnNldEVuY29kaW5nKCd1dGY4Jyk7XHJcbiAgICBjaGlsZFByb2Nlc3Muc3RkZXJyLm9uKCdkYXRhJywgKGNodW5rOiBCdWZmZXIpID0+IHtcclxuICAgICAgY29uc3QgZXJyb3JTdHJpbmcgPSBjaHVuay50b1N0cmluZygpO1xyXG4gICAgICB0aGlzLmhhbmRsZVNlcnZlclN0ZGVycihlcnJvclN0cmluZywgcHJvamVjdFBhdGgpO1xyXG4gICAgICAvLyBLZWVwIHRoZSBsYXN0IDUgbGluZXMgZm9yIHBhY2thZ2VzIHRvIHVzZSBpbiBtZXNzYWdlc1xyXG4gICAgICB0aGlzLnByb2Nlc3NTdGRFcnIgPSAodGhpcy5wcm9jZXNzU3RkRXJyICsgZXJyb3JTdHJpbmcpXHJcbiAgICAgICAgLnNwbGl0KCdcXG4nKVxyXG4gICAgICAgIC5zbGljZSgtNSlcclxuICAgICAgICAuam9pbignXFxuJyk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgaGFuZGxlU3Bhd25GYWlsdXJlKGVycjogYW55KTogdm9pZCB7XHJcbiAgICBhdG9tLm5vdGlmaWNhdGlvbnMuYWRkRXJyb3IoXHJcbiAgICAgIGAke3RoaXMuZ2V0U2VydmVyTmFtZSgpfSBsYW5ndWFnZSBzZXJ2ZXIgZm9yICR7dGhpcy5nZXRMYW5ndWFnZU5hbWUoKX0gdW5hYmxlIHRvIHN0YXJ0YCxcclxuICAgICAge1xyXG4gICAgICAgIGRpc21pc3NhYmxlOiB0cnVlLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiBlcnIudG9TdHJpbmcoKSxcclxuICAgICAgfSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvLyBDcmVhdGVzIHRoZSBSUEMgY29ubmVjdGlvbiB3aGljaCBjYW4gYmUgaXBjLCBzb2NrZXQgb3Igc3RkaW9cclxuICBwcml2YXRlIGNyZWF0ZVJwY0Nvbm5lY3Rpb24ocHJvY2VzczogTGFuZ3VhZ2VTZXJ2ZXJQcm9jZXNzKTogcnBjLk1lc3NhZ2VDb25uZWN0aW9uIHtcclxuICAgIGxldCByZWFkZXI6IHJwYy5NZXNzYWdlUmVhZGVyO1xyXG4gICAgbGV0IHdyaXRlcjogcnBjLk1lc3NhZ2VXcml0ZXI7XHJcbiAgICBjb25zdCBjb25uZWN0aW9uVHlwZSA9IHRoaXMuZ2V0Q29ubmVjdGlvblR5cGUoKTtcclxuICAgIHN3aXRjaCAoY29ubmVjdGlvblR5cGUpIHtcclxuICAgICAgY2FzZSAnaXBjJzpcclxuICAgICAgICByZWFkZXIgPSBuZXcgcnBjLklQQ01lc3NhZ2VSZWFkZXIocHJvY2VzcyBhcyBjcC5DaGlsZFByb2Nlc3MpO1xyXG4gICAgICAgIHdyaXRlciA9IG5ldyBycGMuSVBDTWVzc2FnZVdyaXRlcihwcm9jZXNzIGFzIGNwLkNoaWxkUHJvY2Vzcyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ3NvY2tldCc6XHJcbiAgICAgICAgcmVhZGVyID0gbmV3IHJwYy5Tb2NrZXRNZXNzYWdlUmVhZGVyKHRoaXMuc29ja2V0KTtcclxuICAgICAgICB3cml0ZXIgPSBuZXcgcnBjLlNvY2tldE1lc3NhZ2VXcml0ZXIodGhpcy5zb2NrZXQpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdzdGRpbyc6XHJcbiAgICAgICAgcmVhZGVyID0gbmV3IHJwYy5TdHJlYW1NZXNzYWdlUmVhZGVyKHByb2Nlc3Muc3Rkb3V0KTtcclxuICAgICAgICB3cml0ZXIgPSBuZXcgcnBjLlN0cmVhbU1lc3NhZ2VXcml0ZXIocHJvY2Vzcy5zdGRpbik7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuIFV0aWxzLmFzc2VydFVucmVhY2hhYmxlKGNvbm5lY3Rpb25UeXBlKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcnBjLmNyZWF0ZU1lc3NhZ2VDb25uZWN0aW9uKHJlYWRlciwgd3JpdGVyLCB7XHJcbiAgICAgIGxvZzogKC4uLmFyZ3M6IGFueVtdKSA9PiB7fSxcclxuICAgICAgd2FybjogKC4uLmFyZ3M6IGFueVtdKSA9PiB7fSxcclxuICAgICAgaW5mbzogKC4uLmFyZ3M6IGFueVtdKSA9PiB7fSxcclxuICAgICAgZXJyb3I6ICguLi5hcmdzOiBhbnlbXSkgPT4ge1xyXG4gICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKGFyZ3MpO1xyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvLyBTdGFydCBhZGFwdGVycyB0aGF0IGFyZSBub3Qgc2hhcmVkIGJldHdlZW4gc2VydmVyc1xyXG4gIHByaXZhdGUgc3RhcnRFeGNsdXNpdmVBZGFwdGVycyhzZXJ2ZXI6IEFjdGl2ZVNlcnZlcik6IHZvaWQge1xyXG4gICAgQXBwbHlFZGl0QWRhcHRlci5hdHRhY2goc2VydmVyLmNvbm5lY3Rpb24pO1xyXG4gICAgTm90aWZpY2F0aW9uc0FkYXB0ZXIuYXR0YWNoKHNlcnZlci5jb25uZWN0aW9uLCB0aGlzLm5hbWUsIHNlcnZlci5wcm9qZWN0UGF0aCk7XHJcblxyXG4gICAgaWYgKERvY3VtZW50U3luY0FkYXB0ZXIuY2FuQWRhcHQoc2VydmVyLmNhcGFiaWxpdGllcykpIHtcclxuICAgICAgY29uc3QgZG9jU3luY0FkYXB0ZXIgPVxyXG4gICAgICAgIG5ldyBEb2N1bWVudFN5bmNBZGFwdGVyKFxyXG4gICAgICAgICAgc2VydmVyLmNvbm5lY3Rpb24sXHJcbiAgICAgICAgICAoZWRpdG9yKSA9PiB0aGlzLnNob3VsZFN5bmNGb3JFZGl0b3IoZWRpdG9yLCBzZXJ2ZXIucHJvamVjdFBhdGgpLFxyXG4gICAgICAgICAgc2VydmVyLmNhcGFiaWxpdGllcy50ZXh0RG9jdW1lbnRTeW5jLFxyXG4gICAgICAgICAgdGhpcy5yZXBvcnRCdXN5V2hpbGUsXHJcbiAgICAgICAgKTtcclxuICAgICAgc2VydmVyLmRpc3Bvc2FibGUuYWRkKGRvY1N5bmNBZGFwdGVyKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBsaW50ZXJQdXNoVjIgPSBuZXcgTGludGVyUHVzaFYyQWRhcHRlcihzZXJ2ZXIuY29ubmVjdGlvbik7XHJcbiAgICBpZiAodGhpcy5fbGludGVyRGVsZWdhdGUgIT0gbnVsbCkge1xyXG4gICAgICBsaW50ZXJQdXNoVjIuYXR0YWNoKHRoaXMuX2xpbnRlckRlbGVnYXRlKTtcclxuICAgIH1cclxuICAgIHNlcnZlci5kaXNwb3NhYmxlLmFkZChsaW50ZXJQdXNoVjIpO1xyXG5cclxuICAgIGNvbnN0IGxvZ2dpbmdDb25zb2xlID0gbmV3IExvZ2dpbmdDb25zb2xlQWRhcHRlcihzZXJ2ZXIuY29ubmVjdGlvbik7XHJcbiAgICBpZiAodGhpcy5fY29uc29sZURlbGVnYXRlICE9IG51bGwpIHtcclxuICAgICAgbG9nZ2luZ0NvbnNvbGUuYXR0YWNoKHRoaXMuX2NvbnNvbGVEZWxlZ2F0ZSh7IGlkOiB0aGlzLm5hbWUsIG5hbWU6ICdhYmMnIH0pKTtcclxuICAgIH1cclxuICAgIHNlcnZlci5kaXNwb3NhYmxlLmFkZChsb2dnaW5nQ29uc29sZSk7XHJcblxyXG4gICAgbGV0IHNpZ25hdHVyZUhlbHBBZGFwdGVyOiBTaWduYXR1cmVIZWxwQWRhcHRlciB8IHVuZGVmaW5lZDtcclxuICAgIGlmIChTaWduYXR1cmVIZWxwQWRhcHRlci5jYW5BZGFwdChzZXJ2ZXIuY2FwYWJpbGl0aWVzKSkge1xyXG4gICAgICBzaWduYXR1cmVIZWxwQWRhcHRlciA9IG5ldyBTaWduYXR1cmVIZWxwQWRhcHRlcihzZXJ2ZXIsIHRoaXMuZ2V0R3JhbW1hclNjb3BlcygpKTtcclxuICAgICAgaWYgKHRoaXMuX3NpZ25hdHVyZUhlbHBSZWdpc3RyeSAhPSBudWxsKSB7XHJcbiAgICAgICAgc2lnbmF0dXJlSGVscEFkYXB0ZXIuYXR0YWNoKHRoaXMuX3NpZ25hdHVyZUhlbHBSZWdpc3RyeSk7XHJcbiAgICAgIH1cclxuICAgICAgc2VydmVyLmRpc3Bvc2FibGUuYWRkKHNpZ25hdHVyZUhlbHBBZGFwdGVyKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9zZXJ2ZXJBZGFwdGVycy5zZXQoc2VydmVyLCB7XHJcbiAgICAgIGxpbnRlclB1c2hWMiwgbG9nZ2luZ0NvbnNvbGUsIHNpZ25hdHVyZUhlbHBBZGFwdGVyLFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2hvdWxkU3luY0ZvckVkaXRvcihlZGl0b3I6IFRleHRFZGl0b3IsIHByb2plY3RQYXRoOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLmlzRmlsZUluUHJvamVjdChlZGl0b3IsIHByb2plY3RQYXRoKSAmJiB0aGlzLnNob3VsZFN0YXJ0Rm9yRWRpdG9yKGVkaXRvcik7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgaXNGaWxlSW5Qcm9qZWN0KGVkaXRvcjogVGV4dEVkaXRvciwgcHJvamVjdFBhdGg6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIChlZGl0b3IuZ2V0UGF0aCgpIHx8ICcnKS5zdGFydHNXaXRoKHByb2plY3RQYXRoKTtcclxuICB9XHJcblxyXG4gIC8vIEF1dG9jb21wbGV0ZSsgdmlhIExTIGNvbXBsZXRpb24tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICBwdWJsaWMgcHJvdmlkZUF1dG9jb21wbGV0ZSgpOiBhYy5BdXRvY29tcGxldGVQcm92aWRlciB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBzZWxlY3RvcjogdGhpcy5nZXRHcmFtbWFyU2NvcGVzKClcclxuICAgICAgICAubWFwKChnKSA9PiBnLmluY2x1ZGVzKCcuJykgPyAnLicgKyBnIDogZylcclxuICAgICAgICAuam9pbignLCAnKSxcclxuICAgICAgaW5jbHVzaW9uUHJpb3JpdHk6IDEsXHJcbiAgICAgIHN1Z2dlc3Rpb25Qcmlvcml0eTogMixcclxuICAgICAgZXhjbHVkZUxvd2VyUHJpb3JpdHk6IGZhbHNlLFxyXG4gICAgICBnZXRTdWdnZXN0aW9uczogdGhpcy5nZXRTdWdnZXN0aW9ucy5iaW5kKHRoaXMpLFxyXG4gICAgICBvbkRpZEluc2VydFN1Z2dlc3Rpb246IHRoaXMub25EaWRJbnNlcnRTdWdnZXN0aW9uLmJpbmQodGhpcyksXHJcbiAgICAgIGdldFN1Z2dlc3Rpb25EZXRhaWxzT25TZWxlY3Q6IHRoaXMuZ2V0U3VnZ2VzdGlvbkRldGFpbHNPblNlbGVjdC5iaW5kKHRoaXMpLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBhc3luYyBnZXRTdWdnZXN0aW9ucyhcclxuICAgIHJlcXVlc3Q6IGFjLlN1Z2dlc3Rpb25zUmVxdWVzdGVkRXZlbnQsXHJcbiAgKTogUHJvbWlzZTxhYy5BbnlTdWdnZXN0aW9uW10+IHtcclxuICAgIGNvbnN0IHNlcnZlciA9IGF3YWl0IHRoaXMuX3NlcnZlck1hbmFnZXIuZ2V0U2VydmVyKHJlcXVlc3QuZWRpdG9yKTtcclxuICAgIGlmIChzZXJ2ZXIgPT0gbnVsbCB8fCAhQXV0b2NvbXBsZXRlQWRhcHRlci5jYW5BZGFwdChzZXJ2ZXIuY2FwYWJpbGl0aWVzKSkge1xyXG4gICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5hdXRvQ29tcGxldGUgPSB0aGlzLmF1dG9Db21wbGV0ZSB8fCBuZXcgQXV0b2NvbXBsZXRlQWRhcHRlcigpO1xyXG4gICAgdGhpcy5fbGFzdEF1dG9jb21wbGV0ZVJlcXVlc3QgPSByZXF1ZXN0O1xyXG4gICAgcmV0dXJuIHRoaXMuYXV0b0NvbXBsZXRlLmdldFN1Z2dlc3Rpb25zKHNlcnZlciwgcmVxdWVzdCwgdGhpcy5vbkRpZENvbnZlcnRBdXRvY29tcGxldGUsXHJcbiAgICAgIGF0b20uY29uZmlnLmdldCgnYXV0b2NvbXBsZXRlLXBsdXMubWluaW11bVdvcmRMZW5ndGgnKSk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgYXN5bmMgZ2V0U3VnZ2VzdGlvbkRldGFpbHNPblNlbGVjdChcclxuICAgIHN1Z2dlc3Rpb246IGFjLkFueVN1Z2dlc3Rpb24sXHJcbiAgKTogUHJvbWlzZTxhYy5BbnlTdWdnZXN0aW9uIHwgbnVsbD4ge1xyXG4gICAgY29uc3QgcmVxdWVzdCA9IHRoaXMuX2xhc3RBdXRvY29tcGxldGVSZXF1ZXN0O1xyXG4gICAgaWYgKHJlcXVlc3QgPT0gbnVsbCkgeyByZXR1cm4gbnVsbDsgfVxyXG4gICAgY29uc3Qgc2VydmVyID0gYXdhaXQgdGhpcy5fc2VydmVyTWFuYWdlci5nZXRTZXJ2ZXIocmVxdWVzdC5lZGl0b3IpO1xyXG4gICAgaWYgKHNlcnZlciA9PSBudWxsIHx8ICFBdXRvY29tcGxldGVBZGFwdGVyLmNhblJlc29sdmUoc2VydmVyLmNhcGFiaWxpdGllcykgfHwgdGhpcy5hdXRvQ29tcGxldGUgPT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhpcy5hdXRvQ29tcGxldGUuY29tcGxldGVTdWdnZXN0aW9uKHNlcnZlciwgc3VnZ2VzdGlvbiwgcmVxdWVzdCwgdGhpcy5vbkRpZENvbnZlcnRBdXRvY29tcGxldGUpO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIG9uRGlkQ29udmVydEF1dG9jb21wbGV0ZShcclxuICAgIGNvbXBsZXRpb25JdGVtOiBscy5Db21wbGV0aW9uSXRlbSxcclxuICAgIHN1Z2dlc3Rpb246IGFjLkFueVN1Z2dlc3Rpb24sXHJcbiAgICByZXF1ZXN0OiBhYy5TdWdnZXN0aW9uc1JlcXVlc3RlZEV2ZW50LFxyXG4gICk6IHZvaWQge1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIG9uRGlkSW5zZXJ0U3VnZ2VzdGlvbihhcmc6IGFjLlN1Z2dlc3Rpb25JbnNlcnRlZEV2ZW50KTogdm9pZCB7fVxyXG5cclxuICAvLyBEZWZpbml0aW9ucyB2aWEgTFMgZG9jdW1lbnRIaWdobGlnaHQgYW5kIGdvdG9EZWZpbml0aW9uLS0tLS0tLS0tLS0tXHJcbiAgcHVibGljIHByb3ZpZGVEZWZpbml0aW9ucygpOiBhdG9tSWRlLkRlZmluaXRpb25Qcm92aWRlciB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuYW1lOiB0aGlzLm5hbWUsXHJcbiAgICAgIHByaW9yaXR5OiAyMCxcclxuICAgICAgZ3JhbW1hclNjb3BlczogdGhpcy5nZXRHcmFtbWFyU2NvcGVzKCksXHJcbiAgICAgIGdldERlZmluaXRpb246IHRoaXMuZ2V0RGVmaW5pdGlvbi5iaW5kKHRoaXMpLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBhc3luYyBnZXREZWZpbml0aW9uKGVkaXRvcjogVGV4dEVkaXRvciwgcG9pbnQ6IFBvaW50KTogUHJvbWlzZTxhdG9tSWRlLkRlZmluaXRpb25RdWVyeVJlc3VsdCB8IG51bGw+IHtcclxuICAgIGNvbnN0IHNlcnZlciA9IGF3YWl0IHRoaXMuX3NlcnZlck1hbmFnZXIuZ2V0U2VydmVyKGVkaXRvcik7XHJcbiAgICBpZiAoc2VydmVyID09IG51bGwgfHwgIURlZmluaXRpb25BZGFwdGVyLmNhbkFkYXB0KHNlcnZlci5jYXBhYmlsaXRpZXMpKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZGVmaW5pdGlvbnMgPSB0aGlzLmRlZmluaXRpb25zIHx8IG5ldyBEZWZpbml0aW9uQWRhcHRlcigpO1xyXG4gICAgcmV0dXJuIHRoaXMuZGVmaW5pdGlvbnMuZ2V0RGVmaW5pdGlvbihcclxuICAgICAgc2VydmVyLmNvbm5lY3Rpb24sXHJcbiAgICAgIHNlcnZlci5jYXBhYmlsaXRpZXMsXHJcbiAgICAgIHRoaXMuZ2V0TGFuZ3VhZ2VOYW1lKCksXHJcbiAgICAgIGVkaXRvcixcclxuICAgICAgcG9pbnQsXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLy8gT3V0bGluZSBWaWV3IHZpYSBMUyBkb2N1bWVudFN5bWJvbC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHB1YmxpYyBwcm92aWRlT3V0bGluZXMoKTogYXRvbUlkZS5PdXRsaW5lUHJvdmlkZXIge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmFtZTogdGhpcy5uYW1lLFxyXG4gICAgICBncmFtbWFyU2NvcGVzOiB0aGlzLmdldEdyYW1tYXJTY29wZXMoKSxcclxuICAgICAgcHJpb3JpdHk6IDEsXHJcbiAgICAgIGdldE91dGxpbmU6IHRoaXMuZ2V0T3V0bGluZS5iaW5kKHRoaXMpLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBhc3luYyBnZXRPdXRsaW5lKGVkaXRvcjogVGV4dEVkaXRvcik6IFByb21pc2U8YXRvbUlkZS5PdXRsaW5lIHwgbnVsbD4ge1xyXG4gICAgY29uc3Qgc2VydmVyID0gYXdhaXQgdGhpcy5fc2VydmVyTWFuYWdlci5nZXRTZXJ2ZXIoZWRpdG9yKTtcclxuICAgIGlmIChzZXJ2ZXIgPT0gbnVsbCB8fCAhT3V0bGluZVZpZXdBZGFwdGVyLmNhbkFkYXB0KHNlcnZlci5jYXBhYmlsaXRpZXMpKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMub3V0bGluZVZpZXcgPSB0aGlzLm91dGxpbmVWaWV3IHx8IG5ldyBPdXRsaW5lVmlld0FkYXB0ZXIoKTtcclxuICAgIHJldHVybiB0aGlzLm91dGxpbmVWaWV3LmdldE91dGxpbmUoc2VydmVyLmNvbm5lY3Rpb24sIGVkaXRvcik7XHJcbiAgfVxyXG5cclxuICAvLyBMaW50ZXIgcHVzaCB2MiBBUEkgdmlhIExTIHB1Ymxpc2hEaWFnbm9zdGljc1xyXG4gIHB1YmxpYyBjb25zdW1lTGludGVyVjIocmVnaXN0ZXJJbmRpZTogKHBhcmFtczoge25hbWU6IHN0cmluZ30pID0+IGxpbnRlci5JbmRpZURlbGVnYXRlKTogdm9pZCB7XHJcbiAgICB0aGlzLl9saW50ZXJEZWxlZ2F0ZSA9IHJlZ2lzdGVySW5kaWUoe25hbWU6IHRoaXMubmFtZX0pO1xyXG4gICAgaWYgKHRoaXMuX2xpbnRlckRlbGVnYXRlID09IG51bGwpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGZvciAoY29uc3Qgc2VydmVyIG9mIHRoaXMuX3NlcnZlck1hbmFnZXIuZ2V0QWN0aXZlU2VydmVycygpKSB7XHJcbiAgICAgIGNvbnN0IGxpbnRlclB1c2hWMiA9IHRoaXMuZ2V0U2VydmVyQWRhcHRlcihzZXJ2ZXIsICdsaW50ZXJQdXNoVjInKTtcclxuICAgICAgaWYgKGxpbnRlclB1c2hWMiAhPSBudWxsKSB7XHJcbiAgICAgICAgbGludGVyUHVzaFYyLmF0dGFjaCh0aGlzLl9saW50ZXJEZWxlZ2F0ZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIEZpbmQgUmVmZXJlbmNlcyB2aWEgTFMgZmluZFJlZmVyZW5jZXMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICBwdWJsaWMgcHJvdmlkZUZpbmRSZWZlcmVuY2VzKCk6IGF0b21JZGUuRmluZFJlZmVyZW5jZXNQcm92aWRlciB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBpc0VkaXRvclN1cHBvcnRlZDogKGVkaXRvcjogVGV4dEVkaXRvcikgPT4gdGhpcy5nZXRHcmFtbWFyU2NvcGVzKCkuaW5jbHVkZXMoZWRpdG9yLmdldEdyYW1tYXIoKS5zY29wZU5hbWUpLFxyXG4gICAgICBmaW5kUmVmZXJlbmNlczogdGhpcy5nZXRSZWZlcmVuY2VzLmJpbmQodGhpcyksXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGFzeW5jIGdldFJlZmVyZW5jZXMoZWRpdG9yOiBUZXh0RWRpdG9yLCBwb2ludDogUG9pbnQpOiBQcm9taXNlPGF0b21JZGUuRmluZFJlZmVyZW5jZXNSZXR1cm4gfCBudWxsPiB7XHJcbiAgICBjb25zdCBzZXJ2ZXIgPSBhd2FpdCB0aGlzLl9zZXJ2ZXJNYW5hZ2VyLmdldFNlcnZlcihlZGl0b3IpO1xyXG4gICAgaWYgKHNlcnZlciA9PSBudWxsIHx8ICFGaW5kUmVmZXJlbmNlc0FkYXB0ZXIuY2FuQWRhcHQoc2VydmVyLmNhcGFiaWxpdGllcykpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5maW5kUmVmZXJlbmNlcyA9IHRoaXMuZmluZFJlZmVyZW5jZXMgfHwgbmV3IEZpbmRSZWZlcmVuY2VzQWRhcHRlcigpO1xyXG4gICAgcmV0dXJuIHRoaXMuZmluZFJlZmVyZW5jZXMuZ2V0UmVmZXJlbmNlcyhzZXJ2ZXIuY29ubmVjdGlvbiwgZWRpdG9yLCBwb2ludCwgc2VydmVyLnByb2plY3RQYXRoKTtcclxuICB9XHJcblxyXG4gIC8vIERhdGF0aXAgdmlhIExTIHRleHREb2N1bWVudC9ob3Zlci0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICBwdWJsaWMgY29uc3VtZURhdGF0aXAoc2VydmljZTogYXRvbUlkZS5EYXRhdGlwU2VydmljZSk6IHZvaWQge1xyXG4gICAgdGhpcy5fZGlzcG9zYWJsZS5hZGQoXHJcbiAgICAgIHNlcnZpY2UuYWRkUHJvdmlkZXIoe1xyXG4gICAgICAgIHByb3ZpZGVyTmFtZTogdGhpcy5uYW1lLFxyXG4gICAgICAgIHByaW9yaXR5OiAxLFxyXG4gICAgICAgIGdyYW1tYXJTY29wZXM6IHRoaXMuZ2V0R3JhbW1hclNjb3BlcygpLFxyXG4gICAgICAgIHZhbGlkRm9yU2NvcGU6IChzY29wZU5hbWU6IHN0cmluZykgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0R3JhbW1hclNjb3BlcygpLmluY2x1ZGVzKHNjb3BlTmFtZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkYXRhdGlwOiB0aGlzLmdldERhdGF0aXAuYmluZCh0aGlzKSxcclxuICAgICAgfSksXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGFzeW5jIGdldERhdGF0aXAoZWRpdG9yOiBUZXh0RWRpdG9yLCBwb2ludDogUG9pbnQpOiBQcm9taXNlPGF0b21JZGUuRGF0YXRpcCB8IG51bGw+IHtcclxuICAgIGNvbnN0IHNlcnZlciA9IGF3YWl0IHRoaXMuX3NlcnZlck1hbmFnZXIuZ2V0U2VydmVyKGVkaXRvcik7XHJcbiAgICBpZiAoc2VydmVyID09IG51bGwgfHwgIURhdGF0aXBBZGFwdGVyLmNhbkFkYXB0KHNlcnZlci5jYXBhYmlsaXRpZXMpKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZGF0YXRpcCA9IHRoaXMuZGF0YXRpcCB8fCBuZXcgRGF0YXRpcEFkYXB0ZXIoKTtcclxuICAgIHJldHVybiB0aGlzLmRhdGF0aXAuZ2V0RGF0YXRpcChzZXJ2ZXIuY29ubmVjdGlvbiwgZWRpdG9yLCBwb2ludCk7XHJcbiAgfVxyXG5cclxuICAvLyBDb25zb2xlIHZpYSBMUyBsb2dnaW5nLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgcHVibGljIGNvbnN1bWVDb25zb2xlKGNyZWF0ZUNvbnNvbGU6IGF0b21JZGUuQ29uc29sZVNlcnZpY2UpOiBEaXNwb3NhYmxlIHtcclxuICAgIHRoaXMuX2NvbnNvbGVEZWxlZ2F0ZSA9IGNyZWF0ZUNvbnNvbGU7XHJcblxyXG4gICAgZm9yIChjb25zdCBzZXJ2ZXIgb2YgdGhpcy5fc2VydmVyTWFuYWdlci5nZXRBY3RpdmVTZXJ2ZXJzKCkpIHtcclxuICAgICAgY29uc3QgbG9nZ2luZ0NvbnNvbGUgPSB0aGlzLmdldFNlcnZlckFkYXB0ZXIoc2VydmVyLCAnbG9nZ2luZ0NvbnNvbGUnKTtcclxuICAgICAgaWYgKGxvZ2dpbmdDb25zb2xlKSB7XHJcbiAgICAgICAgbG9nZ2luZ0NvbnNvbGUuYXR0YWNoKHRoaXMuX2NvbnNvbGVEZWxlZ2F0ZSh7IGlkOiB0aGlzLm5hbWUsIG5hbWU6ICdhYmMnIH0pKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIE5vIHdheSBvZiBkZXRhY2hpbmcgZnJvbSBjbGllbnQgY29ubmVjdGlvbnMgdG9kYXlcclxuICAgIHJldHVybiBuZXcgRGlzcG9zYWJsZSgoKSA9PiB7IH0pO1xyXG4gIH1cclxuXHJcbiAgLy8gQ29kZSBGb3JtYXQgdmlhIExTIGZvcm1hdERvY3VtZW50ICYgZm9ybWF0RG9jdW1lbnRSYW5nZS0tLS0tLS0tLS0tLVxyXG4gIHB1YmxpYyBwcm92aWRlQ29kZUZvcm1hdCgpOiBhdG9tSWRlLlJhbmdlQ29kZUZvcm1hdFByb3ZpZGVyIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGdyYW1tYXJTY29wZXM6IHRoaXMuZ2V0R3JhbW1hclNjb3BlcygpLFxyXG4gICAgICBwcmlvcml0eTogMSxcclxuICAgICAgZm9ybWF0Q29kZTogdGhpcy5nZXRDb2RlRm9ybWF0LmJpbmQodGhpcyksXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGFzeW5jIGdldENvZGVGb3JtYXQoZWRpdG9yOiBUZXh0RWRpdG9yLCByYW5nZTogUmFuZ2UpOiBQcm9taXNlPGF0b21JZGUuVGV4dEVkaXRbXT4ge1xyXG4gICAgY29uc3Qgc2VydmVyID0gYXdhaXQgdGhpcy5fc2VydmVyTWFuYWdlci5nZXRTZXJ2ZXIoZWRpdG9yKTtcclxuICAgIGlmIChzZXJ2ZXIgPT0gbnVsbCB8fCAhQ29kZUZvcm1hdEFkYXB0ZXIuY2FuQWRhcHQoc2VydmVyLmNhcGFiaWxpdGllcykpIHtcclxuICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBDb2RlRm9ybWF0QWRhcHRlci5mb3JtYXQoc2VydmVyLmNvbm5lY3Rpb24sIHNlcnZlci5jYXBhYmlsaXRpZXMsIGVkaXRvciwgcmFuZ2UpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHByb3ZpZGVSYW5nZUNvZGVGb3JtYXQoKTogYXRvbUlkZS5SYW5nZUNvZGVGb3JtYXRQcm92aWRlciB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBncmFtbWFyU2NvcGVzOiB0aGlzLmdldEdyYW1tYXJTY29wZXMoKSxcclxuICAgICAgcHJpb3JpdHk6IDEsXHJcbiAgICAgIGZvcm1hdENvZGU6IHRoaXMuZ2V0UmFuZ2VDb2RlRm9ybWF0LmJpbmQodGhpcyksXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGFzeW5jIGdldFJhbmdlQ29kZUZvcm1hdChlZGl0b3I6IFRleHRFZGl0b3IsIHJhbmdlOiBSYW5nZSk6IFByb21pc2U8YXRvbUlkZS5UZXh0RWRpdFtdPiB7XHJcbiAgICBjb25zdCBzZXJ2ZXIgPSBhd2FpdCB0aGlzLl9zZXJ2ZXJNYW5hZ2VyLmdldFNlcnZlcihlZGl0b3IpO1xyXG4gICAgaWYgKHNlcnZlciA9PSBudWxsIHx8ICFzZXJ2ZXIuY2FwYWJpbGl0aWVzLmRvY3VtZW50UmFuZ2VGb3JtYXR0aW5nUHJvdmlkZXIpIHtcclxuICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBDb2RlRm9ybWF0QWRhcHRlci5mb3JtYXRSYW5nZShzZXJ2ZXIuY29ubmVjdGlvbiwgZWRpdG9yLCByYW5nZSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgcHJvdmlkZUZpbGVDb2RlRm9ybWF0KCk6IGF0b21JZGUuRmlsZUNvZGVGb3JtYXRQcm92aWRlciB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBncmFtbWFyU2NvcGVzOiB0aGlzLmdldEdyYW1tYXJTY29wZXMoKSxcclxuICAgICAgcHJpb3JpdHk6IDEsXHJcbiAgICAgIGZvcm1hdEVudGlyZUZpbGU6IHRoaXMuZ2V0RmlsZUNvZGVGb3JtYXQuYmluZCh0aGlzKSxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgcHJvdmlkZU9uU2F2ZUNvZGVGb3JtYXQoKTogYXRvbUlkZS5PblNhdmVDb2RlRm9ybWF0UHJvdmlkZXIge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgZ3JhbW1hclNjb3BlczogdGhpcy5nZXRHcmFtbWFyU2NvcGVzKCksXHJcbiAgICAgIHByaW9yaXR5OiAxLFxyXG4gICAgICBmb3JtYXRPblNhdmU6IHRoaXMuZ2V0RmlsZUNvZGVGb3JtYXQuYmluZCh0aGlzKSxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgYXN5bmMgZ2V0RmlsZUNvZGVGb3JtYXQoZWRpdG9yOiBUZXh0RWRpdG9yKTogUHJvbWlzZTxhdG9tSWRlLlRleHRFZGl0W10+IHtcclxuICAgIGNvbnN0IHNlcnZlciA9IGF3YWl0IHRoaXMuX3NlcnZlck1hbmFnZXIuZ2V0U2VydmVyKGVkaXRvcik7XHJcbiAgICBpZiAoc2VydmVyID09IG51bGwgfHwgIXNlcnZlci5jYXBhYmlsaXRpZXMuZG9jdW1lbnRGb3JtYXR0aW5nUHJvdmlkZXIpIHtcclxuICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBDb2RlRm9ybWF0QWRhcHRlci5mb3JtYXREb2N1bWVudChzZXJ2ZXIuY29ubmVjdGlvbiwgZWRpdG9yKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBwcm92aWRlT25UeXBlQ29kZUZvcm1hdCgpOiBhdG9tSWRlLk9uVHlwZUNvZGVGb3JtYXRQcm92aWRlciB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBncmFtbWFyU2NvcGVzOiB0aGlzLmdldEdyYW1tYXJTY29wZXMoKSxcclxuICAgICAgcHJpb3JpdHk6IDEsXHJcbiAgICAgIGZvcm1hdEF0UG9zaXRpb246IHRoaXMuZ2V0T25UeXBlQ29kZUZvcm1hdC5iaW5kKHRoaXMpLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBhc3luYyBnZXRPblR5cGVDb2RlRm9ybWF0KFxyXG4gICAgZWRpdG9yOiBUZXh0RWRpdG9yLFxyXG4gICAgcG9pbnQ6IFBvaW50LFxyXG4gICAgY2hhcmFjdGVyOiBzdHJpbmcsXHJcbiAgKTogUHJvbWlzZTxhdG9tSWRlLlRleHRFZGl0W10+IHtcclxuICAgIGNvbnN0IHNlcnZlciA9IGF3YWl0IHRoaXMuX3NlcnZlck1hbmFnZXIuZ2V0U2VydmVyKGVkaXRvcik7XHJcbiAgICBpZiAoc2VydmVyID09IG51bGwgfHwgIXNlcnZlci5jYXBhYmlsaXRpZXMuZG9jdW1lbnRPblR5cGVGb3JtYXR0aW5nUHJvdmlkZXIpIHtcclxuICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBDb2RlRm9ybWF0QWRhcHRlci5mb3JtYXRPblR5cGUoc2VydmVyLmNvbm5lY3Rpb24sIGVkaXRvciwgcG9pbnQsIGNoYXJhY3Rlcik7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgcHJvdmlkZUNvZGVIaWdobGlnaHQoKTogYXRvbUlkZS5Db2RlSGlnaGxpZ2h0UHJvdmlkZXIge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgZ3JhbW1hclNjb3BlczogdGhpcy5nZXRHcmFtbWFyU2NvcGVzKCksXHJcbiAgICAgIHByaW9yaXR5OiAxLFxyXG4gICAgICBoaWdobGlnaHQ6IChlZGl0b3IsIHBvc2l0aW9uKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0Q29kZUhpZ2hsaWdodChlZGl0b3IsIHBvc2l0aW9uKTtcclxuICAgICAgfSxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgYXN5bmMgZ2V0Q29kZUhpZ2hsaWdodChlZGl0b3I6IFRleHRFZGl0b3IsIHBvc2l0aW9uOiBQb2ludCk6IFByb21pc2U8UmFuZ2VbXSB8IG51bGw+IHtcclxuICAgIGNvbnN0IHNlcnZlciA9IGF3YWl0IHRoaXMuX3NlcnZlck1hbmFnZXIuZ2V0U2VydmVyKGVkaXRvcik7XHJcbiAgICBpZiAoc2VydmVyID09IG51bGwgfHwgIUNvZGVIaWdobGlnaHRBZGFwdGVyLmNhbkFkYXB0KHNlcnZlci5jYXBhYmlsaXRpZXMpKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBDb2RlSGlnaGxpZ2h0QWRhcHRlci5oaWdobGlnaHQoc2VydmVyLmNvbm5lY3Rpb24sIHNlcnZlci5jYXBhYmlsaXRpZXMsIGVkaXRvciwgcG9zaXRpb24pO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHByb3ZpZGVDb2RlQWN0aW9ucygpOiBhdG9tSWRlLkNvZGVBY3Rpb25Qcm92aWRlciB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBncmFtbWFyU2NvcGVzOiB0aGlzLmdldEdyYW1tYXJTY29wZXMoKSxcclxuICAgICAgcHJpb3JpdHk6IDEsXHJcbiAgICAgIGdldENvZGVBY3Rpb25zOiAoZWRpdG9yLCByYW5nZSwgZGlhZ25vc3RpY3MpID0+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZXRDb2RlQWN0aW9ucyhlZGl0b3IsIHJhbmdlLCBkaWFnbm9zdGljcyk7XHJcbiAgICAgIH0sXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGFzeW5jIGdldENvZGVBY3Rpb25zKGVkaXRvcjogVGV4dEVkaXRvciwgcmFuZ2U6IFJhbmdlLCBkaWFnbm9zdGljczogYXRvbUlkZS5EaWFnbm9zdGljW10pIHtcclxuICAgIGNvbnN0IHNlcnZlciA9IGF3YWl0IHRoaXMuX3NlcnZlck1hbmFnZXIuZ2V0U2VydmVyKGVkaXRvcik7XHJcbiAgICBpZiAoc2VydmVyID09IG51bGwgfHwgIUNvZGVBY3Rpb25BZGFwdGVyLmNhbkFkYXB0KHNlcnZlci5jYXBhYmlsaXRpZXMpKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBDb2RlQWN0aW9uQWRhcHRlci5nZXRDb2RlQWN0aW9ucyhcclxuICAgICAgc2VydmVyLmNvbm5lY3Rpb24sXHJcbiAgICAgIHNlcnZlci5jYXBhYmlsaXRpZXMsXHJcbiAgICAgIHRoaXMuZ2V0U2VydmVyQWRhcHRlcihzZXJ2ZXIsICdsaW50ZXJQdXNoVjInKSxcclxuICAgICAgZWRpdG9yLFxyXG4gICAgICByYW5nZSxcclxuICAgICAgZGlhZ25vc3RpY3MsXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGNvbnN1bWVTaWduYXR1cmVIZWxwKHJlZ2lzdHJ5OiBhdG9tSWRlLlNpZ25hdHVyZUhlbHBSZWdpc3RyeSk6IERpc3Bvc2FibGUge1xyXG4gICAgdGhpcy5fc2lnbmF0dXJlSGVscFJlZ2lzdHJ5ID0gcmVnaXN0cnk7XHJcbiAgICBmb3IgKGNvbnN0IHNlcnZlciBvZiB0aGlzLl9zZXJ2ZXJNYW5hZ2VyLmdldEFjdGl2ZVNlcnZlcnMoKSkge1xyXG4gICAgICBjb25zdCBzaWduYXR1cmVIZWxwQWRhcHRlciA9IHRoaXMuZ2V0U2VydmVyQWRhcHRlcihzZXJ2ZXIsICdzaWduYXR1cmVIZWxwQWRhcHRlcicpO1xyXG4gICAgICBpZiAoc2lnbmF0dXJlSGVscEFkYXB0ZXIgIT0gbnVsbCkge1xyXG4gICAgICAgIHNpZ25hdHVyZUhlbHBBZGFwdGVyLmF0dGFjaChyZWdpc3RyeSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBuZXcgRGlzcG9zYWJsZSgoKSA9PiB7XHJcbiAgICAgIHRoaXMuX3NpZ25hdHVyZUhlbHBSZWdpc3RyeSA9IHVuZGVmaW5lZDtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGNvbnN1bWVCdXN5U2lnbmFsKHNlcnZpY2U6IGF0b21JZGUuQnVzeVNpZ25hbFNlcnZpY2UpOiBEaXNwb3NhYmxlIHtcclxuICAgIHRoaXMuYnVzeVNpZ25hbFNlcnZpY2UgPSBzZXJ2aWNlO1xyXG4gICAgcmV0dXJuIG5ldyBEaXNwb3NhYmxlKCgpID0+IGRlbGV0ZSB0aGlzLmJ1c3lTaWduYWxTZXJ2aWNlKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIGBkaWRDaGFuZ2VXYXRjaGVkRmlsZXNgIG1lc3NhZ2UgZmlsdGVyaW5nLCBvdmVycmlkZSBmb3IgY3VzdG9tIGxvZ2ljLlxyXG4gICAqIEBwYXJhbSBmaWxlUGF0aCBwYXRoIG9mIGEgZmlsZSB0aGF0IGhhcyBjaGFuZ2VkIGluIHRoZSBwcm9qZWN0IHBhdGhcclxuICAgKiBAcmV0dXJuIGZhbHNlID0+IG1lc3NhZ2Ugd2lsbCBub3QgYmUgc2VudCB0byB0aGUgbGFuZ3VhZ2Ugc2VydmVyXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGZpbHRlckNoYW5nZVdhdGNoZWRGaWxlcyhmaWxlUGF0aDogc3RyaW5nKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENhbGxlZCBvbiBsYW5ndWFnZSBzZXJ2ZXIgc3RkZXJyIG91dHB1dC5cclxuICAgKiBAcGFyYW0gc3RkZXJyIGEgY2h1bmsgb2Ygc3RkZXJyIGZyb20gYSBsYW5ndWFnZSBzZXJ2ZXIgaW5zdGFuY2VcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgaGFuZGxlU2VydmVyU3RkZXJyKHN0ZGVycjogc3RyaW5nLCBwcm9qZWN0UGF0aDogc3RyaW5nKSB7XHJcbiAgICBzdGRlcnIuc3BsaXQoJ1xcbicpLmZpbHRlcigobCkgPT4gbCkuZm9yRWFjaCgobGluZSkgPT4gdGhpcy5sb2dnZXIud2Fybihgc3RkZXJyICR7bGluZX1gKSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGdldFNlcnZlckFkYXB0ZXI8VCBleHRlbmRzIGtleW9mIFNlcnZlckFkYXB0ZXJzPihcclxuICAgIHNlcnZlcjogQWN0aXZlU2VydmVyLCBhZGFwdGVyOiBULFxyXG4gICk6IFNlcnZlckFkYXB0ZXJzW1RdIHwgdW5kZWZpbmVkIHtcclxuICAgIGNvbnN0IGFkYXB0ZXJzID0gdGhpcy5fc2VydmVyQWRhcHRlcnMuZ2V0KHNlcnZlcik7XHJcbiAgICByZXR1cm4gYWRhcHRlcnMgJiYgYWRhcHRlcnNbYWRhcHRlcl07XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgcmVwb3J0QnVzeVdoaWxlOiBVdGlscy5SZXBvcnRCdXN5V2hpbGUgPSBhc3luYyAodGl0bGUsIGYpID0+IHtcclxuICAgIGlmICh0aGlzLmJ1c3lTaWduYWxTZXJ2aWNlKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmJ1c3lTaWduYWxTZXJ2aWNlLnJlcG9ydEJ1c3lXaGlsZSh0aXRsZSwgZik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdGhpcy5yZXBvcnRCdXN5V2hpbGVEZWZhdWx0KHRpdGxlLCBmKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCByZXBvcnRCdXN5V2hpbGVEZWZhdWx0OiBVdGlscy5SZXBvcnRCdXN5V2hpbGUgPSBhc3luYyAodGl0bGUsIGYpID0+IHtcclxuICAgIHRoaXMubG9nZ2VyLmluZm8oYFtTdGFydGVkXSAke3RpdGxlfWApO1xyXG4gICAgbGV0IHJlcztcclxuICAgIHRyeSB7XHJcbiAgICAgIHJlcyA9IGF3YWl0IGYoKTtcclxuICAgIH0gZmluYWxseSB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmluZm8oYFtGaW5pc2hlZF0gJHt0aXRsZX1gKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXM7XHJcbiAgfVxyXG59XHJcbiJdfQ==","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ls = require(\"./languageclient\");\r\nconst URL = require(\"url\");\r\nconst atom_1 = require(\"atom\");\r\n// Public: Class that contains a number of helper methods for general conversions\r\n// between the language server protocol and Atom/Atom packages.\r\nclass Convert {\r\n    // Public: Convert a path to a Uri.\r\n    //\r\n    // * `filePath` A file path to convert to a Uri.\r\n    //\r\n    // Returns the Uri corresponding to the path. e.g. file:///a/b/c.txt\r\n    static pathToUri(filePath) {\r\n        let newPath = filePath.replace(/\\\\/g, '/');\r\n        if (newPath[0] !== '/') {\r\n            newPath = `/${newPath}`;\r\n        }\r\n        return encodeURI(`file://${newPath}`).replace(/[?#]/g, encodeURIComponent);\r\n    }\r\n    // Public: Convert a Uri to a path.\r\n    //\r\n    // * `uri` A Uri to convert to a file path.\r\n    //\r\n    // Returns a file path corresponding to the Uri. e.g. /a/b/c.txt\r\n    // If the Uri does not begin file: then it is returned as-is to allow Atom\r\n    // to deal with http/https sources in the future.\r\n    static uriToPath(uri) {\r\n        const url = URL.parse(uri);\r\n        if (url.protocol !== 'file:' || url.path === undefined) {\r\n            return uri;\r\n        }\r\n        let filePath = decodeURIComponent(url.path);\r\n        if (process.platform === 'win32') {\r\n            // Deal with Windows drive names\r\n            if (filePath[0] === '/') {\r\n                filePath = filePath.substr(1);\r\n            }\r\n            return filePath.replace(/\\//g, '\\\\');\r\n        }\r\n        return filePath;\r\n    }\r\n    // Public: Convert an Atom {Point} to a language server {Position}.\r\n    //\r\n    // * `point` An Atom {Point} to convert from.\r\n    //\r\n    // Returns the {Position} representation of the Atom {PointObject}.\r\n    static pointToPosition(point) {\r\n        return { line: point.row, character: point.column };\r\n    }\r\n    // Public: Convert a language server {Position} into an Atom {PointObject}.\r\n    //\r\n    // * 'position' A language server {Position} to convert from.\r\n    //\r\n    // Returns the Atom {PointObject} representation of the given {Position}.\r\n    static positionToPoint(position) {\r\n        return new atom_1.Point(position.line, position.character);\r\n    }\r\n    // Public: Convert a language server {Range} into an Atom {Range}.\r\n    //\r\n    // * 'range' A language server {Range} to convert from.\r\n    //\r\n    // Returns the Atom {Range} representation of the given language server {Range}.\r\n    static lsRangeToAtomRange(range) {\r\n        return new atom_1.Range(Convert.positionToPoint(range.start), Convert.positionToPoint(range.end));\r\n    }\r\n    // Public: Convert an Atom {Range} into an language server {Range}.\r\n    //\r\n    // * 'range' An Atom {Range} to convert from.\r\n    //\r\n    // Returns the language server {Range} representation of the given Atom {Range}.\r\n    static atomRangeToLSRange(range) {\r\n        return {\r\n            start: Convert.pointToPosition(range.start),\r\n            end: Convert.pointToPosition(range.end),\r\n        };\r\n    }\r\n    // Public: Create a {TextDocumentIdentifier} from an Atom {TextEditor}.\r\n    //\r\n    // * `editor` A {TextEditor} that will be used to form the uri property.\r\n    //\r\n    // Returns a {TextDocumentIdentifier} that has a `uri` property with the Uri for the\r\n    // given editor's path.\r\n    static editorToTextDocumentIdentifier(editor) {\r\n        return { uri: Convert.pathToUri(editor.getPath() || '') };\r\n    }\r\n    // Public: Create a {TextDocumentPositionParams} from a {TextEditor} and optional {Point}.\r\n    //\r\n    // * `editor` A {TextEditor} that will be used to form the uri property.\r\n    // * `point`  An optional {Point} that will supply the position property. If not specified\r\n    //            the current cursor position will be used.\r\n    //\r\n    // Returns a {TextDocumentPositionParams} that has textDocument property with the editors {TextDocumentIdentifier}\r\n    // and a position property with the supplied point (or current cursor position when not specified).\r\n    static editorToTextDocumentPositionParams(editor, point) {\r\n        return {\r\n            textDocument: Convert.editorToTextDocumentIdentifier(editor),\r\n            position: Convert.pointToPosition(point != null ? point : editor.getCursorBufferPosition()),\r\n        };\r\n    }\r\n    // Public: Create a string of scopes for the atom text editor using the data-grammar selector from an\r\n    // {Array} of grammarScope strings.\r\n    //\r\n    // * `grammarScopes` An {Array} of grammar scope string to convert from.\r\n    //\r\n    // Returns a single comma-separated list of CSS selectors targetting the grammars of Atom text editors.\r\n    // e.g. `['c', 'cpp']` => `'atom-text-editor[data-grammar='c'], atom-text-editor[data-grammar='cpp']`\r\n    static grammarScopesToTextEditorScopes(grammarScopes) {\r\n        return grammarScopes\r\n            .map((g) => `atom-text-editor[data-grammar=\"${Convert.encodeHTMLAttribute(g.replace(/\\./g, ' '))}\"]`)\r\n            .join(', ');\r\n    }\r\n    // Public: Encode a string so that it can be safely used within a HTML attribute - i.e. replacing all quoted\r\n    // values with their HTML entity encoded versions.  e.g. `Hello\"` becomes `Hello&quot;`\r\n    //\r\n    // * 's' A string to be encoded.\r\n    //\r\n    // Returns a string that is HTML attribute encoded by replacing &, <, >, \" and ' with their HTML entity\r\n    // named equivalents.\r\n    static encodeHTMLAttribute(s) {\r\n        const attributeMap = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&apos;',\r\n        };\r\n        return s.replace(/[&<>'\"]/g, (c) => attributeMap[c]);\r\n    }\r\n    // Public: Convert an Atom File Event as received from atom.project.onDidChangeFiles and convert\r\n    // it into an Array of Language Server Protocol {FileEvent} objects. Normally this will be a 1-to-1\r\n    // but renames will be represented by a deletion and a subsequent creation as LSP does not know about\r\n    // renames.\r\n    //\r\n    // * 'fileEvent' An {atom$ProjectFileEvent} to be converted.\r\n    //\r\n    // Returns an array of LSP {ls.FileEvent} objects that equivalent conversions to the fileEvent parameter.\r\n    static atomFileEventToLSFileEvents(fileEvent) {\r\n        switch (fileEvent.action) {\r\n            case 'created':\r\n                return [{ uri: Convert.pathToUri(fileEvent.path), type: ls.FileChangeType.Created }];\r\n            case 'modified':\r\n                return [{ uri: Convert.pathToUri(fileEvent.path), type: ls.FileChangeType.Changed }];\r\n            case 'deleted':\r\n                return [{ uri: Convert.pathToUri(fileEvent.path), type: ls.FileChangeType.Deleted }];\r\n            case 'renamed': {\r\n                const results = [];\r\n                if (fileEvent.oldPath) {\r\n                    results.push({ uri: Convert.pathToUri(fileEvent.oldPath), type: ls.FileChangeType.Deleted });\r\n                }\r\n                if (fileEvent.path) {\r\n                    results.push({ uri: Convert.pathToUri(fileEvent.path), type: ls.FileChangeType.Created });\r\n                }\r\n                return results;\r\n            }\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n    static atomIdeDiagnosticToLSDiagnostic(diagnostic) {\r\n        return {\r\n            range: Convert.atomRangeToLSRange(diagnostic.range),\r\n            severity: Convert.diagnosticTypeToLSSeverity(diagnostic.type),\r\n            source: diagnostic.providerName,\r\n            message: diagnostic.text || '',\r\n        };\r\n    }\r\n    static diagnosticTypeToLSSeverity(type) {\r\n        switch (type) {\r\n            case 'Error':\r\n                return ls.DiagnosticSeverity.Error;\r\n            case 'Warning':\r\n                return ls.DiagnosticSeverity.Warning;\r\n            case 'Info':\r\n                return ls.DiagnosticSeverity.Information;\r\n            default:\r\n                throw Error(`Unexpected diagnostic type ${type}`);\r\n        }\r\n    }\r\n    // Public: Convert an array of language server protocol {TextEdit} objects to an\r\n    // equivalent array of Atom {TextEdit} objects.\r\n    //\r\n    // * `textEdits` The language server protocol {TextEdit} objects to convert.\r\n    //\r\n    // Returns an {Array} of Atom {TextEdit} objects.\r\n    static convertLsTextEdits(textEdits) {\r\n        return (textEdits || []).map(Convert.convertLsTextEdit);\r\n    }\r\n    // Public: Convert a language server protocol {TextEdit} object to the\r\n    // Atom equivalent {TextEdit}.\r\n    //\r\n    // * `textEdits` The language server protocol {TextEdit} objects to convert.\r\n    //\r\n    // Returns an Atom {TextEdit} object.\r\n    static convertLsTextEdit(textEdit) {\r\n        return {\r\n            oldRange: Convert.lsRangeToAtomRange(textEdit.range),\r\n            newText: textEdit.newText,\r\n        };\r\n    }\r\n}\r\nexports.default = Convert;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst fs = require(\"fs\");\r\n// Public: Download a file and store it on a file system using streaming with appropriate progress callback.\r\n//\r\n// * `sourceUrl`        Url to download from.\r\n// * `targetFile`       File path to save to.\r\n// * `progressCallback` Callback function that will be given a {ByteProgressCallback} object containing\r\n//                      both bytesDone and percent.\r\n// * `length`           File length in bytes if you want percentage progress indication and the server is\r\n//                      unable to provide a Content-Length header and whitelist CORS access via a\r\n//                      `Access-Control-Expose-Headers \"content-length\"` header.\r\n//\r\n// Returns a {Promise} that will accept when complete.\r\nexports.default = (function downloadFile(sourceUrl, targetFile, progressCallback, length) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const request = new Request(sourceUrl, {\r\n            headers: new Headers({ 'Content-Type': 'application/octet-stream' }),\r\n        });\r\n        const response = yield fetch(request);\r\n        if (!response.ok) {\r\n            throw Error(`Unable to download, server returned ${response.status} ${response.statusText}`);\r\n        }\r\n        const body = response.body;\r\n        if (body == null) {\r\n            throw Error('No response body');\r\n        }\r\n        const finalLength = length || parseInt(response.headers.get('Content-Length') || '0', 10);\r\n        const reader = body.getReader();\r\n        const writer = fs.createWriteStream(targetFile);\r\n        yield streamWithProgress(finalLength, reader, writer, progressCallback);\r\n        writer.end();\r\n    });\r\n});\r\n// Stream from a {ReadableStreamReader} to a {WriteStream} with progress callback.\r\n//\r\n// * `length`           File length in bytes.\r\n// * `reader`           {ReadableStreamReader} to read from.\r\n// * `writer`           {WriteStream} to write to.\r\n// * `progressCallback` Callback function that will be given a {ByteProgressCallback} object containing\r\n//                      both bytesDone and percent.\r\n//\r\n// Returns a {Promise} that will accept when complete.\r\nfunction streamWithProgress(length, reader, writer, progressCallback) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let bytesDone = 0;\r\n        while (true) {\r\n            const result = yield reader.read();\r\n            if (result.done) {\r\n                if (progressCallback != null) {\r\n                    progressCallback(length, 100);\r\n                }\r\n                return;\r\n            }\r\n            const chunk = result.value;\r\n            if (chunk == null) {\r\n                throw Error('Empty chunk received during download');\r\n            }\r\n            else {\r\n                writer.write(Buffer.from(chunk));\r\n                if (progressCallback != null) {\r\n                    bytesDone += chunk.byteLength;\r\n                    const percent = length === 0 ? undefined : Math.floor(bytesDone / length * 100);\r\n                    progressCallback(bytesDone, percent);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG93bmxvYWQtZmlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9kb3dubG9hZC1maWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSx5QkFBeUI7QUFFekIsNEdBQTRHO0FBQzVHLEVBQUU7QUFDRiw2Q0FBNkM7QUFDN0MsNkNBQTZDO0FBQzdDLHVHQUF1RztBQUN2RyxtREFBbUQ7QUFDbkQseUdBQXlHO0FBQ3pHLGlHQUFpRztBQUNqRyxnRkFBZ0Y7QUFDaEYsRUFBRTtBQUNGLHNEQUFzRDtBQUN0RCxrQkFBZSxDQUFDLFNBQWUsWUFBWSxDQUN6QyxTQUFpQixFQUNqQixVQUFrQixFQUNsQixnQkFBdUMsRUFDdkMsTUFBZTs7UUFFZixNQUFNLE9BQU8sR0FBRyxJQUFJLE9BQU8sQ0FBQyxTQUFTLEVBQUU7WUFDckMsT0FBTyxFQUFFLElBQUksT0FBTyxDQUFDLEVBQUMsY0FBYyxFQUFFLDBCQUEwQixFQUFDLENBQUM7U0FDbkUsQ0FBQyxDQUFDO1FBRUgsTUFBTSxRQUFRLEdBQUcsTUFBTSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEVBQUU7WUFDaEIsTUFBTSxLQUFLLENBQUMsdUNBQXVDLFFBQVEsQ0FBQyxNQUFNLElBQUksUUFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7U0FDOUY7UUFFRCxNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDO1FBQzNCLElBQUksSUFBSSxJQUFJLElBQUksRUFBRTtZQUNoQixNQUFNLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1NBQ2pDO1FBRUQsTUFBTSxXQUFXLEdBQUcsTUFBTSxJQUFJLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUMxRixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDaEMsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRWhELE1BQU0sa0JBQWtCLENBQUMsV0FBVyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUN4RSxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDZixDQUFDO0NBQUEsQ0FBQyxDQUFDO0FBRUgsa0ZBQWtGO0FBQ2xGLEVBQUU7QUFDRiw2Q0FBNkM7QUFDN0MsNERBQTREO0FBQzVELGtEQUFrRDtBQUNsRCx1R0FBdUc7QUFDdkcsbURBQW1EO0FBQ25ELEVBQUU7QUFDRixzREFBc0Q7QUFDdEQsU0FBZSxrQkFBa0IsQ0FDL0IsTUFBYyxFQUNkLE1BQTRCLEVBQzVCLE1BQXNCLEVBQ3RCLGdCQUF1Qzs7UUFFdkMsSUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDO1FBRWxCLE9BQU8sSUFBSSxFQUFFO1lBQ1gsTUFBTSxNQUFNLEdBQUcsTUFBTSxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDbkMsSUFBSSxNQUFNLENBQUMsSUFBSSxFQUFFO2dCQUNmLElBQUksZ0JBQWdCLElBQUksSUFBSSxFQUFFO29CQUM1QixnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7aUJBQy9CO2dCQUNELE9BQU87YUFDUjtZQUVELE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFDM0IsSUFBSSxLQUFLLElBQUksSUFBSSxFQUFFO2dCQUNqQixNQUFNLEtBQUssQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO2FBQ3JEO2lCQUFNO2dCQUNMLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUNqQyxJQUFJLGdCQUFnQixJQUFJLElBQUksRUFBRTtvQkFDNUIsU0FBUyxJQUFJLEtBQUssQ0FBQyxVQUFVLENBQUM7b0JBQzlCLE1BQU0sT0FBTyxHQUF1QixNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FBQztvQkFDcEcsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO2lCQUN0QzthQUNGO1NBQ0Y7SUFDSCxDQUFDO0NBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7XHJcblxyXG4vLyBQdWJsaWM6IERvd25sb2FkIGEgZmlsZSBhbmQgc3RvcmUgaXQgb24gYSBmaWxlIHN5c3RlbSB1c2luZyBzdHJlYW1pbmcgd2l0aCBhcHByb3ByaWF0ZSBwcm9ncmVzcyBjYWxsYmFjay5cclxuLy9cclxuLy8gKiBgc291cmNlVXJsYCAgICAgICAgVXJsIHRvIGRvd25sb2FkIGZyb20uXHJcbi8vICogYHRhcmdldEZpbGVgICAgICAgIEZpbGUgcGF0aCB0byBzYXZlIHRvLlxyXG4vLyAqIGBwcm9ncmVzc0NhbGxiYWNrYCBDYWxsYmFjayBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgZ2l2ZW4gYSB7Qnl0ZVByb2dyZXNzQ2FsbGJhY2t9IG9iamVjdCBjb250YWluaW5nXHJcbi8vICAgICAgICAgICAgICAgICAgICAgIGJvdGggYnl0ZXNEb25lIGFuZCBwZXJjZW50LlxyXG4vLyAqIGBsZW5ndGhgICAgICAgICAgICBGaWxlIGxlbmd0aCBpbiBieXRlcyBpZiB5b3Ugd2FudCBwZXJjZW50YWdlIHByb2dyZXNzIGluZGljYXRpb24gYW5kIHRoZSBzZXJ2ZXIgaXNcclxuLy8gICAgICAgICAgICAgICAgICAgICAgdW5hYmxlIHRvIHByb3ZpZGUgYSBDb250ZW50LUxlbmd0aCBoZWFkZXIgYW5kIHdoaXRlbGlzdCBDT1JTIGFjY2VzcyB2aWEgYVxyXG4vLyAgICAgICAgICAgICAgICAgICAgICBgQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnMgXCJjb250ZW50LWxlbmd0aFwiYCBoZWFkZXIuXHJcbi8vXHJcbi8vIFJldHVybnMgYSB7UHJvbWlzZX0gdGhhdCB3aWxsIGFjY2VwdCB3aGVuIGNvbXBsZXRlLlxyXG5leHBvcnQgZGVmYXVsdCAoYXN5bmMgZnVuY3Rpb24gZG93bmxvYWRGaWxlKFxyXG4gIHNvdXJjZVVybDogc3RyaW5nLFxyXG4gIHRhcmdldEZpbGU6IHN0cmluZyxcclxuICBwcm9ncmVzc0NhbGxiYWNrPzogQnl0ZVByb2dyZXNzQ2FsbGJhY2ssXHJcbiAgbGVuZ3RoPzogbnVtYmVyLFxyXG4pOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zdCByZXF1ZXN0ID0gbmV3IFJlcXVlc3Qoc291cmNlVXJsLCB7XHJcbiAgICBoZWFkZXJzOiBuZXcgSGVhZGVycyh7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nfSksXHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2gocmVxdWVzdCk7XHJcbiAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgdGhyb3cgRXJyb3IoYFVuYWJsZSB0byBkb3dubG9hZCwgc2VydmVyIHJldHVybmVkICR7cmVzcG9uc2Uuc3RhdHVzfSAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XHJcbiAgfVxyXG5cclxuICBjb25zdCBib2R5ID0gcmVzcG9uc2UuYm9keTtcclxuICBpZiAoYm9keSA9PSBudWxsKSB7XHJcbiAgICB0aHJvdyBFcnJvcignTm8gcmVzcG9uc2UgYm9keScpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgZmluYWxMZW5ndGggPSBsZW5ndGggfHwgcGFyc2VJbnQocmVzcG9uc2UuaGVhZGVycy5nZXQoJ0NvbnRlbnQtTGVuZ3RoJykgfHwgJzAnLCAxMCk7XHJcbiAgY29uc3QgcmVhZGVyID0gYm9keS5nZXRSZWFkZXIoKTtcclxuICBjb25zdCB3cml0ZXIgPSBmcy5jcmVhdGVXcml0ZVN0cmVhbSh0YXJnZXRGaWxlKTtcclxuXHJcbiAgYXdhaXQgc3RyZWFtV2l0aFByb2dyZXNzKGZpbmFsTGVuZ3RoLCByZWFkZXIsIHdyaXRlciwgcHJvZ3Jlc3NDYWxsYmFjayk7XHJcbiAgd3JpdGVyLmVuZCgpO1xyXG59KTtcclxuXHJcbi8vIFN0cmVhbSBmcm9tIGEge1JlYWRhYmxlU3RyZWFtUmVhZGVyfSB0byBhIHtXcml0ZVN0cmVhbX0gd2l0aCBwcm9ncmVzcyBjYWxsYmFjay5cclxuLy9cclxuLy8gKiBgbGVuZ3RoYCAgICAgICAgICAgRmlsZSBsZW5ndGggaW4gYnl0ZXMuXHJcbi8vICogYHJlYWRlcmAgICAgICAgICAgIHtSZWFkYWJsZVN0cmVhbVJlYWRlcn0gdG8gcmVhZCBmcm9tLlxyXG4vLyAqIGB3cml0ZXJgICAgICAgICAgICB7V3JpdGVTdHJlYW19IHRvIHdyaXRlIHRvLlxyXG4vLyAqIGBwcm9ncmVzc0NhbGxiYWNrYCBDYWxsYmFjayBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgZ2l2ZW4gYSB7Qnl0ZVByb2dyZXNzQ2FsbGJhY2t9IG9iamVjdCBjb250YWluaW5nXHJcbi8vICAgICAgICAgICAgICAgICAgICAgIGJvdGggYnl0ZXNEb25lIGFuZCBwZXJjZW50LlxyXG4vL1xyXG4vLyBSZXR1cm5zIGEge1Byb21pc2V9IHRoYXQgd2lsbCBhY2NlcHQgd2hlbiBjb21wbGV0ZS5cclxuYXN5bmMgZnVuY3Rpb24gc3RyZWFtV2l0aFByb2dyZXNzKFxyXG4gIGxlbmd0aDogbnVtYmVyLFxyXG4gIHJlYWRlcjogUmVhZGFibGVTdHJlYW1SZWFkZXIsXHJcbiAgd3JpdGVyOiBmcy5Xcml0ZVN0cmVhbSxcclxuICBwcm9ncmVzc0NhbGxiYWNrPzogQnl0ZVByb2dyZXNzQ2FsbGJhY2ssXHJcbik6IFByb21pc2U8dm9pZD4ge1xyXG4gIGxldCBieXRlc0RvbmUgPSAwO1xyXG5cclxuICB3aGlsZSAodHJ1ZSkge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVhZGVyLnJlYWQoKTtcclxuICAgIGlmIChyZXN1bHQuZG9uZSkge1xyXG4gICAgICBpZiAocHJvZ3Jlc3NDYWxsYmFjayAhPSBudWxsKSB7XHJcbiAgICAgICAgcHJvZ3Jlc3NDYWxsYmFjayhsZW5ndGgsIDEwMCk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGNodW5rID0gcmVzdWx0LnZhbHVlO1xyXG4gICAgaWYgKGNodW5rID09IG51bGwpIHtcclxuICAgICAgdGhyb3cgRXJyb3IoJ0VtcHR5IGNodW5rIHJlY2VpdmVkIGR1cmluZyBkb3dubG9hZCcpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgd3JpdGVyLndyaXRlKEJ1ZmZlci5mcm9tKGNodW5rKSk7XHJcbiAgICAgIGlmIChwcm9ncmVzc0NhbGxiYWNrICE9IG51bGwpIHtcclxuICAgICAgICBieXRlc0RvbmUgKz0gY2h1bmsuYnl0ZUxlbmd0aDtcclxuICAgICAgICBjb25zdCBwZXJjZW50OiBudW1iZXIgfCB1bmRlZmluZWQgPSBsZW5ndGggPT09IDAgPyB1bmRlZmluZWQgOiBNYXRoLmZsb29yKGJ5dGVzRG9uZSAvIGxlbmd0aCAqIDEwMCk7XHJcbiAgICAgICAgcHJvZ3Jlc3NDYWxsYmFjayhieXRlc0RvbmUsIHBlcmNlbnQpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBQdWJsaWM6IFByb2dyZXNzIGNhbGxiYWNrIGZ1bmN0aW9uIHNpZ25hdHVyZSBpbmRpY2F0aW5nIHRoZSBieXRlc0RvbmUgYW5kXHJcbi8vIG9wdGlvbmFsIHBlcmNlbnRhZ2Ugd2hlbiBsZW5ndGggaXMga25vd24uXHJcbmV4cG9ydCB0eXBlIEJ5dGVQcm9ncmVzc0NhbGxiYWNrID0gKGJ5dGVzRG9uZTogbnVtYmVyLCBwZXJjZW50PzogbnVtYmVyKSA9PiB2b2lkO1xyXG4iXX0=","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonrpc = require(\"vscode-jsonrpc\");\r\nconst events_1 = require(\"events\");\r\nconst logger_1 = require(\"./logger\");\r\n__export(require(\"vscode-languageserver-protocol\"));\r\n// TypeScript wrapper around JSONRPC to implement Microsoft Language Server Protocol v3\r\n// https://github.com/Microsoft/language-server-protocol/blob/master/protocol.md\r\nclass LanguageClientConnection extends events_1.EventEmitter {\r\n    constructor(rpc, logger) {\r\n        super();\r\n        this._rpc = rpc;\r\n        this._log = logger || new logger_1.NullLogger();\r\n        this.setupLogging();\r\n        rpc.listen();\r\n        this.isConnected = true;\r\n        this._rpc.onClose(() => {\r\n            this.isConnected = false;\r\n            this._log.warn('rpc.onClose', 'The RPC connection closed unexpectedly');\r\n            this.emit('close');\r\n        });\r\n    }\r\n    setupLogging() {\r\n        this._rpc.onError((error) => this._log.error(['rpc.onError', error]));\r\n        this._rpc.onUnhandledNotification((notification) => {\r\n            if (notification.method != null && notification.params != null) {\r\n                this._log.warn(`rpc.onUnhandledNotification ${notification.method}`, notification.params);\r\n            }\r\n            else {\r\n                this._log.warn('rpc.onUnhandledNotification', notification);\r\n            }\r\n        });\r\n        this._rpc.onNotification((...args) => this._log.debug('rpc.onNotification', args));\r\n    }\r\n    dispose() {\r\n        this._rpc.dispose();\r\n    }\r\n    // Public: Initialize the language server with necessary {InitializeParams}.\r\n    //\r\n    // * `params` The {InitializeParams} containing processId, rootPath, options and\r\n    //            server capabilities.\r\n    //\r\n    // Returns a {Promise} containing the {InitializeResult} with details of the server's\r\n    // capabilities.\r\n    initialize(params) {\r\n        return this._sendRequest('initialize', params);\r\n    }\r\n    // Public: Send an `initialized` notification to the language server.\r\n    initialized() {\r\n        this._sendNotification('initialized', {});\r\n    }\r\n    // Public: Send a `shutdown` request to the language server.\r\n    shutdown() {\r\n        return this._sendRequest('shutdown');\r\n    }\r\n    // Public: Send an `exit` notification to the language server.\r\n    exit() {\r\n        this._sendNotification('exit');\r\n    }\r\n    // Public: Register a callback for a custom message.\r\n    //\r\n    // * `method`   A string containing the name of the message to listen for.\r\n    // * `callback` The function to be called when the message is received.\r\n    //              The payload from the message is passed to the function.\r\n    onCustom(method, callback) {\r\n        this._onNotification({ method }, callback);\r\n    }\r\n    // Public: Send a custom request\r\n    //\r\n    // * `method`   A string containing the name of the request message.\r\n    // * `params`   The method's parameters\r\n    sendCustomRequest(method, params) {\r\n        return this._sendRequest(method, params);\r\n    }\r\n    // Public: Send a custom notification\r\n    //\r\n    // * `method`   A string containing the name of the notification message.\r\n    // * `params`  The method's parameters\r\n    sendCustomNotification(method, params) {\r\n        this._sendNotification(method, params);\r\n    }\r\n    // Public: Register a callback for the `window/showMessage` message.\r\n    //\r\n    // * `callback` The function to be called when the `window/showMessage` message is\r\n    //              received with {ShowMessageParams} being passed.\r\n    onShowMessage(callback) {\r\n        this._onNotification({ method: 'window/showMessage' }, callback);\r\n    }\r\n    // Public: Register a callback for the `window/showMessageRequest` message.\r\n    //\r\n    // * `callback` The function to be called when the `window/showMessageRequest` message is\r\n    //              received with {ShowMessageRequestParam}' being passed.\r\n    // Returns a {Promise} containing the {MessageActionItem}.\r\n    onShowMessageRequest(callback) {\r\n        this._onRequest({ method: 'window/showMessageRequest' }, callback);\r\n    }\r\n    // Public: Register a callback for the `window/logMessage` message.\r\n    //\r\n    // * `callback` The function to be called when the `window/logMessage` message is\r\n    //              received with {LogMessageParams} being passed.\r\n    onLogMessage(callback) {\r\n        this._onNotification({ method: 'window/logMessage' }, callback);\r\n    }\r\n    // Public: Register a callback for the `telemetry/event` message.\r\n    //\r\n    // * `callback` The function to be called when the `telemetry/event` message is\r\n    //              received with any parameters received being passed on.\r\n    onTelemetryEvent(callback) {\r\n        this._onNotification({ method: 'telemetry/event' }, callback);\r\n    }\r\n    // Public: Register a callback for the `workspace/applyEdit` message.\r\n    //\r\n    // * `callback` The function to be called when the `workspace/applyEdit` message is\r\n    //              received with {ApplyWorkspaceEditParams} being passed.\r\n    // Returns a {Promise} containing the {ApplyWorkspaceEditResponse}.\r\n    onApplyEdit(callback) {\r\n        this._onRequest({ method: 'workspace/applyEdit' }, callback);\r\n    }\r\n    // Public: Send a `workspace/didChangeConfiguration` notification.\r\n    //\r\n    // * `params` The {DidChangeConfigurationParams} containing the new configuration.\r\n    didChangeConfiguration(params) {\r\n        this._sendNotification('workspace/didChangeConfiguration', params);\r\n    }\r\n    // Public: Send a `textDocument/didOpen` notification.\r\n    //\r\n    // * `params` The {DidOpenTextDocumentParams} containing the opened text document details.\r\n    didOpenTextDocument(params) {\r\n        this._sendNotification('textDocument/didOpen', params);\r\n    }\r\n    // Public: Send a `textDocument/didChange` notification.\r\n    //\r\n    // * `params` The {DidChangeTextDocumentParams} containing the changed text document\r\n    // details including the version number and actual text changes.\r\n    didChangeTextDocument(params) {\r\n        this._sendNotification('textDocument/didChange', params);\r\n    }\r\n    // Public: Send a `textDocument/didClose` notification.\r\n    //\r\n    // * `params` The {DidCloseTextDocumentParams} containing the opened text document details.\r\n    didCloseTextDocument(params) {\r\n        this._sendNotification('textDocument/didClose', params);\r\n    }\r\n    // Public: Send a `textDocument/willSave` notification.\r\n    //\r\n    // * `params` The {WillSaveTextDocumentParams} containing the to-be-saved text document\r\n    // details and the reason for the save.\r\n    willSaveTextDocument(params) {\r\n        this._sendNotification('textDocument/willSave', params);\r\n    }\r\n    // Public: Send a `textDocument/willSaveWaitUntil` notification.\r\n    //\r\n    // * `params` The {WillSaveTextDocumentParams} containing the to-be-saved text document\r\n    // details and the reason for the save.\r\n    // Returns a {Promise} containing an {Array} of {TextEdit}s to be applied to the text\r\n    // document before it is saved.\r\n    willSaveWaitUntilTextDocument(params) {\r\n        return this._sendRequest('textDocument/willSaveWaitUntil', params);\r\n    }\r\n    // Public: Send a `textDocument/didSave` notification.\r\n    //\r\n    // * `params` The {DidSaveTextDocumentParams} containing the saved text document details.\r\n    didSaveTextDocument(params) {\r\n        this._sendNotification('textDocument/didSave', params);\r\n    }\r\n    // Public: Send a `workspace/didChangeWatchedFiles` notification.\r\n    //\r\n    // * `params` The {DidChangeWatchedFilesParams} containing the array of {FileEvent}s that\r\n    // have been observed upon the watched files.\r\n    didChangeWatchedFiles(params) {\r\n        this._sendNotification('workspace/didChangeWatchedFiles', params);\r\n    }\r\n    // Public: Register a callback for the `textDocument/publishDiagnostics` message.\r\n    //\r\n    // * `callback` The function to be called when the `textDocument/publishDiagnostics` message is\r\n    //              received a {PublishDiagnosticsParams} containing new {Diagnostic} messages for a given uri.\r\n    onPublishDiagnostics(callback) {\r\n        this._onNotification({ method: 'textDocument/publishDiagnostics' }, callback);\r\n    }\r\n    // Public: Send a `textDocument/completion` request.\r\n    //\r\n    // * `params`            The {TextDocumentPositionParams} or {CompletionParams} for which\r\n    //                       {CompletionItem}s are desired.\r\n    // * `cancellationToken` The {CancellationToken} that is used to cancel this request if\r\n    //                       necessary.\r\n    // Returns a {Promise} containing either a {CompletionList} or an {Array} of {CompletionItem}s.\r\n    completion(params, cancellationToken) {\r\n        // Cancel prior request if necessary\r\n        return this._sendRequest('textDocument/completion', params, cancellationToken);\r\n    }\r\n    // Public: Send a `completionItem/resolve` request.\r\n    //\r\n    // * `params` The {CompletionItem} for which a fully resolved {CompletionItem} is desired.\r\n    // Returns a {Promise} containing a fully resolved {CompletionItem}.\r\n    completionItemResolve(params) {\r\n        return this._sendRequest('completionItem/resolve', params);\r\n    }\r\n    // Public: Send a `textDocument/hover` request.\r\n    //\r\n    // * `params` The {TextDocumentPositionParams} for which a {Hover} is desired.\r\n    // Returns a {Promise} containing a {Hover}.\r\n    hover(params) {\r\n        return this._sendRequest('textDocument/hover', params);\r\n    }\r\n    // Public: Send a `textDocument/signatureHelp` request.\r\n    //\r\n    // * `params` The {TextDocumentPositionParams} for which a {SignatureHelp} is desired.\r\n    // Returns a {Promise} containing a {SignatureHelp}.\r\n    signatureHelp(params) {\r\n        return this._sendRequest('textDocument/signatureHelp', params);\r\n    }\r\n    // Public: Send a `textDocument/definition` request.\r\n    //\r\n    // * `params` The {TextDocumentPositionParams} of a symbol for which one or more {Location}s\r\n    // that define that symbol are required.\r\n    // Returns a {Promise} containing either a single {Location} or an {Array} of many {Location}s.\r\n    gotoDefinition(params) {\r\n        return this._sendRequest('textDocument/definition', params);\r\n    }\r\n    // Public: Send a `textDocument/references` request.\r\n    //\r\n    // * `params` The {TextDocumentPositionParams} of a symbol for which all referring {Location}s\r\n    // are desired.\r\n    // Returns a {Promise} containing an {Array} of {Location}s that reference this symbol.\r\n    findReferences(params) {\r\n        return this._sendRequest('textDocument/references', params);\r\n    }\r\n    // Public: Send a `textDocument/documentHighlight` request.\r\n    //\r\n    // * `params` The {TextDocumentPositionParams} of a symbol for which all highlights are desired.\r\n    // Returns a {Promise} containing an {Array} of {DocumentHighlight}s that can be used to\r\n    // highlight this symbol.\r\n    documentHighlight(params) {\r\n        return this._sendRequest('textDocument/documentHighlight', params);\r\n    }\r\n    // Public: Send a `textDocument/documentSymbol` request.\r\n    //\r\n    // * `params`            The {DocumentSymbolParams} that identifies the document for which\r\n    //                       symbols are desired.\r\n    // * `cancellationToken` The {CancellationToken} that is used to cancel this request if\r\n    //                       necessary.\r\n    // Returns a {Promise} containing an {Array} of {SymbolInformation}s that can be used to\r\n    // navigate this document.\r\n    documentSymbol(params, cancellationToken) {\r\n        return this._sendRequest('textDocument/documentSymbol', params);\r\n    }\r\n    // Public: Send a `workspace/symbol` request.\r\n    //\r\n    // * `params` The {WorkspaceSymbolParams} containing the query string to search the workspace for.\r\n    // Returns a {Promise} containing an {Array} of {SymbolInformation}s that identify where the query\r\n    // string occurs within the workspace.\r\n    workspaceSymbol(params) {\r\n        return this._sendRequest('workspace/symbol', params);\r\n    }\r\n    // Public: Send a `textDocument/codeAction` request.\r\n    //\r\n    // * `params` The {CodeActionParams} identifying the document, range and context for the code action.\r\n    // Returns a {Promise} containing an {Array} of {Commands}s that can be performed against the given\r\n    // documents range.\r\n    codeAction(params) {\r\n        return this._sendRequest('textDocument/codeAction', params);\r\n    }\r\n    // Public: Send a `textDocument/codeLens` request.\r\n    //\r\n    // * `params` The {CodeLensParams} identifying the document for which code lens commands are desired.\r\n    // Returns a {Promise} containing an {Array} of {CodeLens}s that associate commands and data with\r\n    // specified ranges within the document.\r\n    codeLens(params) {\r\n        return this._sendRequest('textDocument/codeLens', params);\r\n    }\r\n    // Public: Send a `codeLens/resolve` request.\r\n    //\r\n    // * `params` The {CodeLens} identifying the code lens to be resolved with full detail.\r\n    // Returns a {Promise} containing the {CodeLens} fully resolved.\r\n    codeLensResolve(params) {\r\n        return this._sendRequest('codeLens/resolve', params);\r\n    }\r\n    // Public: Send a `textDocument/documentLink` request.\r\n    //\r\n    // * `params` The {DocumentLinkParams} identifying the document for which links should be identified.\r\n    // Returns a {Promise} containing an {Array} of {DocumentLink}s relating uri's to specific ranges\r\n    // within the document.\r\n    documentLink(params) {\r\n        return this._sendRequest('textDocument/documentLink', params);\r\n    }\r\n    // Public: Send a `documentLink/resolve` request.\r\n    //\r\n    // * `params` The {DocumentLink} identifying the document link to be resolved with full detail.\r\n    // Returns a {Promise} containing the {DocumentLink} fully resolved.\r\n    documentLinkResolve(params) {\r\n        return this._sendRequest('documentLink/resolve', params);\r\n    }\r\n    // Public: Send a `textDocument/formatting` request.\r\n    //\r\n    // * `params` The {DocumentFormattingParams} identifying the document to be formatted as well as\r\n    // additional formatting preferences.\r\n    // Returns a {Promise} containing an {Array} of {TextEdit}s to be applied to the document to\r\n    // correctly reformat it.\r\n    documentFormatting(params) {\r\n        return this._sendRequest('textDocument/formatting', params);\r\n    }\r\n    // Public: Send a `textDocument/rangeFormatting` request.\r\n    //\r\n    // * `params` The {DocumentRangeFormattingParams} identifying the document and range to be formatted\r\n    // as well as additional formatting preferences.\r\n    // Returns a {Promise} containing an {Array} of {TextEdit}s to be applied to the document to\r\n    // correctly reformat it.\r\n    documentRangeFormatting(params) {\r\n        return this._sendRequest('textDocument/rangeFormatting', params);\r\n    }\r\n    // Public: Send a `textDocument/onTypeFormatting` request.\r\n    //\r\n    // * `params` The {DocumentOnTypeFormattingParams} identifying the document to be formatted,\r\n    // the character that was typed and at what position as well as additional formatting preferences.\r\n    // Returns a {Promise} containing an {Array} of {TextEdit}s to be applied to the document to\r\n    // correctly reformat it.\r\n    documentOnTypeFormatting(params) {\r\n        return this._sendRequest('textDocument/onTypeFormatting', params);\r\n    }\r\n    // Public: Send a `textDocument/rename` request.\r\n    //\r\n    // * `params` The {RenameParams} identifying the document containing the symbol to be renamed,\r\n    // as well as the position and new name.\r\n    // Returns a {Promise} containing an {WorkspaceEdit} that contains a list of {TextEdit}s either\r\n    // on the changes property (keyed by uri) or the documentChanges property containing\r\n    // an {Array} of {TextDocumentEdit}s (preferred).\r\n    rename(params) {\r\n        return this._sendRequest('textDocument/rename', params);\r\n    }\r\n    // Public: Send a `workspace/executeCommand` request.\r\n    //\r\n    // * `params` The {ExecuteCommandParams} specifying the command and arguments\r\n    // the language server should execute (these commands are usually from {CodeLens} or {CodeAction}\r\n    // responses).\r\n    // Returns a {Promise} containing anything.\r\n    executeCommand(params) {\r\n        return this._sendRequest('workspace/executeCommand', params);\r\n    }\r\n    _onRequest(type, callback) {\r\n        this._rpc.onRequest(type.method, (value) => {\r\n            this._log.debug(`rpc.onRequest ${type.method}`, value);\r\n            return callback(value);\r\n        });\r\n    }\r\n    _onNotification(type, callback) {\r\n        this._rpc.onNotification(type.method, (value) => {\r\n            this._log.debug(`rpc.onNotification ${type.method}`, value);\r\n            callback(value);\r\n        });\r\n    }\r\n    _sendNotification(method, args) {\r\n        this._log.debug(`rpc.sendNotification ${method}`, args);\r\n        this._rpc.sendNotification(method, args);\r\n    }\r\n    _sendRequest(method, args, cancellationToken) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._log.debug(`rpc.sendRequest ${method} sending`, args);\r\n            try {\r\n                const start = performance.now();\r\n                let result;\r\n                if (cancellationToken) {\r\n                    result = yield this._rpc.sendRequest(method, args, cancellationToken);\r\n                }\r\n                else {\r\n                    // If cancellationToken is null or undefined, don't add the third\r\n                    // argument otherwise vscode-jsonrpc will send an additional, null\r\n                    // message parameter to the request\r\n                    result = yield this._rpc.sendRequest(method, args);\r\n                }\r\n                const took = performance.now() - start;\r\n                this._log.debug(`rpc.sendRequest ${method} received (${Math.floor(took)}ms)`, result);\r\n                return result;\r\n            }\r\n            catch (e) {\r\n                const responseError = e;\r\n                if (cancellationToken && responseError.code === jsonrpc.ErrorCodes.RequestCancelled) {\r\n                    this._log.debug(`rpc.sendRequest ${method} was cancelled`);\r\n                }\r\n                else {\r\n                    this._log.error(`rpc.sendRequest ${method} threw`, e);\r\n                }\r\n                throw e;\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.LanguageClientConnection = LanguageClientConnection;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\n// tslint:disable:no-console\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ConsoleLogger {\r\n    constructor(prefix) {\r\n        this.prefix = prefix;\r\n    }\r\n    warn(...args) {\r\n        console.warn(...this.format(args));\r\n    }\r\n    error(...args) {\r\n        console.error(...this.format(args));\r\n    }\r\n    info(...args) {\r\n        console.info(...this.format(args));\r\n    }\r\n    debug(...args) {\r\n        console.debug(...this.format(args));\r\n    }\r\n    log(...args) {\r\n        console.log(...this.format(args));\r\n    }\r\n    format(args_) {\r\n        const args = args_.filter((a) => a != null);\r\n        if (typeof args[0] === 'string') {\r\n            if (args.length === 1) {\r\n                return [`${this.prefix} ${args[0]}`];\r\n            }\r\n            else if (args.length === 2) {\r\n                return [`${this.prefix} ${args[0]}`, args[1]];\r\n            }\r\n            else {\r\n                return [`${this.prefix} ${args[0]}`, args.slice(1)];\r\n            }\r\n        }\r\n        return [`${this.prefix}`, args];\r\n    }\r\n}\r\nexports.ConsoleLogger = ConsoleLogger;\r\nclass NullLogger {\r\n    warn(...args) { }\r\n    error(...args) { }\r\n    info(...args) { }\r\n    log(...args) { }\r\n    debug(...args) { }\r\n}\r\nexports.NullLogger = NullLogger;\r\nclass FilteredLogger {\r\n    constructor(logger, predicate) {\r\n        this._logger = logger;\r\n        this._predicate = predicate || ((level, args) => true);\r\n    }\r\n    warn(...args) {\r\n        if (this._predicate('warn', args)) {\r\n            this._logger.warn(...args);\r\n        }\r\n    }\r\n    error(...args) {\r\n        if (this._predicate('error', args)) {\r\n            this._logger.error(...args);\r\n        }\r\n    }\r\n    info(...args) {\r\n        if (this._predicate('info', args)) {\r\n            this._logger.info(...args);\r\n        }\r\n    }\r\n    debug(...args) {\r\n        if (this._predicate('debug', args)) {\r\n            this._logger.debug(...args);\r\n        }\r\n    }\r\n    log(...args) {\r\n        if (this._predicate('log', args)) {\r\n            this._logger.log(...args);\r\n        }\r\n    }\r\n}\r\nFilteredLogger.UserLevelFilter = (level, args) => level === 'warn' || level === 'error';\r\nFilteredLogger.DeveloperLevelFilter = (level, args) => true;\r\nexports.FilteredLogger = FilteredLogger;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vbGliL2xvZ2dlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUMsNEJBQTRCOztBQVU3QixNQUFhLGFBQWE7SUFHeEIsWUFBWSxNQUFjO1FBQ3hCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxJQUFJLENBQUMsR0FBRyxJQUFXO1FBQ3hCLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVNLEtBQUssQ0FBQyxHQUFHLElBQVc7UUFDekIsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRU0sSUFBSSxDQUFDLEdBQUcsSUFBVztRQUN4QixPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFTSxLQUFLLENBQUMsR0FBRyxJQUFXO1FBQ3pCLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVNLEdBQUcsQ0FBQyxHQUFHLElBQVc7UUFDdkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRU0sTUFBTSxDQUFDLEtBQVU7UUFDdEIsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDO1FBQ2pELElBQUksT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssUUFBUSxFQUFFO1lBQy9C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NUUsd0NBeUNDIiwic291cmNlc0NvbnRlbnQiOlsiIC8vIHRzbGludDpkaXNhYmxlOm5vLWNvbnNvbGVcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTG9nZ2VyIHtcclxuICB3YXJuKC4uLmFyZ3M6IGFueVtdKTogdm9pZDtcclxuICBlcnJvciguLi5hcmdzOiBhbnlbXSk6IHZvaWQ7XHJcbiAgaW5mbyguLi5hcmdzOiBhbnlbXSk6IHZvaWQ7XHJcbiAgbG9nKC4uLmFyZ3M6IGFueVtdKTogdm9pZDtcclxuICBkZWJ1ZyguLi5hcmdzOiBhbnlbXSk6IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDb25zb2xlTG9nZ2VyIHtcclxuICBwdWJsaWMgcHJlZml4OiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByZWZpeDogc3RyaW5nKSB7XHJcbiAgICB0aGlzLnByZWZpeCA9IHByZWZpeDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyB3YXJuKC4uLmFyZ3M6IGFueVtdKTogdm9pZCB7XHJcbiAgICBjb25zb2xlLndhcm4oLi4udGhpcy5mb3JtYXQoYXJncykpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGVycm9yKC4uLmFyZ3M6IGFueVtdKTogdm9pZCB7XHJcbiAgICBjb25zb2xlLmVycm9yKC4uLnRoaXMuZm9ybWF0KGFyZ3MpKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBpbmZvKC4uLmFyZ3M6IGFueVtdKTogdm9pZCB7XHJcbiAgICBjb25zb2xlLmluZm8oLi4udGhpcy5mb3JtYXQoYXJncykpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGRlYnVnKC4uLmFyZ3M6IGFueVtdKTogdm9pZCB7XHJcbiAgICBjb25zb2xlLmRlYnVnKC4uLnRoaXMuZm9ybWF0KGFyZ3MpKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBsb2coLi4uYXJnczogYW55W10pOiB2b2lkIHtcclxuICAgIGNvbnNvbGUubG9nKC4uLnRoaXMuZm9ybWF0KGFyZ3MpKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBmb3JtYXQoYXJnc186IGFueSk6IGFueSB7XHJcbiAgICBjb25zdCBhcmdzID0gYXJnc18uZmlsdGVyKChhOiBhbnkpID0+IGEgIT0gbnVsbCk7XHJcbiAgICBpZiAodHlwZW9mIGFyZ3NbMF0gPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIGlmIChhcmdzLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgIHJldHVybiBbYCR7dGhpcy5wcmVmaXh9ICR7YXJnc1swXX1gXTtcclxuICAgICAgfSBlbHNlIGlmIChhcmdzLmxlbmd0aCA9PT0gMikge1xyXG4gICAgICAgIHJldHVybiBbYCR7dGhpcy5wcmVmaXh9ICR7YXJnc1swXX1gLCBhcmdzWzFdXTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gW2Ake3RoaXMucHJlZml4fSAke2FyZ3NbMF19YCwgYXJncy5zbGljZSgxKV07XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gW2Ake3RoaXMucHJlZml4fWAsIGFyZ3NdO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIE51bGxMb2dnZXIge1xyXG4gIHB1YmxpYyB3YXJuKC4uLmFyZ3M6IGFueVtdKTogdm9pZCB7fVxyXG4gIHB1YmxpYyBlcnJvciguLi5hcmdzOiBhbnlbXSk6IHZvaWQge31cclxuICBwdWJsaWMgaW5mbyguLi5hcmdzOiBhbnlbXSk6IHZvaWQge31cclxuICBwdWJsaWMgbG9nKC4uLmFyZ3M6IGFueVtdKTogdm9pZCB7fVxyXG4gIHB1YmxpYyBkZWJ1ZyguLi5hcmdzOiBhbnlbXSk6IHZvaWQge31cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEZpbHRlcmVkTG9nZ2VyIHtcclxuICBwcml2YXRlIF9sb2dnZXI6IExvZ2dlcjtcclxuICBwcml2YXRlIF9wcmVkaWNhdGU6IChsZXZlbDogc3RyaW5nLCBhcmdzOiBhbnlbXSkgPT4gYm9vbGVhbjtcclxuXHJcbiAgcHVibGljIHN0YXRpYyBVc2VyTGV2ZWxGaWx0ZXIgPSAobGV2ZWw6IHN0cmluZywgYXJnczogYW55W10pID0+IGxldmVsID09PSAnd2FybicgfHwgbGV2ZWwgPT09ICdlcnJvcic7XHJcbiAgcHVibGljIHN0YXRpYyBEZXZlbG9wZXJMZXZlbEZpbHRlciA9IChsZXZlbDogc3RyaW5nLCBhcmdzOiBhbnlbXSkgPT4gdHJ1ZTtcclxuXHJcbiAgY29uc3RydWN0b3IobG9nZ2VyOiBMb2dnZXIsIHByZWRpY2F0ZT86IChsZXZlbDogc3RyaW5nLCBhcmdzOiBhbnlbXSkgPT4gYm9vbGVhbikge1xyXG4gICAgdGhpcy5fbG9nZ2VyID0gbG9nZ2VyO1xyXG4gICAgdGhpcy5fcHJlZGljYXRlID0gcHJlZGljYXRlIHx8ICgobGV2ZWwsIGFyZ3MpID0+IHRydWUpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHdhcm4oLi4uYXJnczogYW55W10pOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLl9wcmVkaWNhdGUoJ3dhcm4nLCBhcmdzKSkge1xyXG4gICAgICB0aGlzLl9sb2dnZXIud2FybiguLi5hcmdzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBlcnJvciguLi5hcmdzOiBhbnlbXSk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuX3ByZWRpY2F0ZSgnZXJyb3InLCBhcmdzKSkge1xyXG4gICAgICB0aGlzLl9sb2dnZXIuZXJyb3IoLi4uYXJncyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgaW5mbyguLi5hcmdzOiBhbnlbXSk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuX3ByZWRpY2F0ZSgnaW5mbycsIGFyZ3MpKSB7XHJcbiAgICAgIHRoaXMuX2xvZ2dlci5pbmZvKC4uLmFyZ3MpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGRlYnVnKC4uLmFyZ3M6IGFueVtdKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5fcHJlZGljYXRlKCdkZWJ1ZycsIGFyZ3MpKSB7XHJcbiAgICAgIHRoaXMuX2xvZ2dlci5kZWJ1ZyguLi5hcmdzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBsb2coLi4uYXJnczogYW55W10pOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLl9wcmVkaWNhdGUoJ2xvZycsIGFyZ3MpKSB7XHJcbiAgICAgIHRoaXMuX2xvZ2dlci5sb2coLi4uYXJncyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==","\"use strict\";\r\n// tslint:disable:no-reference\r\n/// <reference path=\"../typings/atom/index.d.ts\"/>\r\n/// <reference path=\"../typings/atom-ide/index.d.ts\"/>\r\n// tslint:enable:no-reference\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst auto_languageclient_1 = require(\"./auto-languageclient\");\r\nexports.AutoLanguageClient = auto_languageclient_1.default;\r\nconst convert_1 = require(\"./convert\");\r\nexports.Convert = convert_1.default;\r\nconst logger_1 = require(\"./logger\");\r\nexports.ConsoleLogger = logger_1.ConsoleLogger;\r\nexports.FilteredLogger = logger_1.FilteredLogger;\r\nconst download_file_1 = require(\"./download-file\");\r\nexports.DownloadFile = download_file_1.default;\r\nconst linter_push_v2_adapter_1 = require(\"./adapters/linter-push-v2-adapter\");\r\nexports.LinterPushV2Adapter = linter_push_v2_adapter_1.default;\r\n__export(require(\"./auto-languageclient\"));\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSw4QkFBOEI7QUFDOUIsa0RBQWtEO0FBQ2xELHNEQUFzRDtBQUN0RCw2QkFBNkI7Ozs7O0FBRTdCLCtEQUF1RDtBQVFyRCw2QkFSSyw2QkFBa0IsQ0FRTDtBQVBwQix1Q0FBZ0M7QUFROUIsa0JBUkssaUJBQU8sQ0FRTDtBQVBULHFDQUFpRTtBQVMvRCx3QkFUZSxzQkFBYSxDQVNmO0FBQ2IseUJBVjhCLHVCQUFjLENBVTlCO0FBVGhCLG1EQUEyQztBQVV6Qyx1QkFWSyx1QkFBWSxDQVVMO0FBVGQsOEVBQW9FO0FBVWxFLDhCQVZLLGdDQUFtQixDQVVMO0FBUnJCLDJDQUFzQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRzbGludDpkaXNhYmxlOm5vLXJlZmVyZW5jZVxyXG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vdHlwaW5ncy9hdG9tL2luZGV4LmQudHNcIi8+XHJcbi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi90eXBpbmdzL2F0b20taWRlL2luZGV4LmQudHNcIi8+XHJcbi8vIHRzbGludDplbmFibGU6bm8tcmVmZXJlbmNlXHJcblxyXG5pbXBvcnQgQXV0b0xhbmd1YWdlQ2xpZW50IGZyb20gJy4vYXV0by1sYW5ndWFnZWNsaWVudCc7XHJcbmltcG9ydCBDb252ZXJ0IGZyb20gJy4vY29udmVydCc7XHJcbmltcG9ydCB7IExvZ2dlciwgQ29uc29sZUxvZ2dlciwgRmlsdGVyZWRMb2dnZXIgfSBmcm9tICcuL2xvZ2dlcic7XHJcbmltcG9ydCBEb3dubG9hZEZpbGUgZnJvbSAnLi9kb3dubG9hZC1maWxlJztcclxuaW1wb3J0IExpbnRlclB1c2hWMkFkYXB0ZXIgZnJvbSAnLi9hZGFwdGVycy9saW50ZXItcHVzaC12Mi1hZGFwdGVyJztcclxuXHJcbmV4cG9ydCAqIGZyb20gJy4vYXV0by1sYW5ndWFnZWNsaWVudCc7XHJcbmV4cG9ydCB7XHJcbiAgQXV0b0xhbmd1YWdlQ2xpZW50LFxyXG4gIENvbnZlcnQsXHJcbiAgTG9nZ2VyLFxyXG4gIENvbnNvbGVMb2dnZXIsXHJcbiAgRmlsdGVyZWRMb2dnZXIsXHJcbiAgRG93bmxvYWRGaWxlLFxyXG4gIExpbnRlclB1c2hWMkFkYXB0ZXIsXHJcbn07XHJcbiJdfQ==","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst convert_1 = require(\"./convert\");\r\nconst path = require(\"path\");\r\nconst atom_1 = require(\"atom\");\r\n// Manages the language server lifecycles and their associated objects necessary\r\n// for adapting them to Atom IDE.\r\nclass ServerManager {\r\n    constructor(_startServer, _logger, _startForEditor, _changeWatchedFileFilter, _reportBusyWhile, _languageServerName) {\r\n        this._startServer = _startServer;\r\n        this._logger = _logger;\r\n        this._startForEditor = _startForEditor;\r\n        this._changeWatchedFileFilter = _changeWatchedFileFilter;\r\n        this._reportBusyWhile = _reportBusyWhile;\r\n        this._languageServerName = _languageServerName;\r\n        this._activeServers = [];\r\n        this._startingServerPromises = new Map();\r\n        this._restartCounterPerProject = new Map();\r\n        this._stoppingServers = [];\r\n        this._disposable = new atom_1.CompositeDisposable();\r\n        this._editorToServer = new Map();\r\n        this._normalizedProjectPaths = [];\r\n        this._isStarted = false;\r\n        this.updateNormalizedProjectPaths();\r\n    }\r\n    startListening() {\r\n        if (!this._isStarted) {\r\n            this._disposable = new atom_1.CompositeDisposable();\r\n            this._disposable.add(atom.textEditors.observe(this.observeTextEditors.bind(this)));\r\n            this._disposable.add(atom.project.onDidChangePaths(this.projectPathsChanged.bind(this)));\r\n            if (atom.project.onDidChangeFiles) {\r\n                this._disposable.add(atom.project.onDidChangeFiles(this.projectFilesChanged.bind(this)));\r\n            }\r\n        }\r\n    }\r\n    stopListening() {\r\n        if (this._isStarted) {\r\n            this._disposable.dispose();\r\n            this._isStarted = false;\r\n        }\r\n    }\r\n    observeTextEditors(editor) {\r\n        // Track grammar changes for opened editors\r\n        const listener = editor.observeGrammar((_grammar) => this._handleGrammarChange(editor));\r\n        this._disposable.add(editor.onDidDestroy(() => listener.dispose()));\r\n        // Try to see if editor can have LS connected to it\r\n        this._handleTextEditor(editor);\r\n    }\r\n    _handleTextEditor(editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editorToServer.has(editor)) {\r\n                // editor hasn't been processed yet, so process it by allocating LS for it if necessary\r\n                const server = yield this.getServer(editor, { shouldStart: true });\r\n                if (server != null) {\r\n                    // There LS for the editor (either started now and already running)\r\n                    this._editorToServer.set(editor, server);\r\n                    this._disposable.add(editor.onDidDestroy(() => {\r\n                        this._editorToServer.delete(editor);\r\n                        this.stopUnusedServers();\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _handleGrammarChange(editor) {\r\n        if (this._startForEditor(editor)) {\r\n            // If editor is interesting for LS process the editor further to attempt to start LS if needed\r\n            this._handleTextEditor(editor);\r\n        }\r\n        else {\r\n            // Editor is not supported by the LS\r\n            const server = this._editorToServer.get(editor);\r\n            // If LS is running for the unsupported editor then disconnect the editor from LS and shut down LS if necessary\r\n            if (server) {\r\n                // Remove editor from the cache\r\n                this._editorToServer.delete(editor);\r\n                // Shut down LS if it's used by any other editor\r\n                this.stopUnusedServers();\r\n            }\r\n        }\r\n    }\r\n    getActiveServers() {\r\n        return this._activeServers.slice();\r\n    }\r\n    getServer(textEditor, { shouldStart } = { shouldStart: false }) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const finalProjectPath = this.determineProjectPath(textEditor);\r\n            if (finalProjectPath == null) {\r\n                // Files not yet saved have no path\r\n                return null;\r\n            }\r\n            const foundActiveServer = this._activeServers.find((s) => finalProjectPath === s.projectPath);\r\n            if (foundActiveServer) {\r\n                return foundActiveServer;\r\n            }\r\n            const startingPromise = this._startingServerPromises.get(finalProjectPath);\r\n            if (startingPromise) {\r\n                return startingPromise;\r\n            }\r\n            return shouldStart && this._startForEditor(textEditor) ? yield this.startServer(finalProjectPath) : null;\r\n        });\r\n    }\r\n    startServer(projectPath) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._logger.debug(`Server starting \"${projectPath}\"`);\r\n            const startingPromise = this._startServer(projectPath);\r\n            this._startingServerPromises.set(projectPath, startingPromise);\r\n            try {\r\n                const startedActiveServer = yield startingPromise;\r\n                this._activeServers.push(startedActiveServer);\r\n                this._startingServerPromises.delete(projectPath);\r\n                this._logger.debug(`Server started \"${projectPath}\" (pid ${startedActiveServer.process.pid})`);\r\n                return startedActiveServer;\r\n            }\r\n            catch (e) {\r\n                this._startingServerPromises.delete(projectPath);\r\n                throw e;\r\n            }\r\n        });\r\n    }\r\n    stopUnusedServers() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const usedServers = new Set(this._editorToServer.values());\r\n            const unusedServers = this._activeServers.filter((s) => !usedServers.has(s));\r\n            if (unusedServers.length > 0) {\r\n                this._logger.debug(`Stopping ${unusedServers.length} unused servers`);\r\n                yield Promise.all(unusedServers.map((s) => this.stopServer(s)));\r\n            }\r\n        });\r\n    }\r\n    stopAllServers() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            for (const [projectPath, restartCounter] of this._restartCounterPerProject) {\r\n                clearTimeout(restartCounter.timerId);\r\n                this._restartCounterPerProject.delete(projectPath);\r\n            }\r\n            yield Promise.all(this._activeServers.map((s) => this.stopServer(s)));\r\n        });\r\n    }\r\n    restartAllServers() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.stopListening();\r\n            yield this.stopAllServers();\r\n            this._editorToServer = new Map();\r\n            this.startListening();\r\n        });\r\n    }\r\n    hasServerReachedRestartLimit(server) {\r\n        let restartCounter = this._restartCounterPerProject.get(server.projectPath);\r\n        if (!restartCounter) {\r\n            restartCounter = {\r\n                restarts: 0,\r\n                timerId: setTimeout(() => {\r\n                    this._restartCounterPerProject.delete(server.projectPath);\r\n                }, 3 * 60 * 1000 /* 3 minutes */),\r\n            };\r\n            this._restartCounterPerProject.set(server.projectPath, restartCounter);\r\n        }\r\n        return ++restartCounter.restarts > 5;\r\n    }\r\n    stopServer(server) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this._reportBusyWhile(`Stopping ${this._languageServerName} for ${path.basename(server.projectPath)}`, () => __awaiter(this, void 0, void 0, function* () {\r\n                this._logger.debug(`Server stopping \"${server.projectPath}\"`);\r\n                // Immediately remove the server to prevent further usage.\r\n                // If we re-open the file after this point, we'll get a new server.\r\n                this._activeServers.splice(this._activeServers.indexOf(server), 1);\r\n                this._stoppingServers.push(server);\r\n                server.disposable.dispose();\r\n                if (server.connection.isConnected) {\r\n                    yield server.connection.shutdown();\r\n                }\r\n                for (const [editor, mappedServer] of this._editorToServer) {\r\n                    if (mappedServer === server) {\r\n                        this._editorToServer.delete(editor);\r\n                    }\r\n                }\r\n                this.exitServer(server);\r\n                this._stoppingServers.splice(this._stoppingServers.indexOf(server), 1);\r\n            }));\r\n        });\r\n    }\r\n    exitServer(server) {\r\n        const pid = server.process.pid;\r\n        try {\r\n            if (server.connection.isConnected) {\r\n                server.connection.exit();\r\n                server.connection.dispose();\r\n            }\r\n        }\r\n        finally {\r\n            server.process.kill();\r\n        }\r\n        this._logger.debug(`Server stopped \"${server.projectPath}\" (pid ${pid})`);\r\n    }\r\n    terminate() {\r\n        this._stoppingServers.forEach((server) => {\r\n            this._logger.debug(`Server terminating \"${server.projectPath}\"`);\r\n            this.exitServer(server);\r\n        });\r\n    }\r\n    determineProjectPath(textEditor) {\r\n        const filePath = textEditor.getPath();\r\n        if (filePath == null) {\r\n            return null;\r\n        }\r\n        return this._normalizedProjectPaths.find((d) => filePath.startsWith(d)) || null;\r\n    }\r\n    updateNormalizedProjectPaths() {\r\n        this._normalizedProjectPaths = atom.project.getDirectories().map((d) => this.normalizePath(d.getPath()));\r\n    }\r\n    normalizePath(projectPath) {\r\n        return !projectPath.endsWith(path.sep) ? path.join(projectPath, path.sep) : projectPath;\r\n    }\r\n    projectPathsChanged(projectPaths) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const pathsSet = new Set(projectPaths.map(this.normalizePath));\r\n            const serversToStop = this._activeServers.filter((s) => !pathsSet.has(s.projectPath));\r\n            yield Promise.all(serversToStop.map((s) => this.stopServer(s)));\r\n            this.updateNormalizedProjectPaths();\r\n        });\r\n    }\r\n    projectFilesChanged(fileEvents) {\r\n        if (this._activeServers.length === 0) {\r\n            return;\r\n        }\r\n        for (const activeServer of this._activeServers) {\r\n            const changes = [];\r\n            for (const fileEvent of fileEvents) {\r\n                if (fileEvent.path.startsWith(activeServer.projectPath) && this._changeWatchedFileFilter(fileEvent.path)) {\r\n                    changes.push(convert_1.default.atomFileEventToLSFileEvents(fileEvent)[0]);\r\n                }\r\n                if (fileEvent.action === 'renamed' &&\r\n                    fileEvent.oldPath.startsWith(activeServer.projectPath) &&\r\n                    this._changeWatchedFileFilter(fileEvent.oldPath)) {\r\n                    changes.push(convert_1.default.atomFileEventToLSFileEvents(fileEvent)[1]);\r\n                }\r\n            }\r\n            if (changes.length > 0) {\r\n                activeServer.connection.didChangeWatchedFiles({ changes });\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.ServerManager = ServerManager;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst atom_1 = require(\"atom\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * Obtain the range of the word at the given editor position.\r\n * Uses the non-word characters from the position's grammar scope.\r\n */\r\nfunction getWordAtPosition(editor, position) {\r\n    const nonWordCharacters = escapeRegExp(editor.getNonWordCharacters(position));\r\n    const range = _getRegexpRangeAtPosition(editor.getBuffer(), position, new RegExp(`^[\\t ]*$|[^\\\\s${nonWordCharacters}]+`, 'g'));\r\n    if (range == null) {\r\n        return new atom_1.Range(position, position);\r\n    }\r\n    return range;\r\n}\r\nexports.getWordAtPosition = getWordAtPosition;\r\nfunction escapeRegExp(string) {\r\n    // From atom/underscore-plus.\r\n    return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n}\r\nexports.escapeRegExp = escapeRegExp;\r\nfunction _getRegexpRangeAtPosition(buffer, position, wordRegex) {\r\n    const { row, column } = position;\r\n    const rowRange = buffer.rangeForRow(row, false);\r\n    let matchData;\r\n    // Extract the expression from the row text.\r\n    buffer.scanInRange(wordRegex, rowRange, (data) => {\r\n        const { range } = data;\r\n        if (position.isGreaterThanOrEqual(range.start) &&\r\n            // Range endpoints are exclusive.\r\n            position.isLessThan(range.end)) {\r\n            matchData = data;\r\n            data.stop();\r\n            return;\r\n        }\r\n        // Stop the scan if the scanner has passed our position.\r\n        if (range.end.column > column) {\r\n            data.stop();\r\n        }\r\n    });\r\n    return matchData == null ? null : matchData.range;\r\n}\r\n/**\r\n * For the given connection and cancellationTokens map, cancel the existing\r\n * CancellationToken for that connection then create and store a new\r\n * CancellationToken to be used for the current request.\r\n */\r\nfunction cancelAndRefreshCancellationToken(key, cancellationTokens) {\r\n    let cancellationToken = cancellationTokens.get(key);\r\n    if (cancellationToken !== undefined && !cancellationToken.token.isCancellationRequested) {\r\n        cancellationToken.cancel();\r\n    }\r\n    cancellationToken = new vscode_jsonrpc_1.CancellationTokenSource();\r\n    cancellationTokens.set(key, cancellationToken);\r\n    return cancellationToken.token;\r\n}\r\nexports.cancelAndRefreshCancellationToken = cancelAndRefreshCancellationToken;\r\nfunction doWithCancellationToken(key, cancellationTokens, work) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const token = cancelAndRefreshCancellationToken(key, cancellationTokens);\r\n        const result = yield work(token);\r\n        cancellationTokens.delete(key);\r\n        return result;\r\n    });\r\n}\r\nexports.doWithCancellationToken = doWithCancellationToken;\r\nfunction assertUnreachable(_) {\r\n    return _;\r\n}\r\nexports.assertUnreachable = assertUnreachable;\r\nfunction promiseWithTimeout(ms, promise) {\r\n    return new Promise((resolve, reject) => {\r\n        // create a timeout to reject promise if not resolved\r\n        const timer = setTimeout(() => {\r\n            reject(new Error(`Timeout after ${ms}ms`));\r\n        }, ms);\r\n        promise.then((res) => {\r\n            clearTimeout(timer);\r\n            resolve(res);\r\n        }).catch((err) => {\r\n            clearTimeout(timer);\r\n            reject(err);\r\n        });\r\n    });\r\n}\r\nexports.promiseWithTimeout = promiseWithTimeout;\r\n//# sourceMappingURL=data:application/json;base64,","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentColor');\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new vscode_jsonrpc_1.RequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\r\n/**\r\n * A request to provide folding ranges in a document. The request's\r\n * parameter is of type [FoldingRangeRequestParam](#FoldingRangeRequestParam), the\r\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar FoldingRangeRequest;\r\n(function (FoldingRangeRequest) {\r\n    FoldingRangeRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/foldingRange');\r\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to resolve the implementation locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar ImplementationRequest;\r\n(function (ImplementationRequest) {\r\n    ImplementationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/implementation');\r\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\r\nexports.ImplementationRequest = protocol_implementation_1.ImplementationRequest;\r\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\r\nexports.TypeDefinitionRequest = protocol_typeDefinition_1.TypeDefinitionRequest;\r\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\r\nexports.WorkspaceFoldersRequest = protocol_workspaceFolders_1.WorkspaceFoldersRequest;\r\nexports.DidChangeWorkspaceFoldersNotification = protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\r\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\r\nexports.ConfigurationRequest = protocol_configuration_1.ConfigurationRequest;\r\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\r\nexports.DocumentColorRequest = protocol_colorProvider_1.DocumentColorRequest;\r\nexports.ColorPresentationRequest = protocol_colorProvider_1.ColorPresentationRequest;\r\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\r\nexports.FoldingRangeRequest = protocol_foldingRange_1.FoldingRangeRequest;\r\nvar DocumentFilter;\r\n(function (DocumentFilter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\r\n    }\r\n    DocumentFilter.is = is;\r\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\r\n/**\r\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\r\n * handler on the client side.\r\n */\r\nvar RegistrationRequest;\r\n(function (RegistrationRequest) {\r\n    RegistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/registerCapability');\r\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\r\n/**\r\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\r\n * handler on the client side.\r\n */\r\nvar UnregistrationRequest;\r\n(function (UnregistrationRequest) {\r\n    UnregistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/unregisterCapability');\r\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\r\n/**\r\n * Defines how the host (editor) should sync\r\n * document changes to the language server.\r\n */\r\nvar TextDocumentSyncKind;\r\n(function (TextDocumentSyncKind) {\r\n    /**\r\n     * Documents should not be synced at all.\r\n     */\r\n    TextDocumentSyncKind.None = 0;\r\n    /**\r\n     * Documents are synced by always sending the full content\r\n     * of the document.\r\n     */\r\n    TextDocumentSyncKind.Full = 1;\r\n    /**\r\n     * Documents are synced by sending the full content on open.\r\n     * After that only incremental updates to the document are\r\n     * send.\r\n     */\r\n    TextDocumentSyncKind.Incremental = 2;\r\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\r\n/**\r\n * The initialize request is sent from the client to the server.\r\n * It is sent once as the request after starting up the server.\r\n * The requests parameter is of type [InitializeParams](#InitializeParams)\r\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\r\n * resolves to such.\r\n */\r\nvar InitializeRequest;\r\n(function (InitializeRequest) {\r\n    InitializeRequest.type = new vscode_jsonrpc_1.RequestType('initialize');\r\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\r\n/**\r\n * Known error codes for an `InitializeError`;\r\n */\r\nvar InitializeError;\r\n(function (InitializeError) {\r\n    /**\r\n     * If the protocol version provided by the client can't be handled by the server.\r\n     * @deprecated This initialize error got replaced by client capabilities. There is\r\n     * no version handshake in version 3.0x\r\n     */\r\n    InitializeError.unknownProtocolVersion = 1;\r\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\r\n/**\r\n * The intialized notification is sent from the client to the\r\n * server after the client is fully initialized and the server\r\n * is allowed to send requests from the server to the client.\r\n */\r\nvar InitializedNotification;\r\n(function (InitializedNotification) {\r\n    InitializedNotification.type = new vscode_jsonrpc_1.NotificationType('initialized');\r\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\r\n//---- Shutdown Method ----\r\n/**\r\n * A shutdown request is sent from the client to the server.\r\n * It is sent once when the client decides to shutdown the\r\n * server. The only notification that is sent after a shutdown request\r\n * is the exit event.\r\n */\r\nvar ShutdownRequest;\r\n(function (ShutdownRequest) {\r\n    ShutdownRequest.type = new vscode_jsonrpc_1.RequestType0('shutdown');\r\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\r\n//---- Exit Notification ----\r\n/**\r\n * The exit event is sent from the client to the server to\r\n * ask the server to exit its process.\r\n */\r\nvar ExitNotification;\r\n(function (ExitNotification) {\r\n    ExitNotification.type = new vscode_jsonrpc_1.NotificationType0('exit');\r\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\r\n//---- Configuration notification ----\r\n/**\r\n * The configuration change notification is sent from the client to the server\r\n * when the client's configuration has changed. The notification contains\r\n * the changed configuration as defined by the language client.\r\n */\r\nvar DidChangeConfigurationNotification;\r\n(function (DidChangeConfigurationNotification) {\r\n    DidChangeConfigurationNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeConfiguration');\r\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\r\n//---- Message show and log notifications ----\r\n/**\r\n * The message type\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * An error message.\r\n     */\r\n    MessageType.Error = 1;\r\n    /**\r\n     * A warning message.\r\n     */\r\n    MessageType.Warning = 2;\r\n    /**\r\n     * An information message.\r\n     */\r\n    MessageType.Info = 3;\r\n    /**\r\n     * A log message.\r\n     */\r\n    MessageType.Log = 4;\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * The show message notification is sent from a server to a client to ask\r\n * the client to display a particular message in the user interface.\r\n */\r\nvar ShowMessageNotification;\r\n(function (ShowMessageNotification) {\r\n    ShowMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/showMessage');\r\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\r\n/**\r\n * The show message request is sent from the server to the client to show a message\r\n * and a set of options actions to the user.\r\n */\r\nvar ShowMessageRequest;\r\n(function (ShowMessageRequest) {\r\n    ShowMessageRequest.type = new vscode_jsonrpc_1.RequestType('window/showMessageRequest');\r\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\r\n/**\r\n * The log message notification is sent from the server to the client to ask\r\n * the client to log a particular message.\r\n */\r\nvar LogMessageNotification;\r\n(function (LogMessageNotification) {\r\n    LogMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/logMessage');\r\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\r\n//---- Telemetry notification\r\n/**\r\n * The telemetry event notification is sent from the server to the client to ask\r\n * the client to log telemetry data.\r\n */\r\nvar TelemetryEventNotification;\r\n(function (TelemetryEventNotification) {\r\n    TelemetryEventNotification.type = new vscode_jsonrpc_1.NotificationType('telemetry/event');\r\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\r\n/**\r\n * The document open notification is sent from the client to the server to signal\r\n * newly opened text documents. The document's truth is now managed by the client\r\n * and the server must not try to read the document's truth using the document's\r\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\r\n * mean that its content is presented in an editor. An open notification must not\r\n * be sent more than once without a corresponding close notification send before.\r\n * This means open and close notification must be balanced and the max open count\r\n * is one.\r\n */\r\nvar DidOpenTextDocumentNotification;\r\n(function (DidOpenTextDocumentNotification) {\r\n    DidOpenTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didOpen');\r\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\r\n/**\r\n * The document change notification is sent from the client to the server to signal\r\n * changes to a text document.\r\n */\r\nvar DidChangeTextDocumentNotification;\r\n(function (DidChangeTextDocumentNotification) {\r\n    DidChangeTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didChange');\r\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\r\n/**\r\n * The document close notification is sent from the client to the server when\r\n * the document got closed in the client. The document's truth now exists where\r\n * the document's uri points to (e.g. if the document's uri is a file uri the\r\n * truth now exists on disk). As with the open notification the close notification\r\n * is about managing the document's content. Receiving a close notification\r\n * doesn't mean that the document was open in an editor before. A close\r\n * notification requires a previous open notification to be sent.\r\n */\r\nvar DidCloseTextDocumentNotification;\r\n(function (DidCloseTextDocumentNotification) {\r\n    DidCloseTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didClose');\r\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\r\n/**\r\n * The document save notification is sent from the client to the server when\r\n * the document got saved in the client.\r\n */\r\nvar DidSaveTextDocumentNotification;\r\n(function (DidSaveTextDocumentNotification) {\r\n    DidSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didSave');\r\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save notification is sent from the client to the server before\r\n * the document is actually saved.\r\n */\r\nvar WillSaveTextDocumentNotification;\r\n(function (WillSaveTextDocumentNotification) {\r\n    WillSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/willSave');\r\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save request is sent from the client to the server before\r\n * the document is actually saved. The request can return an array of TextEdits\r\n * which will be applied to the text document before it is saved. Please note that\r\n * clients might drop results if computing the text edits took too long or if a\r\n * server constantly fails on this request. This is done to keep the save fast and\r\n * reliable.\r\n */\r\nvar WillSaveTextDocumentWaitUntilRequest;\r\n(function (WillSaveTextDocumentWaitUntilRequest) {\r\n    WillSaveTextDocumentWaitUntilRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/willSaveWaitUntil');\r\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\r\n//---- File eventing ----\r\n/**\r\n * The watched files notification is sent from the client to the server when\r\n * the client detects changes to file watched by the language client.\r\n */\r\nvar DidChangeWatchedFilesNotification;\r\n(function (DidChangeWatchedFilesNotification) {\r\n    DidChangeWatchedFilesNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWatchedFiles');\r\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\r\n/**\r\n * The file event type\r\n */\r\nvar FileChangeType;\r\n(function (FileChangeType) {\r\n    /**\r\n     * The file got created.\r\n     */\r\n    FileChangeType.Created = 1;\r\n    /**\r\n     * The file got changed.\r\n     */\r\n    FileChangeType.Changed = 2;\r\n    /**\r\n     * The file got deleted.\r\n     */\r\n    FileChangeType.Deleted = 3;\r\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\r\nvar WatchKind;\r\n(function (WatchKind) {\r\n    /**\r\n     * Interested in create events.\r\n     */\r\n    WatchKind.Create = 1;\r\n    /**\r\n     * Interested in change events\r\n     */\r\n    WatchKind.Change = 2;\r\n    /**\r\n     * Interested in delete events\r\n     */\r\n    WatchKind.Delete = 4;\r\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\r\n//---- Diagnostic notification ----\r\n/**\r\n * Diagnostics notification are sent from the server to the client to signal\r\n * results of validation runs.\r\n */\r\nvar PublishDiagnosticsNotification;\r\n(function (PublishDiagnosticsNotification) {\r\n    PublishDiagnosticsNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/publishDiagnostics');\r\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\r\n/**\r\n * How a completion was triggered\r\n */\r\nvar CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    /**\r\n     * Completion was triggered by typing an identifier (24x7 code\r\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\r\n     */\r\n    CompletionTriggerKind.Invoked = 1;\r\n    /**\r\n     * Completion was triggered by a trigger character specified by\r\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\r\n     */\r\n    CompletionTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Completion was re-triggered as current completion list is incomplete\r\n     */\r\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\r\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\r\n/**\r\n * Request to request completion at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\r\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\r\n * or a Thenable that resolves to such.\r\n *\r\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\r\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\r\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\r\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\r\n */\r\nvar CompletionRequest;\r\n(function (CompletionRequest) {\r\n    CompletionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/completion');\r\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given completion item.The request's\r\n * parameter is of type [CompletionItem](#CompletionItem) the response\r\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\r\n */\r\nvar CompletionResolveRequest;\r\n(function (CompletionResolveRequest) {\r\n    CompletionResolveRequest.type = new vscode_jsonrpc_1.RequestType('completionItem/resolve');\r\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\r\n//---- Hover Support -------------------------------\r\n/**\r\n * Request to request hover information at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\r\n * type [Hover](#Hover) or a Thenable that resolves to such.\r\n */\r\nvar HoverRequest;\r\n(function (HoverRequest) {\r\n    HoverRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/hover');\r\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\r\nvar SignatureHelpRequest;\r\n(function (SignatureHelpRequest) {\r\n    SignatureHelpRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/signatureHelp');\r\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\r\n//---- Goto Definition -------------------------------------\r\n/**\r\n * A request to resolve the definition location of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar DefinitionRequest;\r\n(function (DefinitionRequest) {\r\n    DefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/definition');\r\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\r\n/**\r\n * A request to resolve project-wide references for the symbol denoted\r\n * by the given text document position. The request's parameter is of\r\n * type [ReferenceParams](#ReferenceParams) the response is of type\r\n * [Location[]](#Location) or a Thenable that resolves to such.\r\n */\r\nvar ReferencesRequest;\r\n(function (ReferencesRequest) {\r\n    ReferencesRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/references');\r\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\r\n//---- Document Highlight ----------------------------------\r\n/**\r\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\r\n * text document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\r\n * (#DocumentHighlight) or a Thenable that resolves to such.\r\n */\r\nvar DocumentHighlightRequest;\r\n(function (DocumentHighlightRequest) {\r\n    DocumentHighlightRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentHighlight');\r\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\r\n//---- Document Symbol Provider ---------------------------\r\n/**\r\n * A request to list all symbols found in a given text document. The request's\r\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\r\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentSymbolRequest;\r\n(function (DocumentSymbolRequest) {\r\n    DocumentSymbolRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentSymbol');\r\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\r\n//---- Workspace Symbol Provider ---------------------------\r\n/**\r\n * A request to list project-wide symbols matching the query string given\r\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\r\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\r\n * resolves to such.\r\n */\r\nvar WorkspaceSymbolRequest;\r\n(function (WorkspaceSymbolRequest) {\r\n    WorkspaceSymbolRequest.type = new vscode_jsonrpc_1.RequestType('workspace/symbol');\r\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\r\n/**\r\n * A request to provide commands for the given text document and range.\r\n */\r\nvar CodeActionRequest;\r\n(function (CodeActionRequest) {\r\n    CodeActionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeAction');\r\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\r\n/**\r\n * A request to provide code lens for the given text document.\r\n */\r\nvar CodeLensRequest;\r\n(function (CodeLensRequest) {\r\n    CodeLensRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeLens');\r\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\r\n/**\r\n * A request to resolve a command for a given code lens.\r\n */\r\nvar CodeLensResolveRequest;\r\n(function (CodeLensResolveRequest) {\r\n    CodeLensResolveRequest.type = new vscode_jsonrpc_1.RequestType('codeLens/resolve');\r\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\r\n/**\r\n * A request to to format a whole document.\r\n */\r\nvar DocumentFormattingRequest;\r\n(function (DocumentFormattingRequest) {\r\n    DocumentFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/formatting');\r\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\r\n/**\r\n * A request to to format a range in a document.\r\n */\r\nvar DocumentRangeFormattingRequest;\r\n(function (DocumentRangeFormattingRequest) {\r\n    DocumentRangeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rangeFormatting');\r\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\r\n/**\r\n * A request to format a document on type.\r\n */\r\nvar DocumentOnTypeFormattingRequest;\r\n(function (DocumentOnTypeFormattingRequest) {\r\n    DocumentOnTypeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/onTypeFormatting');\r\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\r\n/**\r\n * A request to rename a symbol.\r\n */\r\nvar RenameRequest;\r\n(function (RenameRequest) {\r\n    RenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rename');\r\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\r\n/**\r\n * A request to test and perform the setup necessary for a rename.\r\n */\r\nvar PrepareRenameRequest;\r\n(function (PrepareRenameRequest) {\r\n    PrepareRenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/prepareRename');\r\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\r\n/**\r\n * A request to provide document links\r\n */\r\nvar DocumentLinkRequest;\r\n(function (DocumentLinkRequest) {\r\n    DocumentLinkRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentLink');\r\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given document link. The request's\r\n * parameter is of type [DocumentLink](#DocumentLink) the response\r\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\r\n */\r\nvar DocumentLinkResolveRequest;\r\n(function (DocumentLinkResolveRequest) {\r\n    DocumentLinkResolveRequest.type = new vscode_jsonrpc_1.RequestType('documentLink/resolve');\r\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\r\n/**\r\n * A request send from the client to the server to execute a command. The request might return\r\n * a workspace edit which the client will apply to the workspace.\r\n */\r\nvar ExecuteCommandRequest;\r\n(function (ExecuteCommandRequest) {\r\n    ExecuteCommandRequest.type = new vscode_jsonrpc_1.RequestType('workspace/executeCommand');\r\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\r\n/**\r\n * A request sent from the server to the client to modified certain resources.\r\n */\r\nvar ApplyWorkspaceEditRequest;\r\n(function (ApplyWorkspaceEditRequest) {\r\n    ApplyWorkspaceEditRequest.type = new vscode_jsonrpc_1.RequestType('workspace/applyEdit');\r\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/typeDefinition');\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\r\n */\r\nvar WorkspaceFoldersRequest;\r\n(function (WorkspaceFoldersRequest) {\r\n    WorkspaceFoldersRequest.type = new vscode_jsonrpc_1.RequestType0('workspace/workspaceFolders');\r\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\r\n/**\r\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\r\n * folder configuration changes.\r\n */\r\nvar DidChangeWorkspaceFoldersNotification;\r\n(function (DidChangeWorkspaceFoldersNotification) {\r\n    DidChangeWorkspaceFoldersNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWorkspaceFolders');\r\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst toString = Object.prototype.toString;\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return toString.call(value) === '[object Error]';\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return toString.call(value) === '[object Function]';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nvar Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nvar shortcutEvent = Object.freeze(function (callback, context) {\r\n    var handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose: function () { clearTimeout(handle); } };\r\n});\r\nvar MutableToken = /** @class */ (function () {\r\n    function MutableToken() {\r\n        this._isCancelled = false;\r\n    }\r\n    MutableToken.prototype.cancel = function () {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this._emitter = undefined;\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\r\n        get: function () {\r\n            return this._isCancelled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\r\n        get: function () {\r\n            if (this._isCancelled) {\r\n                return shortcutEvent;\r\n            }\r\n            if (!this._emitter) {\r\n                this._emitter = new events_1.Emitter();\r\n            }\r\n            return this._emitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return MutableToken;\r\n}());\r\nvar CancellationTokenSource = /** @class */ (function () {\r\n    function CancellationTokenSource() {\r\n    }\r\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\r\n        get: function () {\r\n            if (!this._token) {\r\n                // be lazy and create the token only when\r\n                // actually needed\r\n                this._token = new MutableToken();\r\n            }\r\n            return this._token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CancellationTokenSource.prototype.cancel = function () {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    };\r\n    CancellationTokenSource.prototype.dispose = function () {\r\n        this.cancel();\r\n    };\r\n    return CancellationTokenSource;\r\n}());\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    var _disposable = { dispose: function () { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nvar CallbackList = /** @class */ (function () {\r\n    function CallbackList() {\r\n    }\r\n    CallbackList.prototype.add = function (callback, context, bucket) {\r\n        var _this = this;\r\n        if (context === void 0) { context = null; }\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: function () { return _this.remove(callback, context); } });\r\n        }\r\n    };\r\n    CallbackList.prototype.remove = function (callback, context) {\r\n        if (context === void 0) { context = null; }\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    };\r\n    CallbackList.prototype.invoke = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    CallbackList.prototype.isEmpty = function () {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    };\r\n    CallbackList.prototype.dispose = function () {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    };\r\n    return CallbackList;\r\n}());\r\nvar Emitter = /** @class */ (function () {\r\n    function Emitter(_options) {\r\n        this._options = _options;\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"event\", {\r\n        /**\r\n         * For the public to allow to subscribe\r\n         * to events from this Emitter\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._event) {\r\n                this._event = function (listener, thisArgs, disposables) {\r\n                    if (!_this._callbacks) {\r\n                        _this._callbacks = new CallbackList();\r\n                    }\r\n                    if (_this._options && _this._options.onFirstListenerAdd && _this._callbacks.isEmpty()) {\r\n                        _this._options.onFirstListenerAdd(_this);\r\n                    }\r\n                    _this._callbacks.add(listener, thisArgs);\r\n                    var result;\r\n                    result = {\r\n                        dispose: function () {\r\n                            _this._callbacks.remove(listener, thisArgs);\r\n                            result.dispose = Emitter._noop;\r\n                            if (_this._options && _this._options.onLastListenerRemove && _this._callbacks.isEmpty()) {\r\n                                _this._options.onLastListenerRemove(_this);\r\n                            }\r\n                        }\r\n                    };\r\n                    if (Array.isArray(disposables)) {\r\n                        disposables.push(result);\r\n                    }\r\n                    return result;\r\n                };\r\n            }\r\n            return this._event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    Emitter.prototype.fire = function (event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    };\r\n    Emitter.prototype.dispose = function () {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    };\r\n    Emitter._noop = function () { };\r\n    return Emitter;\r\n}());\r\nexports.Emitter = Emitter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar toString = Object.prototype.toString;\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return toString.call(value) === '[object Error]';\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return toString.call(value) === '[object Function]';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(function (elem) { return string(elem); });\r\n}\r\nexports.stringArray = stringArray;\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nvar LinkedMap = /** @class */ (function () {\r\n    function LinkedMap() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    LinkedMap.prototype.clear = function () {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    };\r\n    LinkedMap.prototype.isEmpty = function () {\r\n        return !this._head && !this._tail;\r\n    };\r\n    Object.defineProperty(LinkedMap.prototype, \"size\", {\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinkedMap.prototype.has = function (key) {\r\n        return this._map.has(key);\r\n    };\r\n    LinkedMap.prototype.get = function (key) {\r\n        var item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    };\r\n    LinkedMap.prototype.set = function (key, value, touch) {\r\n        if (touch === void 0) { touch = Touch.None; }\r\n        var item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key: key, value: value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    };\r\n    LinkedMap.prototype.delete = function (key) {\r\n        var item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    };\r\n    LinkedMap.prototype.shift = function () {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        var item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    };\r\n    LinkedMap.prototype.forEach = function (callbackfn, thisArg) {\r\n        var current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    };\r\n    LinkedMap.prototype.forEachReverse = function (callbackfn, thisArg) {\r\n        var current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    };\r\n    LinkedMap.prototype.values = function () {\r\n        var result = [];\r\n        var current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    };\r\n    LinkedMap.prototype.keys = function () {\r\n        var result = [];\r\n        var current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    };\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    LinkedMap.prototype.addItemFirst = function (item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    };\r\n    LinkedMap.prototype.addItemLast = function (item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    };\r\n    LinkedMap.prototype.removeItem = function (item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    };\r\n    LinkedMap.prototype.touch = function (item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    };\r\n    return LinkedMap;\r\n}());\r\nexports.LinkedMap = LinkedMap;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"./thenable.ts\" />\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Is = require(\"./is\");\r\nvar messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nvar messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nvar messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nvar events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nvar cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nvar linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nexports.NullLogger = Object.freeze({\r\n    error: function () { },\r\n    warn: function () { },\r\n    info: function () { },\r\n    log: function () { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nvar ConnectionError = /** @class */ (function (_super) {\r\n    __extends(ConnectionError, _super);\r\n    function ConnectionError(code, message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = code;\r\n        Object.setPrototypeOf(_this, ConnectionError.prototype);\r\n        return _this;\r\n    }\r\n    return ConnectionError;\r\n}(Error));\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    var sequenceNumber = 0;\r\n    var notificationSquenceNumber = 0;\r\n    var unknownResponseSquenceNumber = 0;\r\n    var version = '2.0';\r\n    var starRequestHandler = undefined;\r\n    var requestHandlers = Object.create(null);\r\n    var starNotificationHandler = undefined;\r\n    var notificationHandlers = Object.create(null);\r\n    var timer;\r\n    var messageQueue = new linkedMap_1.LinkedMap();\r\n    var responsePromises = Object.create(null);\r\n    var requestTokens = Object.create(null);\r\n    var trace = Trace.Off;\r\n    var tracer;\r\n    var state = ConnectionState.New;\r\n    var errorEmitter = new events_1.Emitter();\r\n    var closeEmitter = new events_1.Emitter();\r\n    var unhandledNotificationEmitter = new events_1.Emitter();\r\n    var disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    ;\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(function () {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        var message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    var callback = function (message) {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                var key = createRequestQueueKey(message.params.id);\r\n                var toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    var response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            var message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            var message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            var message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        var element = requestHandlers[requestMessage.method];\r\n        var type;\r\n        var requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        var startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            var cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            var tokenKey_1 = String(requestMessage.id);\r\n            requestTokens[tokenKey_1] = cancellationSource;\r\n            try {\r\n                var handlerResult = void 0;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler.apply(void 0, requestMessage.params.concat([cancellationSource.token])) : starRequestHandler.apply(void 0, [requestMessage.method].concat(requestMessage.params, [cancellationSource.token]));\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                var promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey_1];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then(function (resultOrError) {\r\n                        delete requestTokens[tokenKey_1];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, function (error) {\r\n                        delete requestTokens[tokenKey_1];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed with message: \" + error.message), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed unexpectedly without providing any details.\"), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey_1];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey_1];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed with message: \" + error.message), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed unexpectedly without providing any details.\"), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, \"Unhandled method \" + requestMessage.method), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(\"Received response message without id: Error is: \\n\" + JSON.stringify(responseMessage.error, undefined, 4));\r\n            }\r\n            else {\r\n                logger.error(\"Received response message without id. No further error information provided.\");\r\n            }\r\n        }\r\n        else {\r\n            var key = String(responseMessage.id);\r\n            var responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        var error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(\"Response handler '\" + responsePromise.method + \"' failed with message: \" + error.message);\r\n                    }\r\n                    else {\r\n                        logger.error(\"Response handler '\" + responsePromise.method + \"' failed unexpectedly.\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        var type = undefined;\r\n        var notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = function (params) {\r\n                var id = params.id;\r\n                var source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            var element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler.apply(void 0, message.params) : starNotificationHandler.apply(void 0, [message.method].concat(message.params));\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(\"Notification handler '\" + message.method + \"' failed with message: \" + error.message);\r\n                }\r\n                else {\r\n                    logger.error(\"Notification handler '\" + message.method + \"' failed unexpectedly.\");\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(\"Received message which is neither a response nor a notification message:\\n\" + JSON.stringify(message, null, 4));\r\n        // Test whether we find an id to reject the promise\r\n        var responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            var key = String(responseMessage.id);\r\n            var responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose && message.params) {\r\n            data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n        }\r\n        tracer.log(\"Sending request '\" + message.method + \" - (\" + message.id + \")'.\", data);\r\n    }\r\n    function traceSendNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.params) {\r\n                data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                data = 'No parameters provided.\\n\\n';\r\n            }\r\n        }\r\n        tracer.log(\"Sending notification '\" + message.method + \"'.\", data);\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.error && message.error.data) {\r\n                data = \"Error data: \" + JSON.stringify(message.error.data, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                if (message.result) {\r\n                    data = \"Result: \" + JSON.stringify(message.result, null, 4) + \"\\n\\n\";\r\n                }\r\n                else if (message.error === void 0) {\r\n                    data = 'No result returned.\\n\\n';\r\n                }\r\n            }\r\n        }\r\n        tracer.log(\"Sending response '\" + method + \" - (\" + message.id + \")'. Processing request took \" + (Date.now() - startTime) + \"ms\", data);\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose && message.params) {\r\n            data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n        }\r\n        tracer.log(\"Received request '\" + message.method + \" - (\" + message.id + \")'.\", data);\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.params) {\r\n                data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                data = 'No parameters provided.\\n\\n';\r\n            }\r\n        }\r\n        tracer.log(\"Received notification '\" + message.method + \"'.\", data);\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.error && message.error.data) {\r\n                data = \"Error data: \" + JSON.stringify(message.error.data, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                if (message.result) {\r\n                    data = \"Result: \" + JSON.stringify(message.result, null, 4) + \"\\n\\n\";\r\n                }\r\n                else if (message.error === void 0) {\r\n                    data = 'No result returned.\\n\\n';\r\n                }\r\n            }\r\n        }\r\n        if (responsePromise) {\r\n            var error = message.error ? \" Request failed: \" + message.error.message + \" (\" + message.error.code + \").\" : '';\r\n            tracer.log(\"Received response '\" + responsePromise.method + \" - (\" + message.id + \")' in \" + (Date.now() - responsePromise.timerStart) + \"ms.\" + error, data);\r\n        }\r\n        else {\r\n            tracer.log(\"Received response \" + message.id + \" without active response promise.\", data);\r\n        }\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        var result;\r\n        var numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (var i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (var i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    var connection = {\r\n        sendNotification: function (type) {\r\n            var params = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                params[_i - 1] = arguments[_i];\r\n            }\r\n            throwIfClosedOrDisposed();\r\n            var method;\r\n            var messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            var notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: function (type, handler) {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler: handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type: type, handler: handler };\r\n                }\r\n            }\r\n        },\r\n        sendRequest: function (type) {\r\n            var params = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                params[_i - 1] = arguments[_i];\r\n            }\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            var method;\r\n            var messageParams;\r\n            var token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        var last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(function (value) { return undefinedToNull(value); });\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(function (value) { return undefinedToNull(value); });\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                var numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            var id = sequenceNumber++;\r\n            var result = new Promise(function (resolve, reject) {\r\n                var requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                var responsePromise = { method: method, timerStart: Date.now(), resolve: resolve, reject: reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(function () {\r\n                    connection.sendNotification(CancelNotification.type, { id: id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: function (type, handler) {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler: handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type: type, handler: handler };\r\n                }\r\n            }\r\n        },\r\n        trace: function (_value, _tracer, sendNotification) {\r\n            if (sendNotification === void 0) { sendNotification = false; }\r\n            trace = _value;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: function () {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            var error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach(function (key) {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: function () {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: function () {\r\n            console.log(\"inspect\");\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, function (params) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    var reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    var writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nvar Is = require(\"./is\");\r\nvar DefaultSize = 8192;\r\nvar CR = new Buffer('\\r', 'ascii')[0];\r\nvar LF = new Buffer('\\n', 'ascii')[0];\r\nvar CRLF = '\\r\\n';\r\nvar MessageBuffer = /** @class */ (function () {\r\n    function MessageBuffer(encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = new Buffer(DefaultSize);\r\n    }\r\n    MessageBuffer.prototype.append = function (chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = new Buffer(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = new Buffer(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    };\r\n    MessageBuffer.prototype.tryReadHeaders = function () {\r\n        var result = undefined;\r\n        var current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        var headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach(function (header) {\r\n            var index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            var key = header.substr(0, index);\r\n            var value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        var nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    };\r\n    MessageBuffer.prototype.tryReadContent = function (length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        var result = this.buffer.toString(this.encoding, 0, length);\r\n        var nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    };\r\n    Object.defineProperty(MessageBuffer.prototype, \"numberOfBytes\", {\r\n        get: function () {\r\n            return this.index;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return MessageBuffer;\r\n}());\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nvar AbstractMessageReader = /** @class */ (function () {\r\n    function AbstractMessageReader() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    AbstractMessageReader.prototype.dispose = function () {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    };\r\n    Object.defineProperty(AbstractMessageReader.prototype, \"onError\", {\r\n        get: function () {\r\n            return this.errorEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageReader.prototype.fireError = function (error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    };\r\n    Object.defineProperty(AbstractMessageReader.prototype, \"onClose\", {\r\n        get: function () {\r\n            return this.closeEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageReader.prototype.fireClose = function () {\r\n        this.closeEmitter.fire(undefined);\r\n    };\r\n    Object.defineProperty(AbstractMessageReader.prototype, \"onPartialMessage\", {\r\n        get: function () {\r\n            return this.partialMessageEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageReader.prototype.firePartialMessage = function (info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    };\r\n    AbstractMessageReader.prototype.asError = function (error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(\"Reader recevied error. Reason: \" + (Is.string(error.message) ? error.message : 'unknown'));\r\n        }\r\n    };\r\n    return AbstractMessageReader;\r\n}());\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nvar StreamMessageReader = /** @class */ (function (_super) {\r\n    __extends(StreamMessageReader, _super);\r\n    function StreamMessageReader(readable, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        var _this = _super.call(this) || this;\r\n        _this.readable = readable;\r\n        _this.buffer = new MessageBuffer(encoding);\r\n        _this._partialMessageTimeout = 10000;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StreamMessageReader.prototype, \"partialMessageTimeout\", {\r\n        get: function () {\r\n            return this._partialMessageTimeout;\r\n        },\r\n        set: function (timeout) {\r\n            this._partialMessageTimeout = timeout;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StreamMessageReader.prototype.listen = function (callback) {\r\n        var _this = this;\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', function (data) {\r\n            _this.onData(data);\r\n        });\r\n        this.readable.on('error', function (error) { return _this.fireError(error); });\r\n        this.readable.on('close', function () { return _this.fireClose(); });\r\n    };\r\n    StreamMessageReader.prototype.onData = function (data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                var headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                var contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                var length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't recevied the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    };\r\n    StreamMessageReader.prototype.clearPartialMessageTimer = function () {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    };\r\n    StreamMessageReader.prototype.setPartialMessageTimer = function () {\r\n        var _this = this;\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout(function (token, timeout) {\r\n            _this.partialMessageTimer = undefined;\r\n            if (token === _this.messageToken) {\r\n                _this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                _this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    };\r\n    return StreamMessageReader;\r\n}(AbstractMessageReader));\r\nexports.StreamMessageReader = StreamMessageReader;\r\nvar IPCMessageReader = /** @class */ (function (_super) {\r\n    __extends(IPCMessageReader, _super);\r\n    function IPCMessageReader(process) {\r\n        var _this = _super.call(this) || this;\r\n        _this.process = process;\r\n        var eventEmitter = _this.process;\r\n        eventEmitter.on('error', function (error) { return _this.fireError(error); });\r\n        eventEmitter.on('close', function () { return _this.fireClose(); });\r\n        return _this;\r\n    }\r\n    IPCMessageReader.prototype.listen = function (callback) {\r\n        this.process.on('message', callback);\r\n    };\r\n    return IPCMessageReader;\r\n}(AbstractMessageReader));\r\nexports.IPCMessageReader = IPCMessageReader;\r\nvar SocketMessageReader = /** @class */ (function (_super) {\r\n    __extends(SocketMessageReader, _super);\r\n    function SocketMessageReader(socket, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf-8'; }\r\n        return _super.call(this, socket, encoding) || this;\r\n    }\r\n    return SocketMessageReader;\r\n}(StreamMessageReader));\r\nexports.SocketMessageReader = SocketMessageReader;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nvar Is = require(\"./is\");\r\nvar ContentLength = 'Content-Length: ';\r\nvar CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nvar AbstractMessageWriter = /** @class */ (function () {\r\n    function AbstractMessageWriter() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    AbstractMessageWriter.prototype.dispose = function () {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    };\r\n    Object.defineProperty(AbstractMessageWriter.prototype, \"onError\", {\r\n        get: function () {\r\n            return this.errorEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageWriter.prototype.fireError = function (error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    };\r\n    Object.defineProperty(AbstractMessageWriter.prototype, \"onClose\", {\r\n        get: function () {\r\n            return this.closeEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageWriter.prototype.fireClose = function () {\r\n        this.closeEmitter.fire(undefined);\r\n    };\r\n    AbstractMessageWriter.prototype.asError = function (error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(\"Writer recevied error. Reason: \" + (Is.string(error.message) ? error.message : 'unknown'));\r\n        }\r\n    };\r\n    return AbstractMessageWriter;\r\n}());\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nvar StreamMessageWriter = /** @class */ (function (_super) {\r\n    __extends(StreamMessageWriter, _super);\r\n    function StreamMessageWriter(writable, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        var _this = _super.call(this) || this;\r\n        _this.writable = writable;\r\n        _this.encoding = encoding;\r\n        _this.errorCount = 0;\r\n        _this.writable.on('error', function (error) { return _this.fireError(error); });\r\n        _this.writable.on('close', function () { return _this.fireClose(); });\r\n        return _this;\r\n    }\r\n    StreamMessageWriter.prototype.write = function (msg) {\r\n        var json = JSON.stringify(msg);\r\n        var contentLength = Buffer.byteLength(json, this.encoding);\r\n        var headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    };\r\n    return StreamMessageWriter;\r\n}(AbstractMessageWriter));\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nvar IPCMessageWriter = /** @class */ (function (_super) {\r\n    __extends(IPCMessageWriter, _super);\r\n    function IPCMessageWriter(process) {\r\n        var _this = _super.call(this) || this;\r\n        _this.process = process;\r\n        _this.errorCount = 0;\r\n        _this.queue = [];\r\n        _this.sending = false;\r\n        var eventEmitter = _this.process;\r\n        eventEmitter.on('error', function (error) { return _this.fireError(error); });\r\n        eventEmitter.on('close', function () { return _this.fireClose; });\r\n        return _this;\r\n    }\r\n    IPCMessageWriter.prototype.write = function (msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    };\r\n    IPCMessageWriter.prototype.doWriteMessage = function (msg) {\r\n        var _this = this;\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, function (error) {\r\n                    _this.sending = false;\r\n                    if (error) {\r\n                        _this.errorCount++;\r\n                        _this.fireError(error, msg, _this.errorCount);\r\n                    }\r\n                    else {\r\n                        _this.errorCount = 0;\r\n                    }\r\n                    if (_this.queue.length > 0) {\r\n                        _this.doWriteMessage(_this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    };\r\n    return IPCMessageWriter;\r\n}(AbstractMessageWriter));\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nvar SocketMessageWriter = /** @class */ (function (_super) {\r\n    __extends(SocketMessageWriter, _super);\r\n    function SocketMessageWriter(socket, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        var _this = _super.call(this) || this;\r\n        _this.socket = socket;\r\n        _this.queue = [];\r\n        _this.sending = false;\r\n        _this.encoding = encoding;\r\n        _this.errorCount = 0;\r\n        _this.socket.on('error', function (error) { return _this.fireError(error); });\r\n        _this.socket.on('close', function () { return _this.fireClose(); });\r\n        return _this;\r\n    }\r\n    SocketMessageWriter.prototype.write = function (msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    };\r\n    SocketMessageWriter.prototype.doWriteMessage = function (msg) {\r\n        var _this = this;\r\n        var json = JSON.stringify(msg);\r\n        var contentLength = Buffer.byteLength(json, this.encoding);\r\n        var headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', function (error) {\r\n                if (error) {\r\n                    _this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    _this.socket.write(json, _this.encoding, function (error) {\r\n                        _this.sending = false;\r\n                        if (error) {\r\n                            _this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            _this.errorCount = 0;\r\n                        }\r\n                        if (_this.queue.length > 0) {\r\n                            _this.doWriteMessage(_this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    _this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    };\r\n    SocketMessageWriter.prototype.handleError = function (error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    };\r\n    return SocketMessageWriter;\r\n}(AbstractMessageWriter));\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nvar ResponseError = /** @class */ (function (_super) {\r\n    __extends(ResponseError, _super);\r\n    function ResponseError(code, message, data) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        _this.data = data;\r\n        Object.setPrototypeOf(_this, ResponseError.prototype);\r\n        return _this;\r\n    }\r\n    ResponseError.prototype.toJson = function () {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    };\r\n    return ResponseError;\r\n}(Error));\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nvar AbstractMessageType = /** @class */ (function () {\r\n    function AbstractMessageType(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    Object.defineProperty(AbstractMessageType.prototype, \"method\", {\r\n        get: function () {\r\n            return this._method;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbstractMessageType.prototype, \"numberOfParams\", {\r\n        get: function () {\r\n            return this._numberOfParams;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbstractMessageType;\r\n}());\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n */\r\nvar RequestType0 = /** @class */ (function (_super) {\r\n    __extends(RequestType0, _super);\r\n    function RequestType0(method) {\r\n        var _this = _super.call(this, method, 0) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType0;\r\n}(AbstractMessageType));\r\nexports.RequestType0 = RequestType0;\r\nvar RequestType = /** @class */ (function (_super) {\r\n    __extends(RequestType, _super);\r\n    function RequestType(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType;\r\n}(AbstractMessageType));\r\nexports.RequestType = RequestType;\r\nvar RequestType1 = /** @class */ (function (_super) {\r\n    __extends(RequestType1, _super);\r\n    function RequestType1(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType1;\r\n}(AbstractMessageType));\r\nexports.RequestType1 = RequestType1;\r\nvar RequestType2 = /** @class */ (function (_super) {\r\n    __extends(RequestType2, _super);\r\n    function RequestType2(method) {\r\n        var _this = _super.call(this, method, 2) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType2;\r\n}(AbstractMessageType));\r\nexports.RequestType2 = RequestType2;\r\nvar RequestType3 = /** @class */ (function (_super) {\r\n    __extends(RequestType3, _super);\r\n    function RequestType3(method) {\r\n        var _this = _super.call(this, method, 3) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType3;\r\n}(AbstractMessageType));\r\nexports.RequestType3 = RequestType3;\r\nvar RequestType4 = /** @class */ (function (_super) {\r\n    __extends(RequestType4, _super);\r\n    function RequestType4(method) {\r\n        var _this = _super.call(this, method, 4) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType4;\r\n}(AbstractMessageType));\r\nexports.RequestType4 = RequestType4;\r\nvar RequestType5 = /** @class */ (function (_super) {\r\n    __extends(RequestType5, _super);\r\n    function RequestType5(method) {\r\n        var _this = _super.call(this, method, 5) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType5;\r\n}(AbstractMessageType));\r\nexports.RequestType5 = RequestType5;\r\nvar RequestType6 = /** @class */ (function (_super) {\r\n    __extends(RequestType6, _super);\r\n    function RequestType6(method) {\r\n        var _this = _super.call(this, method, 6) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType6;\r\n}(AbstractMessageType));\r\nexports.RequestType6 = RequestType6;\r\nvar RequestType7 = /** @class */ (function (_super) {\r\n    __extends(RequestType7, _super);\r\n    function RequestType7(method) {\r\n        var _this = _super.call(this, method, 7) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType7;\r\n}(AbstractMessageType));\r\nexports.RequestType7 = RequestType7;\r\nvar RequestType8 = /** @class */ (function (_super) {\r\n    __extends(RequestType8, _super);\r\n    function RequestType8(method) {\r\n        var _this = _super.call(this, method, 8) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType8;\r\n}(AbstractMessageType));\r\nexports.RequestType8 = RequestType8;\r\nvar RequestType9 = /** @class */ (function (_super) {\r\n    __extends(RequestType9, _super);\r\n    function RequestType9(method) {\r\n        var _this = _super.call(this, method, 9) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType9;\r\n}(AbstractMessageType));\r\nexports.RequestType9 = RequestType9;\r\nvar NotificationType = /** @class */ (function (_super) {\r\n    __extends(NotificationType, _super);\r\n    function NotificationType(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType;\r\n}(AbstractMessageType));\r\nexports.NotificationType = NotificationType;\r\nvar NotificationType0 = /** @class */ (function (_super) {\r\n    __extends(NotificationType0, _super);\r\n    function NotificationType0(method) {\r\n        var _this = _super.call(this, method, 0) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType0;\r\n}(AbstractMessageType));\r\nexports.NotificationType0 = NotificationType0;\r\nvar NotificationType1 = /** @class */ (function (_super) {\r\n    __extends(NotificationType1, _super);\r\n    function NotificationType1(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType1;\r\n}(AbstractMessageType));\r\nexports.NotificationType1 = NotificationType1;\r\nvar NotificationType2 = /** @class */ (function (_super) {\r\n    __extends(NotificationType2, _super);\r\n    function NotificationType2(method) {\r\n        var _this = _super.call(this, method, 2) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType2;\r\n}(AbstractMessageType));\r\nexports.NotificationType2 = NotificationType2;\r\nvar NotificationType3 = /** @class */ (function (_super) {\r\n    __extends(NotificationType3, _super);\r\n    function NotificationType3(method) {\r\n        var _this = _super.call(this, method, 3) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType3;\r\n}(AbstractMessageType));\r\nexports.NotificationType3 = NotificationType3;\r\nvar NotificationType4 = /** @class */ (function (_super) {\r\n    __extends(NotificationType4, _super);\r\n    function NotificationType4(method) {\r\n        var _this = _super.call(this, method, 4) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType4;\r\n}(AbstractMessageType));\r\nexports.NotificationType4 = NotificationType4;\r\nvar NotificationType5 = /** @class */ (function (_super) {\r\n    __extends(NotificationType5, _super);\r\n    function NotificationType5(method) {\r\n        var _this = _super.call(this, method, 5) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType5;\r\n}(AbstractMessageType));\r\nexports.NotificationType5 = NotificationType5;\r\nvar NotificationType6 = /** @class */ (function (_super) {\r\n    __extends(NotificationType6, _super);\r\n    function NotificationType6(method) {\r\n        var _this = _super.call(this, method, 6) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType6;\r\n}(AbstractMessageType));\r\nexports.NotificationType6 = NotificationType6;\r\nvar NotificationType7 = /** @class */ (function (_super) {\r\n    __extends(NotificationType7, _super);\r\n    function NotificationType7(method) {\r\n        var _this = _super.call(this, method, 7) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType7;\r\n}(AbstractMessageType));\r\nexports.NotificationType7 = NotificationType7;\r\nvar NotificationType8 = /** @class */ (function (_super) {\r\n    __extends(NotificationType8, _super);\r\n    function NotificationType8(method) {\r\n        var _this = _super.call(this, method, 8) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType8;\r\n}(AbstractMessageType));\r\nexports.NotificationType8 = NotificationType8;\r\nvar NotificationType9 = /** @class */ (function (_super) {\r\n    __extends(NotificationType9, _super);\r\n    function NotificationType9(method) {\r\n        var _this = _super.call(this, method, 9) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType9;\r\n}(AbstractMessageType));\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    var candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    var candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    var candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path_1 = require(\"path\");\r\nvar os_1 = require(\"os\");\r\nvar crypto_1 = require(\"crypto\");\r\nvar net_1 = require(\"net\");\r\nvar messageReader_1 = require(\"./messageReader\");\r\nvar messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    var randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return \"\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-\" + randomSuffix + \"-sock\";\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), \"vscode-\" + randomSuffix + \".sock\");\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var connectResolve;\r\n    var connected = new Promise(function (resolve, _reject) {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        var server = net_1.createServer(function (socket) {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, function () {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: function () { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar net_1 = require(\"net\");\r\nvar messageReader_1 = require(\"./messageReader\");\r\nvar messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var connectResolve;\r\n    var connected = new Promise(function (resolve, _reject) {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        var server = net_1.createServer(function (socket) {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', function () {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: function () { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","(function() {\n  var Query, pathScorer, pluckCandidates, scorer, sortCandidates;\n\n  scorer = require('./scorer');\n\n  pathScorer = require('./pathScorer');\n\n  Query = require('./query');\n\n  pluckCandidates = function(a) {\n    return a.candidate;\n  };\n\n  sortCandidates = function(a, b) {\n    return b.score - a.score;\n  };\n\n  module.exports = function(candidates, query, options) {\n    var bKey, candidate, key, maxInners, maxResults, score, scoreProvider, scoredCandidates, spotLeft, string, usePathScoring, _i, _len;\n    scoredCandidates = [];\n    key = options.key, maxResults = options.maxResults, maxInners = options.maxInners, usePathScoring = options.usePathScoring;\n    spotLeft = (maxInners != null) && maxInners > 0 ? maxInners : candidates.length + 1;\n    bKey = key != null;\n    scoreProvider = usePathScoring ? pathScorer : scorer;\n    for (_i = 0, _len = candidates.length; _i < _len; _i++) {\n      candidate = candidates[_i];\n      string = bKey ? candidate[key] : candidate;\n      if (!string) {\n        continue;\n      }\n      score = scoreProvider.score(string, query, options);\n      if (score > 0) {\n        scoredCandidates.push({\n          candidate: candidate,\n          score: score\n        });\n        if (!--spotLeft) {\n          break;\n        }\n      }\n    }\n    scoredCandidates.sort(sortCandidates);\n    candidates = scoredCandidates.map(pluckCandidates);\n    if (maxResults != null) {\n      candidates = candidates.slice(0, maxResults);\n    }\n    return candidates;\n  };\n\n}).call(this);\n","(function() {\n  var Query, defaultPathSeparator, filter, matcher, parseOptions, pathScorer, preparedQueryCache, scorer;\n\n  filter = require('./filter');\n\n  matcher = require('./matcher');\n\n  scorer = require('./scorer');\n\n  pathScorer = require('./pathScorer');\n\n  Query = require('./query');\n\n  preparedQueryCache = null;\n\n  defaultPathSeparator = (typeof process !== \"undefined\" && process !== null ? process.platform : void 0) === \"win32\" ? '\\\\' : '/';\n\n  module.exports = {\n    filter: function(candidates, query, options) {\n      if (options == null) {\n        options = {};\n      }\n      if (!((query != null ? query.length : void 0) && (candidates != null ? candidates.length : void 0))) {\n        return [];\n      }\n      options = parseOptions(options, query);\n      return filter(candidates, query, options);\n    },\n    score: function(string, query, options) {\n      if (options == null) {\n        options = {};\n      }\n      if (!((string != null ? string.length : void 0) && (query != null ? query.length : void 0))) {\n        return 0;\n      }\n      options = parseOptions(options, query);\n      if (options.usePathScoring) {\n        return pathScorer.score(string, query, options);\n      } else {\n        return scorer.score(string, query, options);\n      }\n    },\n    match: function(string, query, options) {\n      var _i, _ref, _results;\n      if (options == null) {\n        options = {};\n      }\n      if (!string) {\n        return [];\n      }\n      if (!query) {\n        return [];\n      }\n      if (string === query) {\n        return (function() {\n          _results = [];\n          for (var _i = 0, _ref = string.length; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n          return _results;\n        }).apply(this);\n      }\n      options = parseOptions(options, query);\n      return matcher.match(string, query, options);\n    },\n    wrap: function(string, query, options) {\n      if (options == null) {\n        options = {};\n      }\n      if (!string) {\n        return [];\n      }\n      if (!query) {\n        return [];\n      }\n      options = parseOptions(options, query);\n      return matcher.wrap(string, query, options);\n    },\n    prepareQuery: function(query, options) {\n      if (options == null) {\n        options = {};\n      }\n      options = parseOptions(options, query);\n      return options.preparedQuery;\n    }\n  };\n\n  parseOptions = function(options, query) {\n    if (options.allowErrors == null) {\n      options.allowErrors = false;\n    }\n    if (options.usePathScoring == null) {\n      options.usePathScoring = true;\n    }\n    if (options.useExtensionBonus == null) {\n      options.useExtensionBonus = false;\n    }\n    if (options.pathSeparator == null) {\n      options.pathSeparator = defaultPathSeparator;\n    }\n    if (options.optCharRegEx == null) {\n      options.optCharRegEx = null;\n    }\n    if (options.wrap == null) {\n      options.wrap = null;\n    }\n    if (options.preparedQuery == null) {\n      options.preparedQuery = preparedQueryCache && preparedQueryCache.query === query ? preparedQueryCache : (preparedQueryCache = new Query(query, options));\n    }\n    return options;\n  };\n\n}).call(this);\n","(function() {\n  var basenameMatch, computeMatch, isMatch, isWordStart, match, mergeMatches, scoreAcronyms, scoreCharacter, scoreConsecutives, _ref;\n\n  _ref = require('./scorer'), isMatch = _ref.isMatch, isWordStart = _ref.isWordStart, scoreConsecutives = _ref.scoreConsecutives, scoreCharacter = _ref.scoreCharacter, scoreAcronyms = _ref.scoreAcronyms;\n\n  exports.match = match = function(string, query, options) {\n    var allowErrors, baseMatches, matches, pathSeparator, preparedQuery, string_lw;\n    allowErrors = options.allowErrors, preparedQuery = options.preparedQuery, pathSeparator = options.pathSeparator;\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return [];\n    }\n    string_lw = string.toLowerCase();\n    matches = computeMatch(string, string_lw, preparedQuery);\n    if (matches.length === 0) {\n      return matches;\n    }\n    if (string.indexOf(pathSeparator) > -1) {\n      baseMatches = basenameMatch(string, string_lw, preparedQuery, pathSeparator);\n      matches = mergeMatches(matches, baseMatches);\n    }\n    return matches;\n  };\n\n  exports.wrap = function(string, query, options) {\n    var matchIndex, matchPos, matchPositions, output, strPos, tagClass, tagClose, tagOpen, _ref1;\n    if ((options.wrap != null)) {\n      _ref1 = options.wrap, tagClass = _ref1.tagClass, tagOpen = _ref1.tagOpen, tagClose = _ref1.tagClose;\n    }\n    if (tagClass == null) {\n      tagClass = 'highlight';\n    }\n    if (tagOpen == null) {\n      tagOpen = '<strong class=\"' + tagClass + '\">';\n    }\n    if (tagClose == null) {\n      tagClose = '</strong>';\n    }\n    if (string === query) {\n      return tagOpen + string + tagClose;\n    }\n    matchPositions = match(string, query, options);\n    if (matchPositions.length === 0) {\n      return string;\n    }\n    output = '';\n    matchIndex = -1;\n    strPos = 0;\n    while (++matchIndex < matchPositions.length) {\n      matchPos = matchPositions[matchIndex];\n      if (matchPos > strPos) {\n        output += string.substring(strPos, matchPos);\n        strPos = matchPos;\n      }\n      while (++matchIndex < matchPositions.length) {\n        if (matchPositions[matchIndex] === matchPos + 1) {\n          matchPos++;\n        } else {\n          matchIndex--;\n          break;\n        }\n      }\n      matchPos++;\n      if (matchPos > strPos) {\n        output += tagOpen;\n        output += string.substring(strPos, matchPos);\n        output += tagClose;\n        strPos = matchPos;\n      }\n    }\n    if (strPos <= string.length - 1) {\n      output += string.substring(strPos);\n    }\n    return output;\n  };\n\n  basenameMatch = function(subject, subject_lw, preparedQuery, pathSeparator) {\n    var basePos, depth, end;\n    end = subject.length - 1;\n    while (subject[end] === pathSeparator) {\n      end--;\n    }\n    basePos = subject.lastIndexOf(pathSeparator, end);\n    if (basePos === -1) {\n      return [];\n    }\n    depth = preparedQuery.depth;\n    while (depth-- > 0) {\n      basePos = subject.lastIndexOf(pathSeparator, basePos - 1);\n      if (basePos === -1) {\n        return [];\n      }\n    }\n    basePos++;\n    end++;\n    return computeMatch(subject.slice(basePos, end), subject_lw.slice(basePos, end), preparedQuery, basePos);\n  };\n\n  mergeMatches = function(a, b) {\n    var ai, bj, i, j, m, n, out;\n    m = a.length;\n    n = b.length;\n    if (n === 0) {\n      return a.slice();\n    }\n    if (m === 0) {\n      return b.slice();\n    }\n    i = -1;\n    j = 0;\n    bj = b[j];\n    out = [];\n    while (++i < m) {\n      ai = a[i];\n      while (bj <= ai && ++j < n) {\n        if (bj < ai) {\n          out.push(bj);\n        }\n        bj = b[j];\n      }\n      out.push(ai);\n    }\n    while (j < n) {\n      out.push(b[j++]);\n    }\n    return out;\n  };\n\n  computeMatch = function(subject, subject_lw, preparedQuery, offset) {\n    var DIAGONAL, LEFT, STOP, UP, acro_score, align, backtrack, csc_diag, csc_row, csc_score, i, j, m, matches, move, n, pos, query, query_lw, score, score_diag, score_row, score_up, si_lw, start, trace;\n    if (offset == null) {\n      offset = 0;\n    }\n    query = preparedQuery.query;\n    query_lw = preparedQuery.query_lw;\n    m = subject.length;\n    n = query.length;\n    acro_score = scoreAcronyms(subject, subject_lw, query, query_lw).score;\n    score_row = new Array(n);\n    csc_row = new Array(n);\n    STOP = 0;\n    UP = 1;\n    LEFT = 2;\n    DIAGONAL = 3;\n    trace = new Array(m * n);\n    pos = -1;\n    j = -1;\n    while (++j < n) {\n      score_row[j] = 0;\n      csc_row[j] = 0;\n    }\n    i = -1;\n    while (++i < m) {\n      score = 0;\n      score_up = 0;\n      csc_diag = 0;\n      si_lw = subject_lw[i];\n      j = -1;\n      while (++j < n) {\n        csc_score = 0;\n        align = 0;\n        score_diag = score_up;\n        if (query_lw[j] === si_lw) {\n          start = isWordStart(i, subject, subject_lw);\n          csc_score = csc_diag > 0 ? csc_diag : scoreConsecutives(subject, subject_lw, query, query_lw, i, j, start);\n          align = score_diag + scoreCharacter(i, j, start, acro_score, csc_score);\n        }\n        score_up = score_row[j];\n        csc_diag = csc_row[j];\n        if (score > score_up) {\n          move = LEFT;\n        } else {\n          score = score_up;\n          move = UP;\n        }\n        if (align > score) {\n          score = align;\n          move = DIAGONAL;\n        } else {\n          csc_score = 0;\n        }\n        score_row[j] = score;\n        csc_row[j] = csc_score;\n        trace[++pos] = score > 0 ? move : STOP;\n      }\n    }\n    i = m - 1;\n    j = n - 1;\n    pos = i * n + j;\n    backtrack = true;\n    matches = [];\n    while (backtrack && i >= 0 && j >= 0) {\n      switch (trace[pos]) {\n        case UP:\n          i--;\n          pos -= n;\n          break;\n        case LEFT:\n          j--;\n          pos--;\n          break;\n        case DIAGONAL:\n          matches.push(i + offset);\n          j--;\n          i--;\n          pos -= n + 1;\n          break;\n        default:\n          backtrack = false;\n      }\n    }\n    matches.reverse();\n    return matches;\n  };\n\n}).call(this);\n","(function() {\n  var computeScore, countDir, file_coeff, getExtension, getExtensionScore, isMatch, scorePath, scoreSize, tau_depth, _ref;\n\n  _ref = require('./scorer'), isMatch = _ref.isMatch, computeScore = _ref.computeScore, scoreSize = _ref.scoreSize;\n\n  tau_depth = 20;\n\n  file_coeff = 2.5;\n\n  exports.score = function(string, query, options) {\n    var allowErrors, preparedQuery, score, string_lw;\n    preparedQuery = options.preparedQuery, allowErrors = options.allowErrors;\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return 0;\n    }\n    string_lw = string.toLowerCase();\n    score = computeScore(string, string_lw, preparedQuery);\n    score = scorePath(string, string_lw, score, options);\n    return Math.ceil(score);\n  };\n\n  scorePath = function(subject, subject_lw, fullPathScore, options) {\n    var alpha, basePathScore, basePos, depth, end, extAdjust, fileLength, pathSeparator, preparedQuery, useExtensionBonus;\n    if (fullPathScore === 0) {\n      return 0;\n    }\n    preparedQuery = options.preparedQuery, useExtensionBonus = options.useExtensionBonus, pathSeparator = options.pathSeparator;\n    end = subject.length - 1;\n    while (subject[end] === pathSeparator) {\n      end--;\n    }\n    basePos = subject.lastIndexOf(pathSeparator, end);\n    fileLength = end - basePos;\n    extAdjust = 1.0;\n    if (useExtensionBonus) {\n      extAdjust += getExtensionScore(subject_lw, preparedQuery.ext, basePos, end, 2);\n      fullPathScore *= extAdjust;\n    }\n    if (basePos === -1) {\n      return fullPathScore;\n    }\n    depth = preparedQuery.depth;\n    while (basePos > -1 && depth-- > 0) {\n      basePos = subject.lastIndexOf(pathSeparator, basePos - 1);\n    }\n    basePathScore = basePos === -1 ? fullPathScore : extAdjust * computeScore(subject.slice(basePos + 1, end + 1), subject_lw.slice(basePos + 1, end + 1), preparedQuery);\n    alpha = 0.5 * tau_depth / (tau_depth + countDir(subject, end + 1, pathSeparator));\n    return alpha * basePathScore + (1 - alpha) * fullPathScore * scoreSize(0, file_coeff * fileLength);\n  };\n\n  exports.countDir = countDir = function(path, end, pathSeparator) {\n    var count, i;\n    if (end < 1) {\n      return 0;\n    }\n    count = 0;\n    i = -1;\n    while (++i < end && path[i] === pathSeparator) {\n      continue;\n    }\n    while (++i < end) {\n      if (path[i] === pathSeparator) {\n        count++;\n        while (++i < end && path[i] === pathSeparator) {\n          continue;\n        }\n      }\n    }\n    return count;\n  };\n\n  exports.getExtension = getExtension = function(str) {\n    var pos;\n    pos = str.lastIndexOf(\".\");\n    if (pos < 0) {\n      return \"\";\n    } else {\n      return str.substr(pos + 1);\n    }\n  };\n\n  getExtensionScore = function(candidate, ext, startPos, endPos, maxDepth) {\n    var m, matched, n, pos;\n    if (!ext.length) {\n      return 0;\n    }\n    pos = candidate.lastIndexOf(\".\", endPos);\n    if (!(pos > startPos)) {\n      return 0;\n    }\n    n = ext.length;\n    m = endPos - pos;\n    if (m < n) {\n      n = m;\n      m = ext.length;\n    }\n    pos++;\n    matched = -1;\n    while (++matched < n) {\n      if (candidate[pos + matched] !== ext[matched]) {\n        break;\n      }\n    }\n    if (matched === 0 && maxDepth > 0) {\n      return 0.9 * getExtensionScore(candidate, ext, startPos, pos - 2, maxDepth - 1);\n    }\n    return matched / m;\n  };\n\n}).call(this);\n","(function() {\n  var Query, coreChars, countDir, getCharCodes, getExtension, opt_char_re, truncatedUpperCase, _ref;\n\n  _ref = require(\"./pathScorer\"), countDir = _ref.countDir, getExtension = _ref.getExtension;\n\n  module.exports = Query = (function() {\n    function Query(query, _arg) {\n      var optCharRegEx, pathSeparator, _ref1;\n      _ref1 = _arg != null ? _arg : {}, optCharRegEx = _ref1.optCharRegEx, pathSeparator = _ref1.pathSeparator;\n      if (!(query && query.length)) {\n        return null;\n      }\n      this.query = query;\n      this.query_lw = query.toLowerCase();\n      this.core = coreChars(query, optCharRegEx);\n      this.core_lw = this.core.toLowerCase();\n      this.core_up = truncatedUpperCase(this.core);\n      this.depth = countDir(query, query.length, pathSeparator);\n      this.ext = getExtension(this.query_lw);\n      this.charCodes = getCharCodes(this.query_lw);\n    }\n\n    return Query;\n\n  })();\n\n  opt_char_re = /[ _\\-:\\/\\\\]/g;\n\n  coreChars = function(query, optCharRegEx) {\n    if (optCharRegEx == null) {\n      optCharRegEx = opt_char_re;\n    }\n    return query.replace(optCharRegEx, '');\n  };\n\n  truncatedUpperCase = function(str) {\n    var char, upper, _i, _len;\n    upper = \"\";\n    for (_i = 0, _len = str.length; _i < _len; _i++) {\n      char = str[_i];\n      upper += char.toUpperCase()[0];\n    }\n    return upper;\n  };\n\n  getCharCodes = function(str) {\n    var charCodes, i, len;\n    len = str.length;\n    i = -1;\n    charCodes = [];\n    while (++i < len) {\n      charCodes[str.charCodeAt(i)] = true;\n    }\n    return charCodes;\n  };\n\n}).call(this);\n","(function() {\n  var AcronymResult, computeScore, emptyAcronymResult, isAcronymFullWord, isMatch, isSeparator, isWordEnd, isWordStart, miss_coeff, pos_bonus, scoreAcronyms, scoreCharacter, scoreConsecutives, scoreExact, scoreExactMatch, scorePattern, scorePosition, scoreSize, tau_size, wm;\n\n  wm = 150;\n\n  pos_bonus = 20;\n\n  tau_size = 150;\n\n  miss_coeff = 0.75;\n\n  exports.score = function(string, query, options) {\n    var allowErrors, preparedQuery, score, string_lw;\n    preparedQuery = options.preparedQuery, allowErrors = options.allowErrors;\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return 0;\n    }\n    string_lw = string.toLowerCase();\n    score = computeScore(string, string_lw, preparedQuery);\n    return Math.ceil(score);\n  };\n\n  exports.isMatch = isMatch = function(subject, query_lw, query_up) {\n    var i, j, m, n, qj_lw, qj_up, si;\n    m = subject.length;\n    n = query_lw.length;\n    if (!m || n > m) {\n      return false;\n    }\n    i = -1;\n    j = -1;\n    while (++j < n) {\n      qj_lw = query_lw.charCodeAt(j);\n      qj_up = query_up.charCodeAt(j);\n      while (++i < m) {\n        si = subject.charCodeAt(i);\n        if (si === qj_lw || si === qj_up) {\n          break;\n        }\n      }\n      if (i === m) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  exports.computeScore = computeScore = function(subject, subject_lw, preparedQuery) {\n    var acro, acro_score, align, csc_diag, csc_row, csc_score, csc_should_rebuild, i, j, m, miss_budget, miss_left, n, pos, query, query_lw, record_miss, score, score_diag, score_row, score_up, si_lw, start, sz;\n    query = preparedQuery.query;\n    query_lw = preparedQuery.query_lw;\n    m = subject.length;\n    n = query.length;\n    acro = scoreAcronyms(subject, subject_lw, query, query_lw);\n    acro_score = acro.score;\n    if (acro.count === n) {\n      return scoreExact(n, m, acro_score, acro.pos);\n    }\n    pos = subject_lw.indexOf(query_lw);\n    if (pos > -1) {\n      return scoreExactMatch(subject, subject_lw, query, query_lw, pos, n, m);\n    }\n    score_row = new Array(n);\n    csc_row = new Array(n);\n    sz = scoreSize(n, m);\n    miss_budget = Math.ceil(miss_coeff * n) + 5;\n    miss_left = miss_budget;\n    csc_should_rebuild = true;\n    j = -1;\n    while (++j < n) {\n      score_row[j] = 0;\n      csc_row[j] = 0;\n    }\n    i = -1;\n    while (++i < m) {\n      si_lw = subject_lw[i];\n      if (!si_lw.charCodeAt(0) in preparedQuery.charCodes) {\n        if (csc_should_rebuild) {\n          j = -1;\n          while (++j < n) {\n            csc_row[j] = 0;\n          }\n          csc_should_rebuild = false;\n        }\n        continue;\n      }\n      score = 0;\n      score_diag = 0;\n      csc_diag = 0;\n      record_miss = true;\n      csc_should_rebuild = true;\n      j = -1;\n      while (++j < n) {\n        score_up = score_row[j];\n        if (score_up > score) {\n          score = score_up;\n        }\n        csc_score = 0;\n        if (query_lw[j] === si_lw) {\n          start = isWordStart(i, subject, subject_lw);\n          csc_score = csc_diag > 0 ? csc_diag : scoreConsecutives(subject, subject_lw, query, query_lw, i, j, start);\n          align = score_diag + scoreCharacter(i, j, start, acro_score, csc_score);\n          if (align > score) {\n            score = align;\n            miss_left = miss_budget;\n          } else {\n            if (record_miss && --miss_left <= 0) {\n              return Math.max(score, score_row[n - 1]) * sz;\n            }\n            record_miss = false;\n          }\n        }\n        score_diag = score_up;\n        csc_diag = csc_row[j];\n        csc_row[j] = csc_score;\n        score_row[j] = score;\n      }\n    }\n    score = score_row[n - 1];\n    return score * sz;\n  };\n\n  exports.isWordStart = isWordStart = function(pos, subject, subject_lw) {\n    var curr_s, prev_s;\n    if (pos === 0) {\n      return true;\n    }\n    curr_s = subject[pos];\n    prev_s = subject[pos - 1];\n    return isSeparator(prev_s) || (curr_s !== subject_lw[pos] && prev_s === subject_lw[pos - 1]);\n  };\n\n  exports.isWordEnd = isWordEnd = function(pos, subject, subject_lw, len) {\n    var curr_s, next_s;\n    if (pos === len - 1) {\n      return true;\n    }\n    curr_s = subject[pos];\n    next_s = subject[pos + 1];\n    return isSeparator(next_s) || (curr_s === subject_lw[pos] && next_s !== subject_lw[pos + 1]);\n  };\n\n  isSeparator = function(c) {\n    return c === ' ' || c === '.' || c === '-' || c === '_' || c === '/' || c === '\\\\';\n  };\n\n  scorePosition = function(pos) {\n    var sc;\n    if (pos < pos_bonus) {\n      sc = pos_bonus - pos;\n      return 100 + sc * sc;\n    } else {\n      return Math.max(100 + pos_bonus - pos, 0);\n    }\n  };\n\n  exports.scoreSize = scoreSize = function(n, m) {\n    return tau_size / (tau_size + Math.abs(m - n));\n  };\n\n  scoreExact = function(n, m, quality, pos) {\n    return 2 * n * (wm * quality + scorePosition(pos)) * scoreSize(n, m);\n  };\n\n  exports.scorePattern = scorePattern = function(count, len, sameCase, start, end) {\n    var bonus, sz;\n    sz = count;\n    bonus = 6;\n    if (sameCase === count) {\n      bonus += 2;\n    }\n    if (start) {\n      bonus += 3;\n    }\n    if (end) {\n      bonus += 1;\n    }\n    if (count === len) {\n      if (start) {\n        if (sameCase === len) {\n          sz += 2;\n        } else {\n          sz += 1;\n        }\n      }\n      if (end) {\n        bonus += 1;\n      }\n    }\n    return sameCase + sz * (sz + bonus);\n  };\n\n  exports.scoreCharacter = scoreCharacter = function(i, j, start, acro_score, csc_score) {\n    var posBonus;\n    posBonus = scorePosition(i);\n    if (start) {\n      return posBonus + wm * ((acro_score > csc_score ? acro_score : csc_score) + 10);\n    }\n    return posBonus + wm * csc_score;\n  };\n\n  exports.scoreConsecutives = scoreConsecutives = function(subject, subject_lw, query, query_lw, i, j, startOfWord) {\n    var k, m, mi, n, nj, sameCase, sz;\n    m = subject.length;\n    n = query.length;\n    mi = m - i;\n    nj = n - j;\n    k = mi < nj ? mi : nj;\n    sameCase = 0;\n    sz = 0;\n    if (query[j] === subject[i]) {\n      sameCase++;\n    }\n    while (++sz < k && query_lw[++j] === subject_lw[++i]) {\n      if (query[j] === subject[i]) {\n        sameCase++;\n      }\n    }\n    if (sz < k) {\n      i--;\n    }\n    if (sz === 1) {\n      return 1 + 2 * sameCase;\n    }\n    return scorePattern(sz, n, sameCase, startOfWord, isWordEnd(i, subject, subject_lw, m));\n  };\n\n  exports.scoreExactMatch = scoreExactMatch = function(subject, subject_lw, query, query_lw, pos, n, m) {\n    var end, i, pos2, sameCase, start;\n    start = isWordStart(pos, subject, subject_lw);\n    if (!start) {\n      pos2 = subject_lw.indexOf(query_lw, pos + 1);\n      if (pos2 > -1) {\n        start = isWordStart(pos2, subject, subject_lw);\n        if (start) {\n          pos = pos2;\n        }\n      }\n    }\n    i = -1;\n    sameCase = 0;\n    while (++i < n) {\n      if (query[pos + i] === subject[i]) {\n        sameCase++;\n      }\n    }\n    end = isWordEnd(pos + n - 1, subject, subject_lw, m);\n    return scoreExact(n, m, scorePattern(n, n, sameCase, start, end), pos);\n  };\n\n  AcronymResult = (function() {\n    function AcronymResult(score, pos, count) {\n      this.score = score;\n      this.pos = pos;\n      this.count = count;\n    }\n\n    return AcronymResult;\n\n  })();\n\n  emptyAcronymResult = new AcronymResult(0, 0.1, 0);\n\n  exports.scoreAcronyms = scoreAcronyms = function(subject, subject_lw, query, query_lw) {\n    var count, fullWord, i, j, m, n, qj_lw, sameCase, score, sepCount, sumPos;\n    m = subject.length;\n    n = query.length;\n    if (!(m > 1 && n > 1)) {\n      return emptyAcronymResult;\n    }\n    count = 0;\n    sepCount = 0;\n    sumPos = 0;\n    sameCase = 0;\n    i = -1;\n    j = -1;\n    while (++j < n) {\n      qj_lw = query_lw[j];\n      if (isSeparator(qj_lw)) {\n        i = subject_lw.indexOf(qj_lw, i + 1);\n        if (i > -1) {\n          sepCount++;\n          continue;\n        } else {\n          break;\n        }\n      }\n      while (++i < m) {\n        if (qj_lw === subject_lw[i] && isWordStart(i, subject, subject_lw)) {\n          if (query[j] === subject[i]) {\n            sameCase++;\n          }\n          sumPos += i;\n          count++;\n          break;\n        }\n      }\n      if (i === m) {\n        break;\n      }\n    }\n    if (count < 2) {\n      return emptyAcronymResult;\n    }\n    fullWord = count === n ? isAcronymFullWord(subject, subject_lw, query, count) : false;\n    score = scorePattern(count, n, sameCase, true, fullWord);\n    return new AcronymResult(score, sumPos / count, count + sepCount);\n  };\n\n  isAcronymFullWord = function(subject, subject_lw, query, nbAcronymInQuery) {\n    var count, i, m, n;\n    m = subject.length;\n    n = query.length;\n    count = 0;\n    if (m > 12 * n) {\n      return false;\n    }\n    i = -1;\n    while (++i < m) {\n      if (isWordStart(i, subject, subject_lw) && ++count > nbAcronymInQuery) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n}).call(this);\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    let handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this._emitter = undefined;\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new events_1.Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n}\r\nclass CancellationTokenSource {\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancel();\r\n    }\r\n}\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    const _disposable = { dispose() { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nclass CallbackList {\r\n    add(callback, context = null, bucket) {\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: () => this.remove(callback, context) });\r\n        }\r\n    }\r\n    remove(callback, context = null) {\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    }\r\n    invoke(...args) {\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isEmpty() {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    }\r\n    dispose() {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    }\r\n}\r\nclass Emitter {\r\n    constructor(_options) {\r\n        this._options = _options;\r\n    }\r\n    /**\r\n     * For the public to allow to subscribe\r\n     * to events from this Emitter\r\n     */\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener, thisArgs, disposables) => {\r\n                if (!this._callbacks) {\r\n                    this._callbacks = new CallbackList();\r\n                }\r\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\r\n                    this._options.onFirstListenerAdd(this);\r\n                }\r\n                this._callbacks.add(listener, thisArgs);\r\n                let result;\r\n                result = {\r\n                    dispose: () => {\r\n                        this._callbacks.remove(listener, thisArgs);\r\n                        result.dispose = Emitter._noop;\r\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\r\n                            this._options.onLastListenerRemove(this);\r\n                        }\r\n                    }\r\n                };\r\n                if (Array.isArray(disposables)) {\r\n                    disposables.push(result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    fire(event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    }\r\n}\r\nEmitter._noop = function () { };\r\nexports.Emitter = Emitter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nclass LinkedMap {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    clear() {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    isEmpty() {\r\n        return !this._head && !this._tail;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    has(key) {\r\n        return this._map.has(key);\r\n    }\r\n    get(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    }\r\n    set(key, value, touch = Touch.None) {\r\n        let item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key, value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    }\r\n    delete(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    }\r\n    shift() {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        const item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        let current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    }\r\n    forEachReverse(callbackfn, thisArg) {\r\n        let current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    }\r\n    values() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    keys() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    addItemFirst(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    }\r\n    addItemLast(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    }\r\n    removeItem(item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    }\r\n    touch(item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    }\r\n}\r\nexports.LinkedMap = LinkedMap;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"./thenable.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./is\");\r\nconst messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nconst messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nconst events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nconst cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nconst linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nexports.NullLogger = Object.freeze({\r\n    error: () => { },\r\n    warn: () => { },\r\n    info: () => { },\r\n    log: () => { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar TraceFormat;\r\n(function (TraceFormat) {\r\n    TraceFormat[\"Text\"] = \"text\";\r\n    TraceFormat[\"JSON\"] = \"json\";\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\n(function (TraceFormat) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        if (value === 'json') {\r\n            return TraceFormat.JSON;\r\n        }\r\n        else {\r\n            return TraceFormat.Text;\r\n        }\r\n    }\r\n    TraceFormat.fromString = fromString;\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nclass ConnectionError extends Error {\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, ConnectionError.prototype);\r\n    }\r\n}\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    let sequenceNumber = 0;\r\n    let notificationSquenceNumber = 0;\r\n    let unknownResponseSquenceNumber = 0;\r\n    const version = '2.0';\r\n    let starRequestHandler = undefined;\r\n    let requestHandlers = Object.create(null);\r\n    let starNotificationHandler = undefined;\r\n    let notificationHandlers = Object.create(null);\r\n    let timer;\r\n    let messageQueue = new linkedMap_1.LinkedMap();\r\n    let responsePromises = Object.create(null);\r\n    let requestTokens = Object.create(null);\r\n    let trace = Trace.Off;\r\n    let traceFormat = TraceFormat.Text;\r\n    let tracer;\r\n    let state = ConnectionState.New;\r\n    let errorEmitter = new events_1.Emitter();\r\n    let closeEmitter = new events_1.Emitter();\r\n    let unhandledNotificationEmitter = new events_1.Emitter();\r\n    let disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    ;\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(() => {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        let message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    let callback = (message) => {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                let key = createRequestQueueKey(message.params.id);\r\n                let toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        let element = requestHandlers[requestMessage.method];\r\n        let type;\r\n        let requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        let startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            let tokenKey = String(requestMessage.id);\r\n            requestTokens[tokenKey] = cancellationSource;\r\n            try {\r\n                let handlerResult;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                let promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then((resultOrError) => {\r\n                        delete requestTokens[tokenKey];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, error => {\r\n                        delete requestTokens[tokenKey];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\r\n            }\r\n            else {\r\n                logger.error(`Received response message without id. No further error information provided.`);\r\n            }\r\n        }\r\n        else {\r\n            let key = String(responseMessage.id);\r\n            let responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        let error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\r\n                    }\r\n                    else {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        let type = undefined;\r\n        let notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = (params) => {\r\n                let id = params.id;\r\n                let source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            let element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\r\n                }\r\n                else {\r\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\r\n        // Test whether we find an id to reject the promise\r\n        let responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            let key = String(responseMessage.id);\r\n            let responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-request', message);\r\n        }\r\n    }\r\n    function traceSendingNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Sending notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-notification', message);\r\n        }\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-response', message);\r\n        }\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-request', message);\r\n        }\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Received notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-notification', message);\r\n        }\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            if (responsePromise) {\r\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\r\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\r\n            }\r\n            else {\r\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\r\n            }\r\n        }\r\n        else {\r\n            logLSPMessage('receive-response', message);\r\n        }\r\n    }\r\n    function logLSPMessage(type, message) {\r\n        if (!tracer || trace === Trace.Off) {\r\n            return;\r\n        }\r\n        const lspMessage = {\r\n            isLSPMessage: true,\r\n            type,\r\n            message,\r\n            timestamp: Date.now()\r\n        };\r\n        tracer.log(lspMessage);\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        let result;\r\n        let numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (let i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    let connection = {\r\n        sendNotification: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            let method;\r\n            let messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            let notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendingNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        sendRequest: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            let method;\r\n            let messageParams;\r\n            let token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(value => undefinedToNull(value));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                let numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            let id = sequenceNumber++;\r\n            let result = new Promise((resolve, reject) => {\r\n                let requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(() => {\r\n                    connection.sendNotification(CancelNotification.type, { id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\r\n            let _sendNotification = false;\r\n            let _traceFormat = TraceFormat.Text;\r\n            if (sendNotificationOrTraceOptions !== void 0) {\r\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                    _sendNotification = sendNotificationOrTraceOptions;\r\n                }\r\n                else {\r\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\r\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\r\n                }\r\n            }\r\n            trace = _value;\r\n            traceFormat = _traceFormat;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (_sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: () => {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            let error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach((key) => {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: () => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: () => {\r\n            console.log(\"inspect\");\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, (params) => {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet DefaultSize = 8192;\r\nlet CR = Buffer.from('\\r', 'ascii')[0];\r\nlet LF = Buffer.from('\\n', 'ascii')[0];\r\nlet CRLF = '\\r\\n';\r\nclass MessageBuffer {\r\n    constructor(encoding = 'utf8') {\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\r\n    }\r\n    append(chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = Buffer.allocUnsafe(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = Buffer.allocUnsafe(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    }\r\n    tryReadHeaders() {\r\n        let result = undefined;\r\n        let current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach((header) => {\r\n            let index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            let key = header.substr(0, index);\r\n            let value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        let nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    tryReadContent(length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        let result = this.buffer.toString(this.encoding, 0, length);\r\n        let nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    get numberOfBytes() {\r\n        return this.index;\r\n    }\r\n}\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nclass AbstractMessageReader {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    get onPartialMessage() {\r\n        return this.partialMessageEmitter.event;\r\n    }\r\n    firePartialMessage(info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Reader recevied error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nclass StreamMessageReader extends AbstractMessageReader {\r\n    constructor(readable, encoding = 'utf8') {\r\n        super();\r\n        this.readable = readable;\r\n        this.buffer = new MessageBuffer(encoding);\r\n        this._partialMessageTimeout = 10000;\r\n    }\r\n    set partialMessageTimeout(timeout) {\r\n        this._partialMessageTimeout = timeout;\r\n    }\r\n    get partialMessageTimeout() {\r\n        return this._partialMessageTimeout;\r\n    }\r\n    listen(callback) {\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', (data) => {\r\n            this.onData(data);\r\n        });\r\n        this.readable.on('error', (error) => this.fireError(error));\r\n        this.readable.on('close', () => this.fireClose());\r\n    }\r\n    onData(data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                let headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                let contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                let length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't recevied the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    }\r\n    clearPartialMessageTimer() {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    }\r\n    setPartialMessageTimer() {\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout((token, timeout) => {\r\n            this.partialMessageTimer = undefined;\r\n            if (token === this.messageToken) {\r\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    }\r\n}\r\nexports.StreamMessageReader = StreamMessageReader;\r\nclass IPCMessageReader extends AbstractMessageReader {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose());\r\n    }\r\n    listen(callback) {\r\n        this.process.on('message', callback);\r\n    }\r\n}\r\nexports.IPCMessageReader = IPCMessageReader;\r\nclass SocketMessageReader extends StreamMessageReader {\r\n    constructor(socket, encoding = 'utf-8') {\r\n        super(socket, encoding);\r\n    }\r\n}\r\nexports.SocketMessageReader = SocketMessageReader;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet ContentLength = 'Content-Length: ';\r\nlet CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nclass AbstractMessageWriter {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Writer recevied error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nclass StreamMessageWriter extends AbstractMessageWriter {\r\n    constructor(writable, encoding = 'utf8') {\r\n        super();\r\n        this.writable = writable;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.writable.on('error', (error) => this.fireError(error));\r\n        this.writable.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nclass IPCMessageWriter extends AbstractMessageWriter {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        this.errorCount = 0;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose);\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, (error) => {\r\n                    this.sending = false;\r\n                    if (error) {\r\n                        this.errorCount++;\r\n                        this.fireError(error, msg, this.errorCount);\r\n                    }\r\n                    else {\r\n                        this.errorCount = 0;\r\n                    }\r\n                    if (this.queue.length > 0) {\r\n                        this.doWriteMessage(this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nclass SocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket, encoding = 'utf8') {\r\n        super();\r\n        this.socket = socket;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.socket.on('error', (error) => this.fireError(error));\r\n        this.socket.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', (error) => {\r\n                if (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    this.socket.write(json, this.encoding, (error) => {\r\n                        this.sending = false;\r\n                        if (error) {\r\n                            this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            this.errorCount = 0;\r\n                        }\r\n                        if (this.queue.length > 0) {\r\n                            this.doWriteMessage(this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    }\r\n    handleError(error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    }\r\n}\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nclass ResponseError extends Error {\r\n    constructor(code, message, data) {\r\n        super(message);\r\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        this.data = data;\r\n        Object.setPrototypeOf(this, ResponseError.prototype);\r\n    }\r\n    toJson() {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    }\r\n}\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nclass AbstractMessageType {\r\n    constructor(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    get method() {\r\n        return this._method;\r\n    }\r\n    get numberOfParams() {\r\n        return this._numberOfParams;\r\n    }\r\n}\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n */\r\nclass RequestType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType0 = RequestType0;\r\nclass RequestType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType = RequestType;\r\nclass RequestType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType1 = RequestType1;\r\nclass RequestType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType2 = RequestType2;\r\nclass RequestType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType3 = RequestType3;\r\nclass RequestType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType4 = RequestType4;\r\nclass RequestType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType5 = RequestType5;\r\nclass RequestType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType6 = RequestType6;\r\nclass RequestType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType7 = RequestType7;\r\nclass RequestType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType8 = RequestType8;\r\nclass RequestType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType9 = RequestType9;\r\nclass NotificationType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType = NotificationType;\r\nclass NotificationType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType0 = NotificationType0;\r\nclass NotificationType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType1 = NotificationType1;\r\nclass NotificationType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType2 = NotificationType2;\r\nclass NotificationType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType3 = NotificationType3;\r\nclass NotificationType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType4 = NotificationType4;\r\nclass NotificationType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType5 = NotificationType5;\r\nclass NotificationType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType6 = NotificationType6;\r\nclass NotificationType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType7 = NotificationType7;\r\nclass NotificationType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType8 = NotificationType8;\r\nclass NotificationType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    let candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst os_1 = require(\"os\");\r\nconst crypto_1 = require(\"crypto\");\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n","import { TextEditor } from 'atom';\r\nimport { AutoLanguageClient, ConnectionType, LanguageServerProcess } from 'atom-languageclient';\r\nimport { isAbsolute, join } from 'path';\r\nimport { existsSync } from 'fs';\r\n\r\nexport class KosLanguageClient extends AutoLanguageClient {\r\n  getGrammarScopes(): string[] { return ['source.kos']; }\r\n  getLanguageName(): string { return 'Kerbal Operating System'; }\r\n  getServerName(): string { return 'kos-language-server'; }\r\n  getConnectionType(): ConnectionType { return 'ipc'; }\r\n\r\n  startServerProcess(): LanguageServerProcess {\r\n    console.log(\"start server process\");\r\n\r\n    return super.spawnChildNode(\r\n      [atom.config.get('language-kos.kosServer.path'), '--node-ipc'],\r\n      { stdio: [null, null, null, 'ipc'] },\r\n    ) as LanguageServerProcess;\r\n  }\r\n\r\n  shouldStartForEditor(editor: TextEditor) {\r\n    console.log(\"should start editor\");\r\n\r\n    if (!this.validateKosServerPath()) return false;\r\n    return super.shouldStartForEditor(editor);\r\n  }\r\n\r\n  validateKosServerPath(): boolean {\r\n    console.log(\"validate kos server path\");\r\n\r\n    const kosSpecifiedPath = atom.config.get('language-kos.kosServer.path');\r\n    const isAbsolutelySpecified = isAbsolute(kosSpecifiedPath);\r\n    const kosAbsolutePath = isAbsolutelySpecified\r\n      ? kosSpecifiedPath\r\n      : join(__dirname, '..', kosSpecifiedPath);\r\n\r\n    if (existsSync(kosAbsolutePath)) return true;\r\n\r\n    atom.notifications.addError('language-kos could not locate the kos-language-server', {\r\n      dismissable: true,\r\n      buttons: [\r\n        { text: 'Set KOS server path', onDidClick: () => this.openPackageSettings() },\r\n      ],\r\n      description:\r\n        `No KOS server could be found at <b>${kosAbsolutePath}</b>`,\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  openPackageSettings() {\r\n    console.log(\"open package settings\");\r\n\r\n    atom.workspace.open('atom://config/packages/language-kos');\r\n  }\r\n}\r\n","module.exports = require(\"assert\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"url\");"],"sourceRoot":""}